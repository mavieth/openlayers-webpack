{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events/EventTarget.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/@turf/turf/turf.min.js","webpack:///./node_modules/ol/interaction/Translate.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Extent.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/interaction/DragRotateAndZoom.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","boundingExtent","coordinates","extent","createEmpty","ii","length","extendCoordinate","buffer","opt_extent","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","Math","min","max","forEachCorner","callback","opt_this","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","xs","ys","apply","_boundingExtentXYs","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","push","listenOnce","unlisten","key","indexOf","splice","unlistenAll","__webpack_exports__","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","_transform_js__WEBPACK_IMPORTED_MODULE_4__","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","available","referenceFont","measureText","width","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","clear","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","fontFamily","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","span","heights","measureTextHeight","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","rotateAtOffset","offsetX","offsetY","translate","rotate","resetTransform","drawImage","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","IDLE","LOADING","LOADED","EMPTY","ABORT","VERSION","uidCounter_","getUid","obj","ol_uid","clamp","cosh","exp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","a","b","lerp","tmp_","create","reset","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","e","f","setFromArray","compose","dx1","dy1","sx","sy","angle","dx2","dy2","invert","det","TRUE","FALSE","UNDEFINED","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","coordinate_add","delta","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","opt_func","opt_strict","compare","every","currentVal","res","assign","var_sources","arguments$1","arguments","TypeError","output","source","getValues","values","_has_js__WEBPACK_IMPORTED_MODULE_3__","altShiftKeysOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","always","_functions_js__WEBPACK_IMPORTED_MODULE_2__","mouseActionButton","button","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","pointerEvent","pointerType","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assert","assertion","errorCode","Projection_Projection","options","this","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","epsg3857_RADIUS","epsg3857_HALF_SIZE","epsg3857_EXTENT","epsg3857_WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","__proto__","constructor","epsg3857_PROJECTIONS","epsg3857_fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","projections2","forwardTransform","inverseTransform","transforms_transforms","transforms_add","destination","sourceCode","destinationCode","proj_cloneTransform","proj_identityTransform","proj_addProjection","projection","projections_add","proj_get","projectionLike","projections_get","proj_getPointResolution","opt_units","pointResolution","toEPSG4326","proj_getTransformFromProjections","vertices","sphere","proj_addEquivalentProjections","projections","forEach","proj_addProjections","proj_createProjection","defaultCode","proj_equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","proj_getTransform","proj_transform","proj_transformExtent","ol_extent","ANIMATING","INTERACTING","_math_js__WEBPACK_IMPORTED_MODULE_3__","Interaction","BaseObject","map_","setActive","handleEvent","getActive","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_2__","ACTIVE","getMap","active","setMap","map","_Object_js__WEBPACK_IMPORTED_MODULE_0__","pan","view","opt_duration","currentCenter","constrainCenter","animate","duration","easing","_easing_js__WEBPACK_IMPORTED_MODULE_1__","setCenter","opt_anchor","rotateWithoutConstraints","constrainRotation","currentRotation","getRotation","anchor","zoom","opt_direction","zoomWithoutConstraints","constrainResolution","zoomByDelta","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","Property","CollectionEvent","Event","opt_element","element","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","array","getArray","item","insertAt","elem","dispatchEvent","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","ADD","removeAt","prev","REMOVE","setAt","opt_except","_Object_js__WEBPACK_IMPORTED_MODULE_2__","XY","XYZ","XYM","XYZM","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","oldValue","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","Observable","opt_values","_util_js__WEBPACK_IMPORTED_MODULE_0__","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","PROPERTYCHANGE","opt_silent","unset","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","changeEventTypeCache","handleDragEvent","_functions_js__WEBPACK_IMPORTED_MODULE_0__","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__","isPointerDraggingEvent","event","id","pointerId","toString","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_3__","centroid","pointerEvents","clientX","clientY","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_2__","stopEvent","handledUp","handled","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","MSPOINTER","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","TOUCH","POINTER","propagationStopped","stopPropagation","preventDefault","geom_LinearRing","SimpleGeometry","LinearRing","opt_layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","getRevision","sqrt","closest","flat_area","getCoordinates","inflate","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplify","GeometryLayout","getType","GeometryType","intersectsExtent","setLayout","deflate","changed","geom_SimpleGeometry","Polygon_makeRegular","Polygon_Polygon","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getFlatCoordinates","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","ends","linearRings","simplifiedEnds","intersectsextent","Polygon_fromExtent","Polygon_fromCircle","circle","opt_sides","opt_angle","sides","getStride","getLayout","arrayLength","polygon","getRadius","radius","startAngle","getFontFamilies","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","family","split","METERS_PER_UNIT","FEET","PIXELS","TILE_PIXELS","USFEET","easeIn","pow","easeOut","inAndOut","linear","ENABLE_RASTER_REPROJECTION","ERROR_THRESHOLD","MapBrowserPointerEvent","MapBrowserEvent","opt_dragging","opt_frameState","_color_js__WEBPACK_IMPORTED_MODULE_0__","asColorLike","color","CanvasPattern","CanvasGradient","isColorLike","_math_js__WEBPACK_IMPORTED_MODULE_0__","assignClosest","offset1","offset2","i$1","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","NaN","assignClosestArrayPoint","assignClosestMultiArrayPoint","transform2D","opt_dest","dest","anchorX","anchorY","_obj_js__WEBPACK_IMPORTED_MODULE_5__","Geometry","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_1__","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","opt_sy","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","transformGeom2D","simpleGeometry","Circle","RegularShape","CircleStyle","points","fill","snapToPixel","stroke","atlasManager","getFill","getStroke","getSnapToPixel","atlasManager_","setOpacity","getOpacity","setScale","getScale","setRadius","radius_","render_","Style_createEditingStyle","Style_Style","geometry_","geometryFunction_","Style_defaultGeometryFunction","geometry","setGeometry","fill_","image_","renderer_","renderer","stroke_","text_","zIndex_","zIndex","Style_toFunction","styleFunction","styles","asserts","getGeometry","getImage","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","Style_defaultStyles","Style_createDefaultStyle","Fill","Stroke","white","blue","concat","hasArea","ratio","opt_size","toSize","_style_Style_js__WEBPACK_IMPORTED_MODULE_5__","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","handleGeometryChanged_","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_4__","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","setId","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","opt_coordinatesss","coordinatesss","featureloader_xhr","url","format","success","failure","xhr","XMLHttpRequest","open","FormatType","ARRAY_BUFFER","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","bind","onerror","send","featureloader_loadFeaturesXhr","features","dataProjection","addFeatures","functions","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","insert","util","load","extents","items","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","result","ol_obj","rbush","structs_RBush","Vector_VectorSourceEvent","VectorSourceEvent","opt_feature","Vector_VectorSource","Source","VectorSource","attributions","state","State","READY","wrapX","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","source_Source","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","events","EventType","handleFeatureChange_","ObjectEventType","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","IMAGE","TILE","VECTOR_TILE","VECTOR","disable","none","createSnapToN","theta","floor","createSnapToZero","opt_tolerance","tolerance","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","deflateMultiCoordinatesArray","opt_endss","_math_js__WEBPACK_IMPORTED_MODULE_4__","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","POSTCOMPOSE","PRECOMPOSE","RENDER","default","quickselect","maxEntries","_maxEntries","_minEntries","ceil","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","right","stack","_all","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","join","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","RenderType","VectorLayer","Layer","baseOptions","_obj_js__WEBPACK_IMPORTED_MODULE_3__","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_1__","getSource","orient_linearRingIsClockwise","edge","orient_linearRingIsOriented","isClockwise","orient_linearRingsAreOriented","orient_orientLinearRings","orient_orientLinearRingsArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","cacheSize","normalize","g","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","_array_js__WEBPACK_IMPORTED_MODULE_0__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","forEachSegment","_geom_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinateAtM","opt_extrapolate","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","extrapolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","getCoordinateAt","fraction","_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","BaseLayer","_obj_js__WEBPACK_IMPORTED_MODULE_6__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_Property_js__WEBPACK_IMPORTED_MODULE_5__","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","getState","handleSourceChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","layerState","managed","frameState","layerStatesArray","layerStates","_util_js__WEBPACK_IMPORTED_MODULE_2__","render","_layer_Base_js__WEBPACK_IMPORTED_MODULE_4__","visibleAtResolution","visible","minResolution","maxResolution","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","snap","round","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","EventTarget","Disposable","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","color_","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","checksum_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","TileRange","tileRange","tileCoord","containsTileRange","getSize","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","dispatcher","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","EventSource","mapping","lastTouches","lts","cloneEvent","pd","isPrimary","_color_js__WEBPACK_IMPORTED_MODULE_1__","mapping_","getEvents","getHandlerForEvent","interpolatePoint","pointX","pointY","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","interpolate","MapEvent","DEFAULT_TILE_SIZE","DEFAULT_MAX_ZOOM","_flat_segments_js__WEBPACK_IMPORTED_MODULE_2__","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRingArray","_flat_contains_js__WEBPACK_IMPORTED_MODULE_1__","intersectsLinearRing","intersectsLinearRingMultiArray","_transform_js__WEBPACK_IMPORTED_MODULE_6__","tmpTransform","extentRevision_","getClosestPoint","opt_closestPoint","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_7__","MultiPoint","appendPoint","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__","getPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_3__","getPoints","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","twiceArea","linearRingss","dispose","disposed_","DEFAULT_RADIUS","getDistance","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","Circle_Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","geom_Circle","Draw_createBox","Draw_Mode","Draw_DrawEventType","Draw_DrawEvent","DrawEvent","Draw_Draw","Draw","Draw_handleDownEvent","Draw_handleEvent","Draw_handleUpEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode_","mode","Draw_getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","ol_coordinate","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","Style","geometryName","condition_","condition","freehandCondition_","freehand","freehandCondition","ol_Object","updateState_","handlePointerMove_","downPx","clickPx","pixel","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","updateSketchFeatures_","startDrawing_","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","MultiLineString","MultiPolygon","lineString","sketchFeatures","overlaySource","Pointer","MapBrowserEventType","pass","Date","now","clearTimeout","setTimeout","circleMode","Draw_createRegularPolygon","boxCoordinates","Image_ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","getRotateWithView","getAnchor","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setRotation","setSnapToPixel","listenImageChange","thisArg","unlistenImageChange","RegularShape_RegularShape","ImageStyle","checksums_","canvas_","hitDetectionCanvas_","origin_","points_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","getRadius2","getAngle","ImageState","imageSize","strokeStyle","strokeWidth","colorlike","renderOptions","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","add","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","centerconstraint_none","ViewProperty","View_isNoopAnimation","View_DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","proj","applyOptions_","resolutionConstraintInfo","View_createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","View_createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","View_createRotationConstraint","constraints_","Number","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","isDef","setZoom","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterRotate","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","opt_delta","getConstraints","getHints","opt_hints","calculateExtent","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","centerOn","centerX","centerY","hint","z","resolutionconstraint_createSnapToResolutions","defaultMaxResolution","common","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","resolutionconstraint_createSnapToPower","enableRotation","rotationconstraint","MultiPolygon_MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","flatCenters","center_linearRingss","getInteriorPoints","getPolygon","prevEnds","getPolygons","polygons","lastEnds","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__","appendLineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","opt_interpolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","getLineString","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_4__","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","_source_State_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","attributions_","adaptAttributions_","state_","wrapX_","attributionLike","getAttributions","getWrapX","refresh","setAttributions","setState","_Object_js__WEBPACK_IMPORTED_MODULE_1__","forEachFeatureAtCoordinate","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_1__","lineStringLength","browserEvent","getEventPixel","getCoordinateFromPixel","dragging","_layer_Property_js__WEBPACK_IMPORTED_MODULE_1__","layer","_math_js__WEBPACK_IMPORTED_MODULE_2__","sourceState","getVisible","setMaxResolution","setMinResolution","setVisible","zindex","ret","getInteriorPointOfArray","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","revision_","on","once","un","AssertionError","Error","message","TileProperty","Tile_TileLayer","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","LayerType","getPreload","getUseInterimTilesOnError","layer_Layer","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","Feature_transformWithOptions","write","transformed","geom_Geometry","decimals","JSONFeature_getObject","parse","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_cloneGeometries","geometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","GeoJSON_readGeometry","geometry_name","geoJSONFeatures","crs","GeoJSON_writeGeometry","objects","GeoJSON_GEOMETRY_READERS","GeoJSON_GEOMETRY_WRITERS","rightHanded","geometryReader","geometryWriter","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getKey","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","events_EventTarget","ImageTile_getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","opt_tileCoord","getKeyZXY","ol_TileCache","TileCache","expireCache","usedTiles","zKey","pruneExceptNewestZ","fromKey","reproj_enlargeClipPoint","centroidX","centroidY","dX","dY","Triangulation_Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","ol_proj","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","reproj_Triangulation","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","reproj_calculateSourceResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","unlistenSources_","reproject_","sources","getTileSize","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","p0","p1","p2","moveTo","clip","restore","reproj_render","leftToLoad","sourceListenKey","tileurlfunction_createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","tileurlfunction_createFromTemplates","templates","tileUrlFunctions","hash","tileurlfunction_createFromTileUrlFunctions","tileurlfunction_nullTileUrlFunction","TileGrid_tmpTileCoord","TileGrid_TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","tilegrid_common","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","ol_size","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","tilegrid_getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","tilegrid_resolutionsFromExtent","tilegrid_createForExtent","tilegrid_extentFromProjection","tilegrid_createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutter","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","projectionExtent","worldWidth","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","Tile_TileSourceEvent","TileSourceEvent","TileEventType","UrlTile_UrlTile","UrlTile","tileUrlFunction","fixedTileUrlFunction","urls","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","tileState","setTileLoadFunction","opt_key","match","exec","charCode","startCharCode","charCodeAt","stopCharCode","String","fromCharCode","stop","tileurlfunction_expandUrl","TileImage_defaultTileLoadFunction","imageTile","source_XYZ","TileImage","tilegrid_createXYZ","reprojectionErrorThreshold","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","OSM_ATTRIBUTION","OSM_OSM","OSM","MsSource_POINTER_TYPES","MsSource_msPointerDown","prepareEvent_","MsSource_msPointerMove","MsSource_msPointerUp","cleanup","MsSource_msPointerOut","MsSource_msPointerOver","MsSource_msPointerCancel","MsSource_msLostPointerCapture","makeEvent","MsSource_msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","NativeSource_pointerDown","fireNativeEvent","NativeSource_pointerMove","NativeSource_pointerUp","NativeSource_pointerOut","NativeSource_pointerOver","NativeSource_pointerCancel","NativeSource_lostPointerCapture","NativeSource_gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_HAS_BUTTONS","PointerEvent_PointerEvent","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","TouchSource_touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","TouchSource_touchmove","moveOverOut_","TouchSource_touchend","upOut_","TouchSource_touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","PointerEventHandler_CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_EventType","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","PluggableMap_createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","interactionsArray","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","pixelResolution","skippedFeatureUids","renderFrame","setLayerGroup","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","unskipFeature","control_Control","Control","target_","listenerKeys","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","ol_Kinetic","DoubleClickZoom_handleEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","DoubleClickZoom","DragPan_handleDragEvent","lastPointersCount_","kinetic_","lastCentroid","DragPan_handleUpEvent","noKinetic_","centerpx","DragPan_handleDownEvent","interaction_DragPan","DragPan","kinetic","events_condition","DragRotate_handleDragEvent","lastAngle_","DragRotate_handleUpEvent","DragRotate_handleDownEvent","interaction_DragRotate","DragRotate","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBox_DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBox_DragBoxEvent","DragBoxEvent","DragBox_defaultBoxEndCondition","minArea_","DragBox_handleDragEvent","box_","DragBox_handleUpEvent","boxEndCondition_","onBoxEnd_","DragBox_handleDownEvent","DragZoom_onBoxEnd","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragBox","DragZoom","onBoxEnd","boxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_Mode","TRACKPAD","MouseWheelZoom_handleEvent","wheelEvent","useAnchor_","lastAnchor_","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","startTime_","trackpadEventGap_","trackpadTimeoutId_","decrementInteractingHint_","trackpadDeltaPerZoom_","rebound","trackpadZoomBuffer_","constrainResolution_","timeLeft","timeout_","timeoutId_","handleWheelZoom_","interaction_MouseWheelZoom","MouseWheelZoom","timeout","useAnchor","setMouseAnchor","PinchRotate_handleDragEvent","rotationDelta","touch0","touch1","rotationDelta_","rotating_","threshold_","PinchRotate_handleUpEvent","PinchRotate_handleDownEvent","interaction_PinchRotate","PinchRotate","threshold","PinchZoom_handleDragEvent","scaleDelta","lastDistance_","lastScaleDelta_","PinchZoom_handleUpEvent","PinchZoom_handleDownEvent","interaction_PinchZoom","PinchZoom","ol_ImageBase","ImageBase","getPixelRatio","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache_IconImageCache","cache_","cacheSize_","maxCacheSize_","IconImageCache_getKey","ol_color","expire","iconImage","maxCacheSize","IconImageCache_shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","Map_expireIconCache","Map_sortByZIndex","state1","state2","Map_layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","getTransform","composeEvent","clearRect","render_EventType","prepareFrame","composeFrame","numLayers","forEachLayerAtCoordinate","ctor","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","updateUsedTiles","manageTilePyramid","currentZ","opt_tileCallback","canvas_Layer","CanvasLayerRenderer","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","tilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","alphaChanged","ReplayGroup_ReplayGroup","getReplay","replayType","render_ReplayGroup","ReplayType","DEFAULT","textpath_drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","replay_ORDER","replay_TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","ReplayGroup_BATCH_CONSTRUCTORS","Default","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","TextReplay_measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","ReplayGroup_circleArrayCache","arraySize","error","ReplayGroup_fillCircleArrayRowToMiddle","ReplayGroup_getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","vector_SIMPLIFY_TOLERANCE","vector_GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","vector_defaultOrder","feature1","feature2","vector_getSquaredTolerance","vector_getTolerance","vector_renderFeature","loading","vector_renderGeometry","vector_renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","renderFeature","VectorTileRenderType","HYBRID","VectorTileLayer_IMAGE_REPLAYS","hybrid","VectorTileLayer_VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","zIndexKeys","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","ReplayGroup_replayDeclutter","renderedTileRevision","pixelScale","VectorTileLayer","Map_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","util_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","I","C","u","qo","_","v","E","Bo","S","L","P","O","R","T","A","D","F","q","G","B","X","U","Y","V","H","W","J","Z","K","Q","Xo","Uo","verbose","console","rows","cols","cells","cval","nt","et","flipped","$","successCallback","ot","st","ut","yt","ct","ht","pt","ft","gt","dt","_t","Yo","mt","vt","_down","xt","is","ts","Vo","Nt","It","shift","next","Ct","ns","Et","St","wt","Mt","dist","peek","bt","os","Lt","concavity","ss","Pt","ignoreBoundary","Ot","Rt","Tt","Dt","At","__sentinel","Ft","qt","Gt","Bt","zt","kt","jt","Xt","hs","cs","arcs","Yt","Vt","Ht","Wt","Jt","Zt","Qt","$t","mutate","Kt","ws","geoms","ps","te","ee","ne","re","oe","ie","se","ae","ue","sharpness","bs","ce","he","le","pe","fe","steps","ge","final","de","ye","me","ve","xe","steiner","be","Ne","Le","Pe","Ee","we","Ie","prevZ","nextZ","Ce","Re","Se","Me","Ae","Oe","Te","De","holes","dimensions","Is","Fe","featureIndex","distanceToPoint","qe","Ge","Be","ke","ze","je","Ze","Xe","Ue","Ye","Ve","He","We","Je","Ke","Qe","$e","tn","en","reduce","nn","rn","location","sn","an","Fo","cn","ln","hn","pn","gn","mercator","dn","yn","_n","mn","vn","xn","En","Ss","bn","In","Nn","ignoreEndVertices","Cn","Mn","Sn","Ln","Pn","precision","On","Rn","Tn","An","Fn","Dn","qn","Gn","Bn","kn","zn","jn","autoComplete","orderCoords","Xn","Un","Yn","Hn","Vn","Wn","Gs","Jn","Zn","getTime","strict","Kn","Bs","Qn","copy","$n","tr","er","nr","ir","or","sr","ar","ur","hr","ks","lr","Sa","Na","Ia","La","Ca","Ma","Pa","cval_real","topleft","topright","righttop","rightbottom","bottomright","bottomleft","leftbottom","lefttop","edges","Ra","pr","Xs","Us","Ys","js","ea","na","ra","Qs","$s","ta","fa","ga","ha","la","pa","Vs","Hs","Ws","Oa","Js","Zs","Ks","ia","oa","sa","aa","ca","fr","pivot","gr","dr","yr","_r","vr","mr","xr","sign","Er","wr","br","Ir","Nr","Cr","Lr","Sr","Mr","Pr","Or","Rr","ka","Tr","ja","Ar","Dr","Fr","qr","nodes","diagonal","grid","Gr","init","weight","Br","content","scoreFunction","kr","zr","jr","Xr","Ur","Yr","Vr","Hr","uu","Jr","su","halfedges","Wr","Zr","Kr","Qr","site","$r","ti","ei","pu","cu","cy","au","iu","ni","ri","hu","ou","oi","lu","si","ai","ui","ci","li","pi","fi","gi","di","medianCandidates","yi","_i","random","Ei","mi","vi","num_vertices","max_radial_length","xi","max_length","max_rotation","wi","Ci","bi","Ni","Ii","Si","Mi","Li","Pi","Oi","Ri","Ti","Ac","Ai","Di","Fi","qi","Gi","root_","Bi","ki","vc","addAll","zi","ji","Xi","Ui","Yi","Vi","Hi","kf","Wi","Ji","eg","Zi","lineStart","lineEnd","Ki","polygonStart","polygonEnd","Qi","Hf","$i","Wf","Kf","to","eo","no","ro","io","Qf","Bf","jf","so","rg","uo","co","ao","ho","Gf","po","go","yo","_o","mo","stream","vo","ng","vg","xo","Uf","Eg","gg","Ng","Cg","clipAngle","wg","Xf","Yf","pg","lg","sg","og","rejoin","hg","ug","fo","fitExtent","fitSize","Eo","Zf","$f","wo","bo","No","So","bh","read","gp","bufferOp","Io","Ih","Co","Sg","Mo","Df","union","Lo","Cf","Po","Oo","triangles","Ro","geojson","To","Ao","Do","meters","metres","millimeters","millimetres","centimeters","centimetres","kilometers","kilometres","miles","nauticalmiles","inches","yards","feet","radians","degrees","Go","acres","ko","freeze","earthRadius","factors","unitsFactors","areaFactors","featureCollection","multiLineString","multiPoint","multiPolygon","radiansToLength","lengthToRadians","lengthToDegrees","bearingToAzimuth","radiansToDegrees","degreesToRadians","convertLength","convertArea","isNumber","isObject","validateBBox","validateId","radians2degrees","degrees2radians","distanceToDegrees","distanceToRadians","radiansToDistance","bearingToAngle","convertDistance","zo","coordEach","coordReduce","propEach","propReduce","featureEach","featureReduce","coordAll","geomEach","geomReduce","flattenEach","flattenReduce","segmentEach","segmentReduce","lineEach","lineReduce","jo","getCoord","getCoords","containsNumber","geojsonType","featureOf","collectionOf","getGeom","getGeomType","it","Ho","Wo","Jo","Zo","Ko","Qo","$o","es","rs","_up","as","us","ls","fs","LN2","maybeSet","gs","ds","ArrayBuffer","Float64Array","_s","Uint32Array","ms","rings","Int32Array","Int8Array","vs","1","Es","centers","stepLength","cacheSteps","speed","Ns","deviation","flatten","Cs","toMercator","toWgs84","Ls","winding","netWinding","Ms","Ps","Os","param","coord","nxtIsectAlongEdgeIn","nxtIsectAlongRingAndEdge2","ringAndEdge1","ringAndEdgeIn","nxtIsectAlongRingAndEdge1","isect","ringAndEdge1Walkable","ringAndEdge2","ringAndEdge2Walkable","ringAndEdgeOut","Rs","Ts","As","antipode","Ds","move_to","Fs","json","wkt","substring","qs","Arc","polyline","ya","_a","ma","va","xa","Ea","wa","ba","Ta","buildId","innerEdges","outerEdges","outerEdgesSorted","removeInnerEdge","from","removeOuterEdge","addOuterEdge","sortOuterEdges","getOuterEdges","getOuterEdge","addInnerEdge","Aa","symetric","getSymetric","deleteEdge","isEqual","toLineString","compareTo","Da","envelope","Fa","some","isValid","isHole","toMultiPoint","toPolygon","getEnvelope","findEdgeRingContaining","find","inside","defineProperties","qa","fromGeoJson","getNode","addEdge","deleteDangles","_removeIfDangle","deleteCutEdges","_computeNextCWEdges","_findLabeledEdgeRings","removeEdge","_computeNextCCWEdges","getEdgeRings","_findIntersectionNodes","_findEdgeRing","Ga","shim","Ba","propertyIsEnumerable","supported","unsupported","za","pseudoNode","objectComparator","compareCoord","compareLine","comparePolygon","compareFeature","toFixed","removePseudo","fixStartIndex","comparePath","compareBBox","Xa","dataset","epsilon","minPts","_euclideanDistance","clusters","noise","_visited","_assigned","_datasetLength","_init","run","_regionQuery","_addToCluster","_expandCluster","_mergeArrays","Ua","assignments","centroids","randomCentroid","getClusters","argmin","MAX_VALUE","Ya","_queue","_priorities","_sorting","_insertAt","getElements","getElementPriority","getPriorities","getElementsWithPriorities","Va","_reachability","_processed","_coreDistance","_orderedList","_distanceToCore","_updateQueue","getReachabilityPlot","Ha","DBSCAN","KMEANS","OPTICS","Wa","Ja","Za","Ka","eu","Qa","$a","idxs","nu","cleanDirty","heuristic","heuristics","manhattan","neighbors","isWall","getCost","visited","markDirty","rescoreElement","cleanNode","dirtyNodes","sinkDown","bubbleUp","ru","links","_found","gu","randomPosition","randomPoint","randomPolygon","randomLineString","du","getCluster","clusterEach","clusterReduce","createBins","applyFilter","propertiesContainsFilter","filterProperties","writable","isInteger","trunc","yu","interfaces_","getClass","equalsWithTolerance","_u","mu","vu","doubleToLongBits","longBitsToDouble","isInfinite","xu","Eu","wu","bu","NULL_ORDINATE","Iu","DimensionalComparator","serialVersionUID","setOrdinate","equals2D","getOrdinate","equals3D","equalInZ","distance3D","hashCode","setCoordinate","Nu","_dimensionsToTest","Cu","Su","Mu","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","Lu","Pu","Ou","LOG_10","log10","wrap","average","Ru","str","append","setCharAt","substr","Tu","intValue","Au","isWhitespace","toUpperCase","Du","_hi","_lo","Fu","TWO_PI","PI_2","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","extractSignificantDigits","magnitude","divide","subtract","valueOf","selfAdd","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","dump","createNaN","selfMultiply","reciprocal","rint","setValue","isNegative","selfSqr","toStandardNotation","toSciNotation","stringOfChar","isPositive","signum","isDigit","qu","Gu","DP_SAFE_EPSILON","orientationIndex","orientationIndexFilter","signOfDet2x2","Bu","ku","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","getY","toCoordinateArray","zu","ju","Xu","arraycopy","getProperty","line.separator","Uu","Yu","_minx","_maxx","_miny","_maxy","Vu","isNull","getMaxX","getMaxY","getMinX","getMinY","covers","expandToInclude","minExtent","setToNull","expandBy","centre","Hu","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","Wu","geometryFactory","_h","Zu","extractGeometry","getGeometryType","Ju","_coordinates","multipoint","_geometries","linestring","_points","linearring","multilinestring","_shell","_holes","multipolygon","geometrycollection","createPoint","trim","createMultiPoint","createLineString","createLinearRing","createMultiLineString","createPolygon","createMultiPolygon","createGeometryCollection","Ku","parser","Qu","$u","tc","shouldNeverReachHere","isTrue","ec","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","nc","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","computeIntLineIndex","getTopologySummary","isEndPoint","isCollinear","computeIntersection","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","isInteriorIntersection","computeEdgeDistance","getEndpoint","isIntersection","getIntersectionAlongSegment","nonRobustComputeEdgeDistance","rc","isInSegmentEnvelopes","sc","normalizeToMinimum","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","checkDD","println","normalizeToEnvCentre","computeCollinearIntersection","distancePointLine","ic","oc","_p","_crossingCount","_isPointOnSegment","countSegment","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","ac","CLOCKWISE","COUNTERCLOCKWISE","STRAIGHT","signedArea","distanceLineLine","isPointInRing","computeLength","isCCW","computeOrientation","distancePointLinePerpendicular","isOnLine","uc","_envelope","_factory","_SRID","_userData","getSRID","hc","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getNumGeometries","compareToSameClass","getUserData","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","getPrecisionModel","computeEnvelopeInternal","setSRID","setUserData","iterator","hasNext","isGeometryCollectionOrDerived","hasNonEmptyElements","hasNullElements","lc","pc","fc","gc","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","dc","yc","_c","mc","toArray","xc","Ec","wc","ensureCapacity","Ic","arrayList_","position_","Nc","coordArrayType","closeRing","Cc","Sc","ForwardComparator","BidirectionalComparator","Mc","Lc","ptNotInList","scroll","hasRepeatedPoints","removeRepeatedPoints","removeNull","copyDeep","isEqualReversed","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","extract","OLDcompare","Pc","put","entrySet","Oc","Rc","Tc","hashSet_","getValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","Dc","Fc","treeSet_","qc","asList","Gc","Bc","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","toDimensionValue","kc","zc","isDone","isGeometryChanged","jc","getNumPoints","isEquivalentClass","getBoundaryDimension","getBoundary","Xc","isClosed","Uc","_geom","_geomFact","_bnRule","_endpointMap","boundaryMultiLineString","getEmptyMultiPoint","computeBoundaryCoordinates","createMultiPointFromCoords","Jc","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","Yc","Vc","Hc","NEWLINE","SIMPLE_ORDINATE_FORMAT","getStackTrace","printStackTrace","readLine","Wc","copyCoord","swap","ensureValidRing","createClosedRing","isSimple","getPointN","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Zc","Kc","Qc","$c","getNumInteriorRing","convexHull","getExteriorRing","getInteriorRingN","th","eh","validateConstruction","MINIMUM_VALID_SIZE","nh","rh","_isUserDataCopied","ih","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","edit","editInternal","editGeometryCollection","editPolygon","getName","GeometryEditorOperation","oh","sh","ah","editCoordinates","uh","_dimension","ch","hh","lh","instanceObject","readResolve","instance","ph","entries","fh","_modelType","_scale","FLOATING","FIXED","gh","maximumPreciseValue","getMaximumSignificantDigits","isFloating","FLOATING_SINGLE","mostPrecise","_name","nameToTypeMap","yh","Type","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","mh","buildGeometry","toGeometryArray","toPolygonArray","toLineStringArray","toPointArray","createGeometry","toMultiPolygonArray","toMultiLineStringArray","toMultiPointArray","toLinearRingArray","createPointFromInternalCoord","vh","xh","Eh","wh","FeatureCollection","precisionModel","reducePrecision","Nh","Ch","ON","opposite","empty","Sh","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","findRightmostEdgeAtNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","Mh","msgWithCoord","Lh","addLast","removeFirst","Ph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","isVisited","computeDepths","copySymDepths","computeDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","setDepth","getNodes","getDirectedEdges","Oh","setAllLocations","setAllLocationsIfNull","isLine","merge","getLocations","flip","setLocations","isArea","isAnyNull","setLocation","isEqualOnSide","allPositionsEqual","Rh","elt","getGeometryCount","toLine","toLineLabel","Th","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","computeMaxNodeDegree","getOutgoingDegree","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","setShell","Ah","setMinEdgeRing","getNextMin","Dh","buildMinimalRings","getMinEdgeRing","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","Fh","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","computeIM","isInResult","qh","_coord","isIncidentEdgeInResult","print","computeMergedLocation","setNode","setLabelBoundary","Gh","nodeMap","nodeFact","addNode","getBoundaryNodes","Bh","kh","NE","NW","SW","SE","isNorthern","isOpposite","commonHalfPlane","isInHalfPlane","quadrant","zh","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","compareDirection","getDy","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","jh","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","setNextMin","getDepthDelta","isLineEdge","printEdge","printReverse","setSym","setVisitedEdge","setNext","depthFactor","Xh","Uh","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","insertEdge","findEdgeEnd","addEdges","Yh","_shellList","sortShellsAndHoles","computePolygons","placeFreeHoles","buildMinimalEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","Vh","getBounds","Hh","_bounds","_item","getItem","Wh","_size","_items","poll","reorder","Jh","visitItem","Zh","query","Kh","_childBoundables","_level","Qh","getLevel","getChildBoundables","addChildBoundable","computeBounds","$h","reverseOrder","singletonList","tl","_boundable1","_boundable2","_distance","_itemDistance","expandToQueue","isComposite","expand","isLeaves","getBoundable","el","_root","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nl","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","itemsTree","boundablesAtLevel","getIntersectsOp","createHigherLevels","getRoot","createParentBoundables","depth","getComparator","compareDoubles","rl","il","ol","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","createParentBoundablesFromVerticalSlice","sl","verticalSlices","nearestNeighbour","POSITIVE_INFINITY","centreX","avg","centreY","al","relativeSign","compareValue","ul","_segString","segmentIndex","_segmentOctant","_isInterior","isInterior","cl","_nodeMap","getSplitCoordinates","addEndpoints","addEdgeCoordinates","addCollapsedNodes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","addSplitEdges","createSplitEdge","findCollapseIndex","fl","getData","getSegmentOctant","checkSplitEdgesCorrectness","hl","octant","ll","setData","pl","addIntersection","_nodeList","_data","safeOctant","addIntersectionNode","getNodeList","addIntersections","getNodedSubstrings","gl","dl","isVertical","project","projectionFactor","distancePerpendicular","midPoint","closestPoints","lineIntersection","pointAlongOffset","segmentFraction","isHorizontal","pointAlong","yl","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","getLineSegment","_l","_start","_end","_context","_id","computeSelect","select","computeOverlaps","computeOverlapsInternal","getEndIndex","getStartIndex","ml","getChainStartIndices","findChainEnd","toIntArray","getChains","vl","computeNodes","xl","_segInt","setSegmentIntersector","El","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","intersectChains","wl","_si","processIntersections","bl","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","Il","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","getJoinStyle","setSimplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","Nl","_distanceTol","_isDeleted","_angleOrientation","_inputLine","Cl","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","findNextNonDeletedIndex","isShallowConcavity","collapseLine","Sl","_ptList","_minimimVertexDistance","Ml","COORDINATE_ARRAY_TYPE","addPt","isRedundant","revere","addPts","setMinimumVertexDistance","Ll","Pl","PI_TIMES_2","PI_OVER_2","PI_OVER_4","isAcute","isObtuse","interiorAngle","normalizePositive","angleBetween","diff","getTurn","angleBetweenOriented","Ol","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","MAX_CLOSING_SEG_LEN_FACTOR","Rl","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","computeOffsetSegment","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","addFilletArc","addMitreJoin","addLimitedMitreJoin","addFilletCorner","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","createCircle","hasNarrowConcaveAngle","Tl","getOffsetCurve","getSegGen","computePointCurve","computeOffsetCurve","computeSingleSidedBufferCurve","simplifyTolerance","computeRingBufferCurve","computeLineBufferCurve","getLineCurve","getBufferParameters","getRingCurve","copyCoordinates","Al","_subgraphs","_seg","_cga","Dl","DepthSegment","findStabbedSegments","Fl","_leftDepth","_upwardSeg","compareX","ql","interpolateZ","longestSideLength","circumcentre","area3D","inCentre","perpendicularBisector","angleBisector","Gl","_inputGeom","_curveBuilder","_curveList","addPoint","addCurve","addPolygon","isErodedCompletely","addPolygonRing","isTriangleErodedCompletely","addLineString","getCurves","addCollection","Bl","locate","kl","_parent","_atStart","_max","_subcollectionIterator","isAtomic","zl","containsPointInPolygon","jl","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","propagateSideLabels","isAreaLabelsConsistent","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","findIndex","computeLabelling","getDegree","insertEdgeEnd","Xl","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","updateLabelling","mergeSymLabels","findCoveredLineEdges","Ul","Yl","_orientation","orientation","compareOriented","Vl","_ocaMap","findEdgeIndex","findEqualEdge","Hl","Wl","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","Jl","getSegmentIndex","Zl","pts","ep","Kl","Ql","env1","env2","computeIntersectsForChain","getStartIndexes","computeIntersects","$l","NULL_VALUE","tp","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","setIsolated","setName","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","np","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","depthDelta","buildSubgraphs","createSubgraphs","createEmptyResultGeometry","getNoder","computeNodedEdges","setNoder","convertSegStrings","rp","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","isIntegerPrecision","rescale","ip","_segStrings","op","fact","checkEndPtVertexIntersections","checkInteriorIntersections","checkValid","checkCollapses","checkCollapse","sp","_pt","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","ap","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","intersectsToleranceSquare","copyScaled","getSafeEnvelope","intersectsPixelClosure","addSnappedNode","selectedSegment","cp","hp","HotPixelSnapAction","lp","isNodeAdded","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","pp","_interiorIntersections","getInteriorIntersections","fp","_pm","_pointSnapper","checkCorrectness","snapRound","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","_argGeom","_resultGeometry","_saveException","dp","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","bufferReducedPrecision","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","getResultGeometry","yp","_isNull","setMinimum","initialize","setMaximum","computeDistance","mp","_maxPtDist","vp","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","Ep","getMaxPointDistance","computeMaxVertexDistance","xp","findDistance","getDistancePoints","_minPtDist","wp","_comps","bp","_lines","_isForcedToLineString","setForceToLineString","getLines","Ip","_boundaryRule","_isIn","_numBoundaries","locateInternal","locateInPolygonRing","updateLocationInfo","computeLocation","Np","_component","_segIndex","INSIDE_AREA","Cp","isInsideArea","getGeometryComponent","Sp","Mp","_locations","Lp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","computeContainmentDistance","computeMinDistanceLinesPoints","computeMinDistance","computeFacetDistance","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","isWithinDistance","Pp","Op","Rp","_g0","_g1","_ptDist","_densifyFrac","Tp","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","compute","computeOrientedDistance","Ap","Dp","orientedDistance","_euclideanDist","_numSubSegs","Fp","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","qp","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","checkPositiveValid","checkNegativeValid","getPolygonLines","checkMinimumDistance","getErrorIndicator","getErrorLocation","getErrorMessage","Gp","_errorMsg","Bp","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","report","isValidMsg","kp","zp","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","setKeepIntersections","isEndSegment","createAllIntersectionsFinder","createAnyIntersectionFinder","createIntersectionCounter","jp","execute","computeIntersections","Xp","_nv","toSegmentStrings","Up","_mapOp","Yp","_op","_lineEdgesList","_resultLineList","collectLines","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","getArgGeometry","buildLines","isResultOfOp","isCoveredByA","labelIsolatedLines","INTERSECTION","Vp","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","Hp","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","Wp","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","snapVertices","findSnapForVertex","snapTo","snapSegments","findSegmentIndexToSnap","setAllowSnappingToSourceVertices","Jp","_srcGeom","Zp","SNAP_PRECISION_FACTOR","extractTargetCoordinates","Kp","snapToSelf","computeSnapTolerance","computeMinimumSegmentLength","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","_snapPts","_isSelfSnap","snapLine","Qp","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","toBinaryString","getBit","$p","_commonCoord","_ccFilter","ef","tf","CommonCoordinateFilter","Translater","addCommonBits","nf","removeCommonBits","getCommonCoordinate","_commonBitsX","_commonBitsY","trans","rf","_cbr","selfSnap","prepareResult","overlayOp","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","of","sf","mce","chainIndex","af","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","INSERT","uf","isDelete","setDeleteEventIndex","getObject","getInsertEvent","isInsert","isSameLabel","getDeleteEventIndex","cf","hf","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","setIsDoneIfProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","lf","nOverlaps","prepareEvents","processOverlaps","pf","_min","NEGATIVE_INFINITY","ff","NodeComparator","getMin","getMax","gf","df","yf","_node1","_node2","buildExtent","_f","_leaves","buildTree","buildLevel","buildRoot","printNode","mf","getItems","vf","wf","xf","SegmentVisitor","IntervalIndexedGeometry","Ef","_counter","addLine","bf","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","insertBoundaryPoint","determineBoundary","computeSelfNodes","createEdgeSetIntersector","addSelfIntersectionNodes","computeSplitEdges","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","If","_resultPrecisionModel","_arg","setComputationPrecision","Nf","MapOp","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","createEmptyResult","replaceCollapsedEdges","updateNodeLabelling","computeOverlay","insertUniqueEdges","copyPoints","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","labelIncompleteNode","resultDimension","Sf","_g","_boundaryDistanceTolerance","_linework","extractLinework","isWithinToleranceOfBoundary","Mf","getLinework","Lf","_doLeft","_doRight","extractPoints","computeOffsetPoints","setSidesToGenerate","Pf","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","Of","reportResult","addTestPts","hasLocation","isValidResult","getInvalidLocation","Rf","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","combine","createList","Tf","_inputPolys","Af","STRTREE_NODE_CAPACITY","reduceToGeometries","unionTree","extractByEnvelope","unionOptimized","unionActual","unionUsingEnvelopeIntersection","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","bufferUnion","Ff","qf","zf","Vf","Jf","tg","Sphere","ig","ag","cg","fg","dg","yg","mg","xg","clean","bg","Ig","helpers","invariant","meta","isolines","zProperty","commonProperties","breaksProperties","flags","matrixPosition","rt","convex","pointsWithinPolygon","concave","maxEdge","collect","highQuality","bezierSpline","tag","sample","square","centerOfMass","_e","collectedProperties","explode","tesselate","bboxPolygon","booleanPointInPolygon","nearestPoint","nearestPointOnLine","nearestPointToLine","planepoint","tin","kinks","onLine1","onLine2","pointOnFeature","along","lineSlice","lineSliceAlong","pointGrid","truncate","lineIntersect","lineChunk","unkinkPolygon","greatCircle","npoints","lineSegment","lineSplit","lineArc","polygonToLine","lineToPolygon","bboxClip","lineOverlap","sector","rhumbBearing","rhumbDistance","rhumbDestination","polygonTangents","rewind","isobands","cr","lrCoordinates","grouped","groupedRings","transformRotate","transformScale","transformTranslate","zTranslation","lineOffset","polygonize","booleanDisjoint","booleanContains","booleanCrosses","booleanClockwise","booleanOverlap","booleanPointOnLine","booleanEqual","booleanWithin","cleanCoords","clustersDbscan","cluster","dbscan","clustersKmeans","numberOfClusters","pointToLineDistance","booleanParallel","shortestPath","obstacles","voronoi","fu","ellipse","centerMean","centerMedian","counter","standardDeviationalEllipse","meanCenterCoordinates","semiMajorAxis","semiMinorAxis","numberOfFeatures","percentageWithinEllipse","intersect","dissolve","propertyName","origIndexPosition","hexGrid","squareGrid","triangleGrid","gridType","pointOnSurface","polygonToLineString","lineStringToPolygon","within","bezier","pointOnLine","lineDistance","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_7__","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","lastCoordinate_","_array_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_4__","layerFilter_","hitTolerance_","lastFeature_","_events_js__WEBPACK_IMPORTED_MODULE_2__","handleActiveChanged_","featuresAtPixel_","getHitTolerance","setHitTolerance","oldMap","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_6__","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","newCoordinate","geom","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_14__","Snap","_functions_js__WEBPACK_IMPORTED_MODULE_7__","vertex_","vertex","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","pixelTolerance","sortByDistance_","deltaA","_coordinate_js__WEBPACK_IMPORTED_MODULE_3__","segment","deltaB","rBush_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeGeometryCollectionGeometry_","writeCircleGeometry_","opt_listen","register","feature_uid","segmentWriter","_extent_js__WEBPACK_IMPORTED_MODULE_6__","_events_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","handleFeatureAdd_","_source_Vector_js__WEBPACK_IMPORTED_MODULE_12__","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","handleFeatureRemove_","updateFeature_","opt_unlisten","unregister","rBush","nodesToRemove","currentMap","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_13__","ADDFEATURE","REMOVEFEATURE","pixelCoordinate","lowerLeft","upperRight","segments","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_8__","pixel1","pixel2","squaredDist1","squaredDist2","snapped","vertexPixel","closestSegment","isCircle","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_9__","segmentData","kk","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_10__","featuresToUpdate","_obj_js__WEBPACK_IMPORTED_MODULE_11__","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","selected","deselected","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","Select","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","_functions_js__WEBPACK_IMPORTED_MODULE_6__","featureOverlay","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_array_js__WEBPACK_IMPORTED_MODULE_2__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","featureOverlay_","featureLayerAssociation_","_events_js__WEBPACK_IMPORTED_MODULE_3__","addFeature_","removeFeature_","addFeatureLayerAssociation_","selectedFeatures","removeFeatureLayerAssociation_","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_9__","Modify","_events_condition_js__WEBPACK_IMPORTED_MODULE_11__","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_19__","snappedToVertex_","changingFeature_","dragSegments_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_16__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_17__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__","_events_js__WEBPACK_IMPORTED_MODULE_8__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_18__","handleSourceAdd_","handleSourceRemove_","lastPointerEvent_","handlePointerAtPixel_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_10__","willModifyFeatures_","removeFeatureSegmentData_","_extent_js__WEBPACK_IMPORTED_MODULE_12__","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","_Feature_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","pointDistanceToSegmentDataSquared","closestOnSegmentData","_coordinate_js__WEBPACK_IMPORTED_MODULE_7__","vertexSegments","insertVertex_","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_4__","removeVertex_","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","_array_js__WEBPACK_IMPORTED_MODULE_6__","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_15__","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","closestVertex","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_5__","pointCoordinates","distanceToCenterSquared","distanceToCircumference","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","extentFeature_","extentOverlay_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","boxStyle","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_6__","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","getSegments","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_9__","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","_extent_js__WEBPACK_IMPORTED_MODULE_5__","fixedPoint","fixedP1","fixedP2","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","DragRotateAndZoom","_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","lastMagnitude_","_rotationconstraint_js__WEBPACK_IMPORTED_MODULE_0__","angleDelta","_ViewHint_js__WEBPACK_IMPORTED_MODULE_1__","EXTENSIONS","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","MAX_TEXTURE_SIZE","DEBUG","HAS","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","_proj_js__WEBPACK_IMPORTED_MODULE_5__","DragAndDropEventType","DragAndDropEvent","file","opt_features","_events_Event_js__WEBPACK_IMPORTED_MODULE_2__","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","handleResult_","formatConstructor","tryReadFeatures_","registerListeners_","dropArea","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","handleDrop","handleStop","unregisterListeners_","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_4__","files","dataTransfer","reader","FileReader","readAsText","dropEffect","two_rectangles","_turf","_Draw","COLORS","red","green","inputJson","Thresholder","_classCallCheck","_vectorSource","_Vector4","_GeoJSON2","_vectorLayer","_Vector2","_Style2","_Fill2","_turfFeatureCollection","_this","olFeature","draw","thresholder","fmt","keyMappings","isDeleting","drawStyle","drawSource","drawLayer","_Map2","_View2","_Tile2","_OSM2","getVectorLayer","handleDrawEnd","turfpoly","turf","feat","combo","currentFeature","multiFeatureIndex","flatFeaturesCollection","_RegularShape2","_Stroke2","_Draw2","createBox","newZoom"],"mappings":"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","file":"main.d12bce0de0e284630f56.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.1.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array.<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object.<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object.<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object.<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array.<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      snapToPixel: options.snapToPixel,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      snapToPixel: this.getSnapToPixel(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object.<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = UNDEFINED;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  return VectorSource;\n}(Source));\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  var this$1 = this;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (var i = 0, length = features.length; i < length; i++) {\n    var feature = features[i];\n    var featureKey = getUid(feature).toString();\n    if (this$1.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n    var feature$1 = newFeatures[i$1];\n    var featureKey$1 = getUid(feature$1).toString();\n    this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n    var geometry = feature$1.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature$1);\n    } else {\n      this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n    this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  var this$1 = this;\n\n  if (opt_fast) {\n    for (var featureId in this$1.featureChangeKeys_) {\n      var keys = this$1.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this$1.nullGeometryFeatures_) {\n        this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {module:ol/Feature} */ (event.target);\n  var featureKey = getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  var id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    var featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  var this$1 = this;\n\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var loop = function ( i, ii ) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  };\n\n  for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  var featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  var this$1 = this;\n\n  var removed = false;\n  for (var id in this$1.idIndex_) {\n    if (this$1.idIndex_[id] === feature) {\n      delete this$1.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\n//# sourceMappingURL=EventType.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n  *     style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        layerState.zIndex = Infinity;\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar EventTarget = (function (Disposable) {\n  function EventTarget() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create( Disposable && Disposable.prototype );\n  EventTarget.prototype.constructor = EventTarget;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  EventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EventTarget.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  EventTarget.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  EventTarget.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable));\n\n\nexport default EventTarget;\n\n//# sourceMappingURL=EventTarget.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array.<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object.<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Translate the geometry. This modifies the geometry coordinates in place.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array.<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array.<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable () {};\n\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    var sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  var move = event.type === MapBrowserEventType.POINTERMOVE;\n  var pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    var now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  var pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = coordinates[0];\n    var end = coordinates[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return this.snapToPixel_;\n};\n\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\nImageStyle.prototype.load = function load () {};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      snapToPixel: snapToPixel\n    });\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      snapToPixel: this.getSnapToPixel(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object.<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array.<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        series[0].callback(false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          setTimeout(function() {\n            callback(true);\n          }, 0);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array.<number>=} opt_hints Destination array.\n   * @return {Array.<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array.<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState () {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: center.slice(),\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : UNDEFINED;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      setTimeout(callback.bind(undefined, true), 0);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<Array.<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array.<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array.<Array.<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array.<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array.<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array.<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/source/Source\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array.<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array.<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array.<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object.<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] =\n       options.zIndex !== undefined ? options.zIndex : 0;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex();\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array.<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function getType () {};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = (function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array.<module:ol/Feature>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {};\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {};\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {};\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {};\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {};\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {};\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {};\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = (function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/geom/Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * Translate the geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = (function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object.type === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n        type: 'Feature',\n        geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n      });\n    }\n\n    var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name);\n    }\n    feature.setGeometry(geometry);\n    if (geoJSONFeature.id !== undefined) {\n      feature.setId(geoJSONFeature.id);\n    }\n    if (geoJSONFeature.properties) {\n      feature.setProperties(geoJSONFeature.properties);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array.<module:ol/Feature>} */\n    var features = null;\n    if (geoJSONObject.type === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection.features;\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    var crs = geoJSONObject.crs;\n    var projection;\n    if (crs) {\n      if (crs.type == 'name') {\n        projection = getProjection(crs.properties.name);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    var object = /** @type {GeoJSONFeature} */ ({\n      'type': 'Feature'\n    });\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    } else {\n      object.geometry = null;\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    } else {\n      object.properties = null;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: objects\n    });\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n  */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object.<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * @param {module:ol/TileState} state State.\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutter = function getGutter (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array.<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array.<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array.<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutter = function getGutter (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutterInternal();\n    }\n  };\n\n  /**\n   * @protected\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutterInternal = function getGutterInternal () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object.<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('DIV');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('DIV');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('DIV');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection.<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object.<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState();\n      var focus = this.focus_;\n      if (!focus) {\n        focus = viewState.center;\n        var pixelResolution = viewState.resolution / this.pixelRatio_;\n        focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n        focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n      }\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: focus,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : UNDEFINED;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== UNDEFINED) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('UL');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array.<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object.<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array.<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('LI');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageSnapToPixel_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (this$1.imageSnapToPixel_) {\n        x = Math.round(x);\n        y = Math.round(y);\n      }\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array.<number>} padding Padding.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array.<number>} dashArray Dash array.\n   * @return {Array.<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array.<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array.<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array.<*>} instructions Instructions array.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n   *     featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var snapToPixel = /** @type {boolean} */ (instruction[14]);\n          var width = /** @type {number} */ (instruction[15]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array.<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array.<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array.<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.snapToPixel_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.snapToPixel_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.snapToPixel_ = imageStyle.getSnapToPixel();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object.<string, Object.<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, true, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, true, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object.<string, boolean>} */\n    var features = {};\n\n    /** @type {Array.<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.turf={})}(this,function(t){\"use strict\";function e(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.bbox,i=n.id;if(void 0===t)throw new Error(\"geometry is required\");if(e&&e.constructor!==Object)throw new Error(\"properties must be an Object\");r&&N(r),i&&C(i);var o={type:\"Feature\"};return i&&(o.id=i),r&&(o.bbox=r),o.properties=e||{},o.geometry=t,o}function n(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var i=n.bbox;if(!t)throw new Error(\"type is required\");if(!e)throw new Error(\"coordinates is required\");if(!Array.isArray(e))throw new Error(\"coordinates must be an Array\");i&&N(i);var s;switch(t){case\"Point\":s=r(e).geometry;break;case\"LineString\":s=a(e).geometry;break;case\"Polygon\":s=o(e).geometry;break;case\"MultiPoint\":s=l(e).geometry;break;case\"MultiLineString\":s=h(e).geometry;break;case\"MultiPolygon\":s=p(e).geometry;break;default:throw new Error(t+\" is invalid\")}return i&&(s.bbox=i),s}function r(t,n,r){if(!t)throw new Error(\"coordinates is required\");if(!Array.isArray(t))throw new Error(\"coordinates must be an Array\");if(t.length<2)throw new Error(\"coordinates must be at least 2 numbers long\");if(!b(t[0])||!b(t[1]))throw new Error(\"coordinates must contain numbers\");return e({type:\"Point\",coordinates:t},n,r)}function i(t,e,n){if(!t)throw new Error(\"coordinates is required\");if(!Array.isArray(t))throw new Error(\"coordinates must be an Array\");return c(t.map(function(t){return r(t,e)}),n)}function o(t,n,r){if(!t)throw new Error(\"coordinates is required\");for(var i=0;i<t.length;i++){var o=t[i];if(o.length<4)throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");for(var s=0;s<o[o.length-1].length;s++){if(0===i&&0===s&&!b(o[0][0])||!b(o[0][1]))throw new Error(\"coordinates must contain numbers\");if(o[o.length-1][s]!==o[0][s])throw new Error(\"First and last Position are not equivalent.\")}}return e({type:\"Polygon\",coordinates:t},n,r)}function s(t,e,n){if(!t)throw new Error(\"coordinates is required\");if(!Array.isArray(t))throw new Error(\"coordinates must be an Array\");return c(t.map(function(t){return o(t,e)}),n)}function a(t,n,r){if(!t)throw new Error(\"coordinates is required\");if(t.length<2)throw new Error(\"coordinates must be an array of two or more positions\");if(!b(t[0][1])||!b(t[0][1]))throw new Error(\"coordinates must contain numbers\");return e({type:\"LineString\",coordinates:t},n,r)}function u(t,e,n){if(!t)throw new Error(\"coordinates is required\");if(!Array.isArray(t))throw new Error(\"coordinates must be an Array\");return c(t.map(function(t){return a(t,e)}),n)}function c(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.bbox,r=e.id;if(!t)throw new Error(\"No features passed\");if(!Array.isArray(t))throw new Error(\"features must be an Array\");n&&N(n),r&&C(r);var i={type:\"FeatureCollection\"};return r&&(i.id=r),n&&(i.bbox=n),i.features=t,i}function h(t,n,r){if(!t)throw new Error(\"coordinates is required\");return e({type:\"MultiLineString\",coordinates:t},n,r)}function l(t,n,r){if(!t)throw new Error(\"coordinates is required\");return e({type:\"MultiPoint\",coordinates:t},n,r)}function p(t,n,r){if(!t)throw new Error(\"coordinates is required\");return e({type:\"MultiPolygon\",coordinates:t},n,r)}function f(t,n,r){if(!t)throw new Error(\"geometries is required\");if(!Array.isArray(t))throw new Error(\"geometries must be an Array\");return e({type:\"GeometryCollection\",geometries:t},n,r)}function g(t,e){if(void 0===t||null===t||isNaN(t))throw new Error(\"num is required\");if(e&&!(e>=0))throw new Error(\"precision must be a positive number\");var n=Math.pow(10,e||0);return Math.round(t*n)/n}function d(t,e){if(void 0===t||null===t)throw new Error(\"radians is required\");if(e&&\"string\"!=typeof e)throw new Error(\"units must be a string\");var n=qo[e||\"kilometers\"];if(!n)throw new Error(e+\" units is invalid\");return t*n}function y(t,e){if(void 0===t||null===t)throw new Error(\"distance is required\");if(e&&\"string\"!=typeof e)throw new Error(\"units must be a string\");var n=qo[e||\"kilometers\"];if(!n)throw new Error(e+\" units is invalid\");return t/n}function _(t,e){return v(y(t,e))}function m(t){if(null===t||void 0===t)throw new Error(\"bearing is required\");var e=t%360;return e<0&&(e+=360),e}function v(t){if(null===t||void 0===t)throw new Error(\"radians is required\");return 180*(t%(2*Math.PI))/Math.PI}function x(t){if(null===t||void 0===t)throw new Error(\"degrees is required\");return t%360*Math.PI/180}function E(t,e,n){if(null===t||void 0===t)throw new Error(\"length is required\");if(!(t>=0))throw new Error(\"length must be a positive number\");return d(y(t,e),n||\"kilometers\")}function w(t,e,n){if(null===t||void 0===t)throw new Error(\"area is required\");if(!(t>=0))throw new Error(\"area must be a positive number\");var r=Bo[e||\"meters\"];if(!r)throw new Error(\"invalid original units\");var i=Bo[n||\"kilometers\"];if(!i)throw new Error(\"invalid final units\");return t/r*i}function b(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function I(t){return!!t&&t.constructor===Object}function N(t){if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be an Array\");if(4!==t.length&&6!==t.length)throw new Error(\"bbox must be an Array of 4 or 6 numbers\");t.forEach(function(t){if(!b(t))throw new Error(\"bbox must only contain numbers\")})}function C(t){if(!t)throw new Error(\"id is required\");if(-1===[\"string\",\"number\"].indexOf(typeof t))throw new Error(\"id must be a number or a string\")}function S(t,e,n){if(null!==t)for(var r,i,o,s,a,u,c,h,l=0,p=0,f=t.type,g=\"FeatureCollection\"===f,d=\"Feature\"===f,y=g?t.features.length:1,_=0;_<y;_++){a=(h=!!(c=g?t.features[_].geometry:d?t.geometry:t)&&\"GeometryCollection\"===c.type)?c.geometries.length:1;for(var m=0;m<a;m++){var v=0,x=0;if(null!==(s=h?c.geometries[m]:c)){u=s.coordinates;var E=s.type;switch(l=!n||\"Polygon\"!==E&&\"MultiPolygon\"!==E?0:1,E){case null:break;case\"Point\":e(u,p,_,v,x),p++,v++;break;case\"LineString\":case\"MultiPoint\":for(r=0;r<u.length;r++)e(u[r],p,_,v,x),p++,\"MultiPoint\"===E&&v++;\"LineString\"===E&&v++;break;case\"Polygon\":case\"MultiLineString\":for(r=0;r<u.length;r++){for(i=0;i<u[r].length-l;i++)e(u[r][i],p,_,v,x),p++;\"MultiLineString\"===E&&v++,\"Polygon\"===E&&x++}\"Polygon\"===E&&v++;break;case\"MultiPolygon\":for(r=0;r<u.length;r++){for(\"MultiPolygon\"===E&&(x=0),i=0;i<u[r].length;i++){for(o=0;o<u[r][i].length-l;o++)e(u[r][i][o],p,_,v,x),p++;x++}v++}break;case\"GeometryCollection\":for(r=0;r<s.geometries.length;r++)S(s.geometries[r],e,n);break;default:throw new Error(\"Unknown Geometry Type\")}}}}}function M(t,e,n,r){var i=n;return S(t,function(t,r,o,s,a){i=0===r&&void 0===n?t:e(i,t,r,o,s,a)},r),i}function L(t,e){var n;switch(t.type){case\"FeatureCollection\":for(n=0;n<t.features.length;n++)e(t.features[n].properties,n);break;case\"Feature\":e(t.properties,0)}}function P(t,e,n){var r=n;return L(t,function(t,i){r=0===i&&void 0===n?t:e(r,t,i)}),r}function O(t,e){if(\"Feature\"===t.type)e(t,0);else if(\"FeatureCollection\"===t.type)for(var n=0;n<t.features.length;n++)e(t.features[n],n)}function R(t,e,n){var r=n;return O(t,function(t,i){r=0===i&&void 0===n?t:e(r,t,i)}),r}function T(t){var e=[];return S(t,function(t){e.push(t)}),e}function A(t,e){var n,r,i,o,s,a,u,c,h,l,p=0,f=\"FeatureCollection\"===t.type,g=\"Feature\"===t.type,d=f?t.features.length:1;for(n=0;n<d;n++){for(a=f?t.features[n].geometry:g?t.geometry:t,c=f?t.features[n].properties:g?t.properties:{},h=f?t.features[n].bbox:g?t.bbox:void 0,l=f?t.features[n].id:g?t.id:void 0,s=(u=!!a&&\"GeometryCollection\"===a.type)?a.geometries.length:1,i=0;i<s;i++)if(null!==(o=u?a.geometries[i]:a))switch(o.type){case\"Point\":case\"LineString\":case\"MultiPoint\":case\"Polygon\":case\"MultiLineString\":case\"MultiPolygon\":e(o,p,c,h,l);break;case\"GeometryCollection\":for(r=0;r<o.geometries.length;r++)e(o.geometries[r],p,c,h,l);break;default:throw new Error(\"Unknown Geometry Type\")}else e(null,p,c,h,l);p++}}function D(t,e,n){var r=n;return A(t,function(t,i,o,s,a){r=0===i&&void 0===n?t:e(r,t,i,o,s,a)}),r}function F(t,n){A(t,function(t,r,i,o,s){var a=null===t?null:t.type;switch(a){case null:case\"Point\":case\"LineString\":case\"Polygon\":return void n(e(t,i,{bbox:o,id:s}),r,0)}var u;switch(a){case\"MultiPoint\":u=\"Point\";break;case\"MultiLineString\":u=\"LineString\";break;case\"MultiPolygon\":u=\"Polygon\"}t.coordinates.forEach(function(t,o){n(e({type:u,coordinates:t},i),r,o)})})}function q(t,e,n){var r=n;return F(t,function(t,i,o){r=0===i&&0===o&&void 0===n?t:e(r,t,i,o)}),r}function G(t,e){F(t,function(t,n,r){var i=0;if(t.geometry){var o=t.geometry.type;\"Point\"!==o&&\"MultiPoint\"!==o&&M(t,function(o,s,u,c,h,l){var p=a([o,s],t.properties);return e(p,n,r,l,i),i++,s})}})}function B(t,e,n){var r=n,i=!1;return G(t,function(t,o,s,a,u){r=!1===i&&void 0===n?t:e(r,t,o,s,a,u),i=!0}),r}function k(t,e){if(!t)throw new Error(\"geojson is required\");F(t,function(t,n,r){if(null!==t.geometry){var i=t.geometry.type,o=t.geometry.coordinates;switch(i){case\"LineString\":e(t,n,r,0,0);break;case\"Polygon\":for(var s=0;s<o.length;s++)e(a(o[s],t.properties),n,r,s)}}})}function z(t,e,n){var r=n;return k(t,function(t,i,o,s){r=0===i&&void 0===n?t:e(r,t,i,o,s)}),r}function j(t){var e=[1/0,1/0,-1/0,-1/0];return S(t,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}function X(t){if(!t)throw new Error(\"obj is required\");var e=U(t);if(e.length>1&&b(e[0])&&b(e[1]))return e;throw new Error(\"Coordinate is not a valid Point\")}function U(t){if(!t)throw new Error(\"obj is required\");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return Y(e),e;throw new Error(\"No valid coordinates\")}function Y(t){if(t.length>1&&b(t[0])&&b(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return Y(t[0]);throw new Error(\"coordinates must only contain numbers\")}function V(t,e,n){if(!e||!n)throw new Error(\"type and name required\");if(!t||t.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+t.type)}function H(t,e,n){if(!t)throw new Error(\"No feature passed\");if(!n)throw new Error(\".featureOf() requires a name\");if(!t||\"Feature\"!==t.type||!t.geometry)throw new Error(\"Invalid input to \"+n+\", Feature with geometry required\");if(!t.geometry||t.geometry.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+t.geometry.type)}function W(t,e,n){if(!t)throw new Error(\"No featureCollection passed\");if(!n)throw new Error(\".collectionOf() requires a name\");if(!t||\"FeatureCollection\"!==t.type)throw new Error(\"Invalid input to \"+n+\", FeatureCollection required\");for(var r=0;r<t.features.length;r++){var i=t.features[r];if(!i||\"Feature\"!==i.type||!i.geometry)throw new Error(\"Invalid input to \"+n+\", Feature with geometry required\");if(!i.geometry||i.geometry.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+i.geometry.type)}}function J(t){if(!t)throw new Error(\"geojson is required\");if(void 0!==t.geometry)return t.geometry;if(t.coordinates||t.geometries)return t;throw new Error(\"geojson must be a valid Feature or Geometry Object\")}function Z(){throw new Error(\"invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType\")}function K(t,e){if(!t)throw new Error((e||\"geojson\")+\" is required\");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||\"geojson\")+\" is invalid\")}function Q(t,e,n){n=n||{};for(var r=Object.keys(Xo),i=0;i<r.length;i++){var o=r[i],s=n[o];s=void 0!==s&&null!==s?s:Xo[o],Uo[o]=s}Uo.verbose&&console.log(\"MarchingSquaresJS-isoContours: computing isocontour for \"+e);var a=function(t){var e=[],n=0;t.rows,t.cols;return t.cells.forEach(function(r,i){r.forEach(function(r,o){if(void 0!==r&&!function(t){return 5===t.cval||10===t.cval}(r)&&!tt(r)){var s=function(t,e,n){var r,i,o,s=t.length,a=[],u=[0,0,1,1,0,0,0,0,-1,0,1,1,-1,0,-1,0],c=[0,-1,0,0,1,1,1,1,0,-1,0,0,0,-1,0,0],h=[\"none\",\"bottom\",\"right\",\"right\",\"top\",\"top\",\"top\",\"top\",\"left\",\"bottom\",\"right\",\"right\",\"left\",\"bottom\",\"left\",\"none\"],l=(t[e][n],t[e][n]),p=l.cval,f=nt(l,o=[\"none\",\"left\",\"bottom\",\"left\",\"right\",\"none\",\"bottom\",\"left\",\"top\",\"top\",\"none\",\"top\",\"right\",\"right\",\"bottom\",\"none\"][p]);a.push([n+f[0],e+f[1]]),f=nt(l,o=h[p]),a.push([n+f[0],e+f[1]]),et(l);for(var g=n+u[p],d=e+c[p],y=p;g>=0&&d>=0&&d<s&&(g!=n||d!=e)&&void 0!==(l=t[d][g]);){if(0===(p=l.cval)||15===p)return{path:a,info:\"mergeable\"};o=h[p],r=u[p],i=c[p],5!==p&&10!==p||(5===p?l.flipped?-1===c[y]?(o=\"left\",r=-1,i=0):(o=\"right\",r=1,i=0):-1===u[y]&&(o=\"bottom\",r=0,i=-1):10===p&&(l.flipped?-1===u[y]?(o=\"top\",r=0,i=1):(o=\"bottom\",r=0,i=-1):1===c[y]&&(o=\"left\",r=-1,i=0))),f=nt(l,o),a.push([g+f[0],d+f[1]]),et(l),g+=r,d+=i,y=p}return{path:a,info:\"closed\"}}(t.cells,i,o),a=!1;if(\"mergeable\"===s.info)for(var u=s.path[s.path.length-1][0],c=s.path[s.path.length-1][1],h=n-1;h>=0;h--)if(Math.abs(e[h][0][0]-u)<=1e-7&&Math.abs(e[h][0][1]-c)<=1e-7){for(var l=s.path.length-2;l>=0;--l)e[h].unshift(s.path[l]);a=!0;break}a||(e[n++]=s.path)}})}),e}(function(t,e){for(var n=t.length-1,r=t[0].length-1,i={rows:n,cols:r,cells:[]},o=0;o<n;++o){i.cells[o]=[];for(var s=0;s<r;++s){var a=0,u=t[o+1][s],c=t[o+1][s+1],h=t[o][s+1],l=t[o][s];if(!(isNaN(u)||isNaN(c)||isNaN(h)||isNaN(l))){a|=u>=e?8:0,a|=c>=e?4:0,a|=h>=e?2:0;var p=!1;if(5===(a|=l>=e?1:0)||10===a){var f=(u+c+h+l)/4;5===a&&f<e?(a=10,p=!0):10===a&&f<e&&(a=5,p=!0)}if(0!==a&&15!==a){var g,d,y,_;g=d=y=_=.5,1===a?(y=1-$(e,u,l),d=1-$(e,h,l)):2===a?(d=$(e,l,h),_=1-$(e,c,h)):3===a?(y=1-$(e,u,l),_=1-$(e,c,h)):4===a?(g=$(e,u,c),_=$(e,h,c)):5===a?(g=$(e,u,c),_=$(e,h,c),d=1-$(e,h,l),y=1-$(e,u,l)):6===a?(d=$(e,l,h),g=$(e,u,c)):7===a?(y=1-$(e,u,l),g=$(e,u,c)):8===a?(y=$(e,l,u),g=1-$(e,c,u)):9===a?(d=1-$(e,h,l),g=1-$(e,c,u)):10===a?(g=1-$(e,c,u),_=1-$(e,c,h),d=$(e,l,h),y=$(e,l,u)):11===a?(g=1-$(e,c,u),_=1-$(e,c,h)):12===a?(y=$(e,l,u),_=$(e,h,c)):13===a?(d=1-$(e,h,l),_=$(e,h,c)):14===a?(y=$(e,l,u),d=$(e,l,h)):console.log(\"MarchingSquaresJS-isoContours: Illegal cval detected: \"+a),i.cells[o][s]={cval:a,flipped:p,top:g,right:_,bottom:d,left:y}}}}}return i}(t,e));return\"function\"==typeof Uo.successCallback&&Uo.successCallback(a),a}function $(t,e,n){return(t-e)/(n-e)}function tt(t){return 0===t.cval||15===t.cval}function et(t){tt(t)||5===t.cval||10===t.cval||(t.cval=15)}function nt(t,e){return\"top\"===e?[t.top,1]:\"bottom\"===e?[t.bottom,0]:\"right\"===e?[1,t.right]:\"left\"===e?[0,t.left]:void 0}function rt(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.zProperty||\"elevation\",r=e.flip,i=e.flags;W(t,\"Point\",\"input must contain Points\");for(var o=function(t,e){var n={};O(t,function(t){var e=U(t)[1];n[e]||(n[e]=[]),n[e].push(t)});return Object.keys(n).map(function(t){var e=n[t],r=e.sort(function(t,e){return U(t)[0]-U(e)[0]});return r}).sort(function(t,n){return e?U(t[0])[1]-U(n[0])[1]:U(n[0])[1]-U(t[0])[1]})}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],c=[],h=0;h<u.length;h++){var l=u[h];l.properties[n]?c.push(l.properties[n]):c.push(0),!0===i&&(l.properties.matrixPosition=[a,h])}s.push(c)}return s}function it(t,e,n,r,i){for(n=n||0,r=r||t.length-1,i=i||function(t,e){return t<e?-1:t>e?1:0};r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);it(t,e,Math.max(n,Math.floor(e-s*u/o+c)),Math.min(r,Math.floor(e+(o-s)*u/o+c)),i)}var h=t[e],l=n,p=r;for(ot(t,n,e),i(t[r],h)>0&&ot(t,n,r);l<p;){for(ot(t,l,p),l++,p--;i(t[l],h)<0;)l++;for(;i(t[p],h)>0;)p--}0===i(t[n],h)?ot(t,n,p):ot(t,++p,r),p<=e&&(n=p+1),e<=p&&(r=p-1)}}function ot(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function st(t,e){if(!(this instanceof st))return new st(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function at(t,e){ut(t,0,t.children.length,e,t)}function ut(t,e,n,r,i){i||(i=yt(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],ct(i,t.leaf?r(o):o);return i}function ct(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ht(t,e){return t.minX-e.minX}function lt(t,e){return t.minY-e.minY}function pt(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function ft(t){return t.maxX-t.minX+(t.maxY-t.minY)}function gt(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function dt(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function yt(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function _t(t,e,n,r,i){for(var o,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=r||(o=e+Math.ceil((n-e)/r/2)*r,Yo(t,o,e,n,i),s.push(e,o,o,n))}function mt(t,e){return e={exports:{}},t(e,e.exports),e.exports}function vt(t,e){if(!(this instanceof vt))return new vt(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||function(t,e){return t<e?-1:t>e?1:0},this.length>0)for(var n=(this.length>>1)-1;n>=0;n--)this._down(n)}function xt(t,e,n){e=Math.max(0,void 0===e?2:e),n=n||0;for(var r,i=function(t){for(var e=t[0],n=t[0],r=t[0],i=t[0],o=0;o<t.length;o++){var s=t[o];s[0]<e[0]&&(e=s),s[0]>r[0]&&(r=s),s[1]<n[1]&&(n=s),s[1]>i[1]&&(i=s)}var a=[e,n,r,i],u=a.slice();for(o=0;o<t.length;o++)is(t[o],a)||u.push(t[o]);var c=ts(u),h=[];for(o=0;o<c.length;o++)h.push(u[c[o]]);return h}(t),o=Vo(16,[\"[0]\",\"[1]\",\"[0]\",\"[1]\"]).load(t),s=[],a=0;a<i.length;a++){var u=i[a];o.remove(u),r=Nt(u,r),s.push(r)}var c=Vo(16);for(a=0;a<s.length;a++)c.insert(It(s[a]));for(var h=e*e,l=n*n;s.length;){var p=s.shift(),f=p.p,g=p.next.p,d=Ct(f,g);if(!(d<l)){var y=d/h;(u=function(t,e,n,r,i,o,s){var a=new ns(null,Et),u=t.data;for(;u;){for(var c=0;c<u.children.length;c++){var h=u.children[c],l=u.leaf?St(h,n,r):function(t,e,n){if(wt(t,n)||wt(e,n))return 0;var r=Mt(t[0],t[1],e[0],e[1],n.minX,n.minY,n.maxX,n.minY);if(0===r)return 0;var i=Mt(t[0],t[1],e[0],e[1],n.minX,n.minY,n.minX,n.maxY);if(0===i)return 0;var o=Mt(t[0],t[1],e[0],e[1],n.maxX,n.minY,n.maxX,n.maxY);if(0===o)return 0;var s=Mt(t[0],t[1],e[0],e[1],n.minX,n.maxY,n.maxX,n.maxY);return 0===s?0:Math.min(r,i,o,s)}(n,r,h);l>o||a.push({node:h,dist:l})}for(;a.length&&!a.peek().node.children;){var p=a.pop(),f=p.node,g=St(f,e,n),d=St(f,r,i);if(p.dist<g&&p.dist<d&&bt(n,f,s)&&bt(r,f,s))return f}(u=a.pop())&&(u=u.node)}return null}(o,p.prev.p,f,g,p.next.next.p,y,c))&&Math.min(Ct(u,f),Ct(u,g))<=y&&(s.push(p),s.push(Nt(u,p)),o.remove(u),c.remove(p),c.insert(It(p)),c.insert(It(p.next)))}}p=r;var _=[];do{_.push(p.p),p=p.next}while(p!==r);return _.push(p.p),_}function Et(t,e){return t.dist-e.dist}function wt(t,e){return t[0]>=e.minX&&t[0]<=e.maxX&&t[1]>=e.minY&&t[1]<=e.maxY}function bt(t,e,n){for(var r=Math.min(t[0],e[0]),i=Math.min(t[1],e[1]),o=Math.max(t[0],e[0]),s=Math.max(t[1],e[1]),a=n.search({minX:r,minY:i,maxX:o,maxY:s}),u=0;u<a.length;u++)if(function(t,e,n,r){return t!==r&&e!==n&&os(t,e,n)>0!=os(t,e,r)>0&&os(n,r,t)>0!=os(n,r,e)>0}(a[u].p,a[u].next.p,t,e))return!1;return!0}function It(t){var e=t.p,n=t.next.p;return t.minX=Math.min(e[0],n[0]),t.minY=Math.min(e[1],n[1]),t.maxX=Math.max(e[0],n[0]),t.maxY=Math.max(e[1],n[1]),t}function Nt(t,e){var n={p:t,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return e?(n.next=e.next,n.prev=e,e.next.prev=n,e.next=n):(n.prev=n,n.next=n),n}function Ct(t,e){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function St(t,e,n){var r=e[0],i=e[1],o=n[0]-r,s=n[1]-i;if(0!==o||0!==s){var a=((t[0]-r)*o+(t[1]-i)*s)/(o*o+s*s);a>1?(r=n[0],i=n[1]):a>0&&(r+=o*a,i+=s*a)}return o=t[0]-r,s=t[1]-i,o*o+s*s}function Mt(t,e,n,r,i,o,s,a){var u,c,h,l,p=n-t,f=r-e,g=s-i,d=a-o,y=t-i,_=e-o,m=p*p+f*f,v=p*g+f*d,x=g*g+d*d,E=p*y+f*_,w=g*y+d*_,b=m*x-v*v,I=b,N=b;0===b?(c=0,I=1,l=w,N=x):(l=m*w-v*E,(c=v*w-x*E)<0?(c=0,l=w,N=x):c>I&&(c=I,l=w+v,N=x)),l<0?(l=0,-E<0?c=0:-E>m?c=I:(c=-E,I=m)):l>N&&(l=N,-E+v<0?c=0:-E+v>m?c=I:(c=-E+v,I=m)),u=0===c?0:c/I;var C=(1-(h=0===l?0:l/N))*i+h*s-((1-u)*t+u*n),S=(1-h)*o+h*a-((1-u)*e+u*r);return C*C+S*S}function Lt(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.concavity||1/0,r=[];if(S(t,function(t){r.push([t[0],t[1]])}),!r.length)return null;var i=ss(r,n);return i.length>3?o([i]):null}function Pt(t,e,n){if(\"object\"!=typeof(n=n||{}))throw new Error(\"options is invalid\");var r=n.ignoreBoundary;if(!t)throw new Error(\"point is required\");if(!e)throw new Error(\"polygon is required\");var i=X(t),o=U(e),s=e.geometry?e.geometry.type:e.type,a=e.bbox;if(a&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(i,a))return!1;\"Polygon\"===s&&(o=[o]);for(var u=0,c=!1;u<o.length&&!c;u++)if(Ot(i,o[u][0],r)){for(var h=!1,l=1;l<o[u].length&&!h;)Ot(i,o[u][l],!r)&&(h=!0),l++;h||(c=!0)}return c}function Ot(t,e,n){var r=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var i=0,o=e.length-1;i<e.length;o=i++){var s=e[i][0],a=e[i][1],u=e[o][0],c=e[o][1];if(t[1]*(s-u)+a*(u-t[0])+c*(t[0]-s)==0&&(s-t[0])*(u-t[0])<=0&&(a-t[1])*(c-t[1])<=0)return!n;a>t[1]!=c>t[1]&&t[0]<(u-s)*(t[1]-a)/(c-a)+s&&(r=!r)}return r}function Rt(t,e){var n=[];return A(e,function(e){O(t,function(t){Pt(t,e)&&n.push(t)})}),c(n)}function Tt(t,e){if(\"FeatureCollection\"!==t.type)throw new Error(\"points must be a FeatureCollection\");var n=!1;return c(function(t){if(t.length<3)return[];t.sort(Dt);var e,n,r,i,o,s,a=t.length-1,u=t[a].x,c=t[0].x,h=t[a].y,l=h;for(;a--;)t[a].y<h&&(h=t[a].y),t[a].y>l&&(l=t[a].y);var p,f=c-u,g=l-h,d=f>g?f:g,y=.5*(c+u),_=.5*(l+h),m=[new At({x:y-20*d,y:_-d,__sentinel:!0},{x:y,y:_+20*d,__sentinel:!0},{x:y+20*d,y:_-d,__sentinel:!0})],v=[],x=[];a=t.length;for(;a--;){for(x.length=0,p=m.length;p--;)(f=t[a].x-m[p].x)>0&&f*f>m[p].r?(v.push(m[p]),m.splice(p,1)):(g=t[a].y-m[p].y,f*f+g*g>m[p].r||(x.push(m[p].a,m[p].b,m[p].b,m[p].c,m[p].c,m[p].a),m.splice(p,1)));for(Ft(x),p=x.length;p;)n=x[--p],e=x[--p],r=t[a],i=n.x-e.x,o=n.y-e.y,s=2*(i*(r.y-n.y)-o*(r.x-n.x)),Math.abs(s)>1e-12&&m.push(new At(e,n,r))}Array.prototype.push.apply(v,m),a=v.length;for(;a--;)(v[a].a.__sentinel||v[a].b.__sentinel||v[a].c.__sentinel)&&v.splice(a,1);return v}(t.features.map(function(t){var r={x:t.geometry.coordinates[0],y:t.geometry.coordinates[1]};return e?r.z=t.properties[e]:3===t.geometry.coordinates.length&&(n=!0,r.z=t.geometry.coordinates[2]),r})).map(function(t){var e=[t.a.x,t.a.y],r=[t.b.x,t.b.y],i=[t.c.x,t.c.y],s={};return n?(e.push(t.a.z),r.push(t.b.z),i.push(t.c.z)):s={a:t.a.z,b:t.b.z,c:t.c.z},o([[e,r,i,e]],s)}))}function At(t,e,n){this.a=t,this.b=e,this.c=n;var r,i,o=e.x-t.x,s=e.y-t.y,a=n.x-t.x,u=n.y-t.y,c=o*(t.x+e.x)+s*(t.y+e.y),h=a*(t.x+n.x)+u*(t.y+n.y),l=2*(o*(n.y-e.y)-s*(n.x-e.x));this.x=(u*c-s*h)/l,this.y=(o*h-a*c)/l,r=this.x-t.x,i=this.y-t.y,this.r=r*r+i*i}function Dt(t,e){return e.x-t.x}function Ft(t){var e,n,r,i,o,s=t.length;t:for(;s;)for(n=t[--s],e=t[--s],r=s;r;)if(o=t[--r],i=t[--r],e===i&&n===o||e===o&&n===i){t.splice(s,2),t.splice(r,2),s-=2;continue t}}function qt(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.units,i=X(t),o=X(e),s=x(o[1]-i[1]),a=x(o[0]-i[0]),u=x(i[1]),c=x(o[1]),h=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(u)*Math.cos(c);return d(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r)}function Gt(t){if(!t)throw new Error(\"geojson is required\");switch(t.type){case\"Feature\":return Bt(t);case\"FeatureCollection\":return function(t){var e={type:\"FeatureCollection\"};return Object.keys(t).forEach(function(n){switch(n){case\"type\":case\"features\":return;default:e[n]=t[n]}}),e.features=t.features.map(function(t){return Bt(t)}),e}(t);case\"Point\":case\"LineString\":case\"Polygon\":case\"MultiPoint\":case\"MultiLineString\":case\"MultiPolygon\":case\"GeometryCollection\":return zt(t);default:throw new Error(\"unknown GeoJSON type\")}}function Bt(t){var e={type:\"Feature\"};return Object.keys(t).forEach(function(n){switch(n){case\"type\":case\"properties\":case\"geometry\":return;default:e[n]=t[n]}}),e.properties=kt(t.properties),e.geometry=zt(t.geometry),e}function kt(t){var e={};return t?(Object.keys(t).forEach(function(n){var r=t[n];\"object\"==typeof r?null===r?e[n]=null:r.length?e[n]=r.map(function(t){return t}):e[n]=kt(r):e[n]=r}),e):e}function zt(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),\"GeometryCollection\"===t.type?(e.geometries=t.geometries.map(function(t){return zt(t)}),e):(e.coordinates=jt(t.coordinates),e)}function jt(t){return\"object\"!=typeof t[0]?t.slice():t.map(function(t){return jt(t)})}function Xt(t,e){function n(t,e){e.length&&e.pop();for(var n=c[t<0?~t:t],r=0,i=n.length;r<i;++r)e.push(u(n[r],r));t<0&&hs(e,i)}function r(t){return u(t)}function i(t){for(var e=[],r=0,i=t.length;r<i;++r)n(t[r],e);return e.length<2&&e.push(e[0]),e}function o(t){for(var e=i(t);e.length<4;)e.push(e[0]);return e}function s(t){return t.map(o)}function a(t){var e,n=t.type;switch(n){case\"GeometryCollection\":return{type:n,geometries:t.geometries.map(a)};case\"Point\":e=r(t.coordinates);break;case\"MultiPoint\":e=t.coordinates.map(r);break;case\"LineString\":e=i(t.arcs);break;case\"MultiLineString\":e=t.arcs.map(i);break;case\"Polygon\":e=s(t.arcs);break;case\"MultiPolygon\":e=t.arcs.map(s);break;default:return null}return{type:n,coordinates:e}}var u=cs(t.transform),c=t.arcs;return a(e)}function Ut(t,e){function n(t){switch(t.type){case\"GeometryCollection\":t.geometries.forEach(n);break;case\"Polygon\":r(t.arcs);break;case\"MultiPolygon\":t.arcs.forEach(r)}}function r(t){t.forEach(function(e){e.forEach(function(e){(o[e=e<0?~e:e]||(o[e]=[])).push(t)})}),s.push(t)}function i(e){return function(t){for(var e,n=-1,r=t.length,i=t[r-1],o=0;++n<r;)e=i,i=t[n],o+=e[0]*i[1]-e[1]*i[0];return Math.abs(o)}(Xt(t,{type:\"Polygon\",arcs:[e]}).coordinates[0])}var o={},s=[],a=[];return e.forEach(n),s.forEach(function(t){if(!t._){var e=[],n=[t];for(t._=1,a.push(e);t=n.pop();)e.push(t),t.forEach(function(t){t.forEach(function(t){o[t<0?~t:t].forEach(function(t){t._||(t._=1,n.push(t))})})})}}),s.forEach(function(t){delete t._}),{type:\"MultiPolygon\",arcs:a.map(function(e){var n,r=[];if(e.forEach(function(t){t.forEach(function(t){t.forEach(function(t){o[t<0?~t:t].length<2&&r.push(t)})})}),r=ls(t,r),(n=r.length)>1)for(var s,a,u=1,c=i(r[0]);u<n;++u)(s=i(r[u]))>c&&(a=r[0],r[0]=r[u],r[u]=a,c=s);return r})}}function Yt(t,e,n){for(var r,i=e+(n---e>>1);e<i;++e,--n)r=t[e],t[e]=t[n],t[n]=r}function Vt(t){return null==t?{type:null}:(\"FeatureCollection\"===t.type?function(t){var e={type:\"GeometryCollection\",geometries:t.features.map(Ht)};null!=t.bbox&&(e.bbox=t.bbox);return e}:\"Feature\"===t.type?Ht:Wt)(t)}function Ht(t){var e,n=Wt(t.geometry);null!=t.id&&(n.id=t.id),null!=t.bbox&&(n.bbox=t.bbox);for(e in t.properties){n.properties=t.properties;break}return n}function Wt(t){if(null==t)return{type:null};var e=\"GeometryCollection\"===t.type?{type:\"GeometryCollection\",geometries:t.geometries.map(Wt)}:\"Point\"===t.type||\"MultiPoint\"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(e.bbox=t.bbox),e}function Jt(t){var e,n=t[0],r=t[1];return r<n&&(e=n,n=r,r=e),n+31*r}function Zt(t,e){var n,r=t[0],i=t[1],o=e[0],s=e[1];return i<r&&(n=r,r=i,i=n),s<o&&(n=o,o=s,s=n),r===o&&i===s}function Kt(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.mutate;if(\"FeatureCollection\"!==K(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==n&&void 0!==n||(t=Gt(t));var r=[],i=z(t,function(t,e){var n=function(t,e){var n,r=t.geometry.coordinates,i=e.geometry.coordinates,o=Qt(r[0]),s=Qt(r[r.length-1]),u=Qt(i[0]),c=Qt(i[i.length-1]);if(o===c)n=i.concat(r.slice(1));else if(u===s)n=r.concat(i.slice(1));else if(o===u)n=r.slice(1).reverse().concat(i);else{if(s!==c)return null;n=r.concat(i.reverse().slice(1))}return a(n)}(t,e);return n||(r.push(t),e)});return i&&r.push(i),r.length?1===r.length?r[0]:h(r.map(function(t){return t.coordinates})):null}function Qt(t){return t[0].toString()+\",\"+t[1].toString()}function $t(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.mutate;if(\"FeatureCollection\"!==K(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==n&&void 0!==n||(t=Gt(t));var r=function(t){var e={};F(t,function(t){e[t.geometry.type]=!0});var n=Object.keys(e);return 1===n.length?n[0]:null}(t);if(!r)throw new Error(\"geojson must be homogenous\");switch(r){case\"LineString\":return Kt(t,e);case\"Polygon\":return function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.mutate;if(\"FeatureCollection\"!==K(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==n&&void 0!==n||(t=Gt(t));var r=[];F(t,function(t){r.push(t.geometry)});var i=ws({geoms:f(r).geometry});return ps(i,i.objects.geoms.geometries)}(t,e);default:throw new Error(r+\" is not supported\")}}function te(t,n){var r=\"object\"==typeof n?n.mutate:n;if(!t)throw new Error(\"geojson is required\");var i=K(t),o=[];switch(i){case\"LineString\":o=ee(t);break;case\"MultiLineString\":case\"Polygon\":U(t).forEach(function(t){o.push(ee(t))});break;case\"MultiPolygon\":U(t).forEach(function(t){var e=[];t.forEach(function(t){e.push(ee(t))}),o.push(e)});break;case\"Point\":return t;case\"MultiPoint\":var s={};U(t).forEach(function(t){var e=t.join(\"-\");s.hasOwnProperty(e)||(o.push(t),s[e]=!0)});break;default:throw new Error(i+\" geometry not supported\")}return t.coordinates?!0===r?(t.coordinates=o,t):{type:i,coordinates:o}:!0===r?(t.geometry.coordinates=o,t):e({type:i,coordinates:o},t.properties,t.bbox,t.id)}function ee(t){var e=U(t);if(2===e.length&&!function(t,e){return t[0]===e[0]&&t[1]===e[1]}(e[0],e[1]))return e;var n,r,i,o=[],s=e.length-1;o.push(e[0]);for(var a=1;a<s;a++)n=e[a-1],r=e[a],function(t,e,n){var r=n[0],i=n[1],o=t[0],s=t[1],a=e[0],u=e[1],c=a-o,h=u-s;return(r-o)*h-(i-s)*c==0&&(Math.abs(c)>=Math.abs(h)?c>0?o<=r&&r<=a:a<=r&&r<=o:h>0?s<=i&&i<=u:u<=i&&i<=s)}(n,i=e[a+1],r)||o.push(r);return o.push(i),o}function ne(t,e){var n=t.x-e.x,r=t.y-e.y;return n*n+r*r}function re(t,e,n){var r=e.x,i=e.y,o=n.x-r,s=n.y-i;if(0!==o||0!==s){var a=((t.x-r)*o+(t.y-i)*s)/(o*o+s*s);a>1?(r=n.x,i=n.y):a>0&&(r+=o*a,i+=s*a)}return o=t.x-r,s=t.y-i,o*o+s*s}function ie(t,e,n,r,i){for(var o,s=r,a=e+1;a<n;a++){var u=re(t[a],t[e],t[n]);u>s&&(o=a,s=u)}s>r&&(o-e>1&&ie(t,e,o,r,i),i.push(t[o]),n-o>1&&ie(t,o,n,r,i))}function oe(t,e,n){if(t.length<=2)return t;var r=void 0!==e?e*e:1;return t=n?t:function(t,e){for(var n,r=t[0],i=[r],o=1,s=t.length;o<s;o++)ne(n=t[o],r)>e&&(i.push(n),r=n);return r!==n&&i.push(n),i}(t,r),t=function(t,e){var n=t.length-1,r=[t[0]];return ie(t,0,n,e,r),r.push(t[n]),r}(t,r)}function se(t,e,n){return oe(t.map(function(t){return{x:t[0],y:t[1],z:t[2]}}),e,n).map(function(t){return t.z?[t.x,t.y,t.z]:[t.x,t.y]})}function ae(t,e,n){return t.map(function(t){var r=t.map(function(t){return{x:t[0],y:t[1]}});if(r.length<4)throw new Error(\"invalid polygon\");for(var i=oe(r,e,n).map(function(t){return[t.x,t.y]});!function(t){return!(t.length<3||3===t.length&&t[2][0]===t[0][0]&&t[2][1]===t[0][1])}(i);)i=oe(r,e-=.01*e,n).map(function(t){return[t.x,t.y]});return i[i.length-1][0]===i[0][0]&&i[i.length-1][1]===i[0][1]||i.push(i[0]),i})}function ue(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.resolution||1e4,r=e.sharpness||.85;if(!t)throw new Error(\"line is required\");if(!b(n))throw new Error(\"resolution must be an number\");if(!b(r))throw new Error(\"sharpness must be an number\");for(var i=[],o=new bs({points:J(t).coordinates.map(function(t){return{x:t[0],y:t[1]}}),duration:n,sharpness:r}),s=0;s<o.duration;s+=10){var u=o.pos(s);Math.floor(s/100)%2==0&&i.push([u.x,u.y])}return a(i,t.properties)}function ce(t){N(t);var e=Number(t[0]),n=Number(t[1]),r=Number(t[2]),i=Number(t[3]);if(6===t.length)throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");var s=[e,n];return o([[s,[r,n],[r,i],[e,i],s]])}function he(t){return ce(j(t))}function le(t){var e=t[0],n=t[1],r=t[2],i=t[3];if(qt(t.slice(0,2),[r,n])>=qt(t.slice(0,2),[e,i])){var o=(n+i)/2;return[e,o-(r-e)/2,r,o+(r-e)/2]}var s=(e+r)/2;return[s-(i-n)/2,n,s+(i-n)/2,i]}function pe(t,e,n,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");var o=i.units,s=i.properties,a=X(t),u=x(a[0]),c=x(a[1]),h=x(n),l=y(e,o),p=Math.asin(Math.sin(c)*Math.cos(l)+Math.cos(c)*Math.sin(l)*Math.cos(h));return r([v(u+Math.atan2(Math.sin(h)*Math.sin(l)*Math.cos(c),Math.cos(l)-Math.sin(c)*Math.sin(p))),v(p)],s)}function fe(t,e,n){var r=(n=n||{}).steps||64,i=n.properties;if(!t)throw new Error(\"center is required\");if(!e)throw new Error(\"radius is required\");if(\"object\"!=typeof n)throw new Error(\"options must be an object\");if(\"number\"!=typeof r)throw new Error(\"steps must be a number\");r=r||64,i=i||t.properties||{};for(var s=[],a=0;a<r;a++)s.push(pe(t,e,-360*a/r,n).geometry.coordinates);return s.push(s[0]),o([s],i)}function ge(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");if(!0===n.final)return function(t,e){var n=ge(e,t);return n=(n+180)%360}(t,e);var r=X(t),i=X(e),o=x(r[0]),s=x(i[0]),a=x(r[1]),u=x(i[1]),c=Math.sin(s-o)*Math.cos(u),h=Math.cos(a)*Math.sin(u)-Math.sin(a)*Math.cos(u)*Math.cos(s-o);return v(Math.atan2(c,h))}function de(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.properties;if(!t)throw new Error(\"geojson is required\");var i=j(t);return r([(i[0]+i[2])/2,(i[1]+i[3])/2],n)}function ye(t,e){var n=0,i=0,o=0;return S(t,function(t){n+=t[0],i+=t[1],o++},!0),r([n/o,i/o],e)}function _e(t,e){switch(K(t)){case\"Point\":return t;case\"Polygon\":var n=[];S(t,function(t){n.push(t)});var i,o,s,a,u,c,h,l,p=ye(t,e),f=p.geometry.coordinates,g=0,d=0,y=0,_=n.map(function(t){return[t[0]-f[0],t[1]-f[1]]});for(i=0;i<n.length-1;i++)a=(o=_[i])[0],c=o[1],u=(s=_[i+1])[0],y+=l=a*(h=s[1])-u*c,g+=(a+u)*l,d+=(c+h)*l;if(0===y)return p;var m=1/(6*(.5*y));return r([f[0]+m*g,f[1]+m*d],e);default:var v=Lt(t);return v?_e(v,e):ye(t,e)}}function me(t){var e=[];return\"FeatureCollection\"===t.type?O(t,function(t){S(t,function(n){e.push(r(n,t.properties))})}):S(t,function(n){e.push(r(n,t.properties))}),c(e)}function ve(t,e,n){n=n||2;var r=e&&e.length,i=r?e[0]*n:t.length,o=xe(t,0,i,n,!0),s=[];if(!o)return s;var a,u,c,h,l,p,f;if(r&&(o=function(t,e,n,r){var i,o,s,a,u,c=[];for(i=0,o=e.length;i<o;i++)s=e[i]*r,a=i<o-1?e[i+1]*r:t.length,(u=xe(t,s,a,r,!1))===u.next&&(u.steiner=!0),c.push(function(t){var e=t,n=t;do{e.x<n.x&&(n=e),e=e.next}while(e!==t);return n}(u));for(c.sort(be),i=0;i<c.length;i++)!function(t,e){if(e=function(t,e){var n,r=e,i=t.x,o=t.y,s=-1/0;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){var a=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=i&&a>s){if(s=a,a===i){if(o===r.y)return r;if(o===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!n)return null;if(i===s)return n.prev;var u,c=n,h=n.x,l=n.y,p=1/0;for(r=n.next;r!==c;)i>=r.x&&r.x>=h&&i!==r.x&&Ne(o<l?i:s,o,h,l,o<l?s:i,o,r.x,r.y)&&((u=Math.abs(o-r.y)/(i-r.x))<p||u===p&&r.x>n.x)&&Le(r,t)&&(n=r,p=u),r=r.next;return n}(t,e)){var n=Pe(e,t);Ee(n,n.next)}}(c[i],n),n=Ee(n,n.next);return n}(t,e,o,n)),t.length>80*n){a=c=t[0],u=h=t[1];for(var g=n;g<i;g+=n)l=t[g],p=t[g+1],l<a&&(a=l),p<u&&(u=p),l>c&&(c=l),p>h&&(h=p);f=0!==(f=Math.max(c-a,h-u))?1/f:0}return we(o,s,n,a,u,f),s}function xe(t,e,n,r,i){var o,s;if(i===Ae(t,e,n,r)>0)for(o=e;o<n;o+=r)s=Oe(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=Oe(o,t[o],t[o+1],s);return s&&Se(s,s.next)&&(Re(s),s=s.next),s}function Ee(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!Se(r,r.next)&&0!==Ce(r.prev,r,r.next))r=r.next;else{if(Re(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function we(t,e,n,r,i,o,s){if(t){!s&&o&&function(t,e,n,r){var i=t;do{null===i.z&&(i.z=Ie(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,o,s,a,u,c=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<c&&(a++,r=r.nextZ);e++);for(u=c;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,u--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,c*=2}while(s>1)}(i)}(t,r,i,o);for(var a,u,c=t;t.prev!==t.next;)if(a=t.prev,u=t.next,o?function(t,e,n,r){var i=t.prev,o=t,s=t.next;if(Ce(i,o,s)>=0)return!1;var a=i.x<o.x?i.x<s.x?i.x:s.x:o.x<s.x?o.x:s.x,u=i.y<o.y?i.y<s.y?i.y:s.y:o.y<s.y?o.y:s.y,c=i.x>o.x?i.x>s.x?i.x:s.x:o.x>s.x?o.x:s.x,h=i.y>o.y?i.y>s.y?i.y:s.y:o.y>s.y?o.y:s.y,l=Ie(a,u,e,n,r),p=Ie(c,h,e,n,r),f=t.nextZ;for(;f&&f.z<=p;){if(f!==t.prev&&f!==t.next&&Ne(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ce(f.prev,f,f.next)>=0)return!1;f=f.nextZ}f=t.prevZ;for(;f&&f.z>=l;){if(f!==t.prev&&f!==t.next&&Ne(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ce(f.prev,f,f.next)>=0)return!1;f=f.prevZ}return!0}(t,r,i,o):function(t){var e=t.prev,n=t,r=t.next;if(Ce(e,n,r)>=0)return!1;var i=t.next.next;for(;i!==t.prev;){if(Ne(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Ce(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}(t))e.push(a.i/n),e.push(t.i/n),e.push(u.i/n),Re(t),t=u.next,c=u.next;else if((t=u)===c){s?1===s?we(t=function(t,e,n){var r=t;do{var i=r.prev,o=r.next.next;!Se(i,o)&&Me(i,r,r.next,o)&&Le(i,o)&&Le(o,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(o.i/n),Re(r),Re(r.next),r=t=o),r=r.next}while(r!==t);return r}(t,e,n),e,n,r,i,o,2):2===s&&function(t,e,n,r,i,o){var s=t;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Me(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&Le(t,e)&&Le(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)}(s,a)){var u=Pe(s,a);return s=Ee(s,s.next),u=Ee(u,u.next),we(s,e,n,r,i,o),void we(u,e,n,r,i,o)}a=a.next}s=s.next}while(s!==t)}(t,e,n,r,i,o):we(Ee(t),e,n,r,i,o,1);break}}}function be(t,e){return t.x-e.x}function Ie(t,e,n,r,i){return t=32767*(t-n)*i,e=32767*(e-r)*i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function Ne(t,e,n,r,i,o,s,a){return(i-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(r-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(i-s)*(r-a)>=0}function Ce(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Se(t,e){return t.x===e.x&&t.y===e.y}function Me(t,e,n,r){return!!(Se(t,e)&&Se(n,r)||Se(t,r)&&Se(n,e))||Ce(t,e,n)>0!=Ce(t,e,r)>0&&Ce(n,r,t)>0!=Ce(n,r,e)>0}function Le(t,e){return Ce(t.prev,t,t.next)<0?Ce(t,e,t.next)>=0&&Ce(t,t.prev,e)>=0:Ce(t,e,t.prev)<0||Ce(t,t.next,e)<0}function Pe(t,e){var n=new Te(t.i,t.x,t.y),r=new Te(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function Oe(t,e,n,r){var i=new Te(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Re(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Te(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Ae(t,e,n,r){for(var i=0,o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}function De(t){var e=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n}(t),n=Is(e.vertices,e.holes,2),r=[],i=[];n.forEach(function(t,r){var o=n[r];i.push([e.vertices[2*o],e.vertices[2*o+1]])});for(var s=0;s<i.length;s+=3){var a=i.slice(s,s+3);a.push(i[s]),r.push(o([a]))}return r}function Fe(t,e){if(!t)throw new Error(\"targetPoint is required\");if(!e)throw new Error(\"points is required\");var n,r=1/0;return O(e,function(e,i){var o=qt(t,e);o<r&&((n=Gt(e)).properties.featureIndex=i,n.properties.distanceToPoint=o,r=o)}),n}function qe(t,e,n,r,i){Ge(t,e,n||0,r||t.length-1,i||function(t,e){return t<e?-1:t>e?1:0})}function Ge(t,e,n,r,i){for(;r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);Ge(t,e,Math.max(n,Math.floor(e-s*u/o+c)),Math.min(r,Math.floor(e+(o-s)*u/o+c)),i)}var h=t[e],l=n,p=r;for(Be(t,n,e),i(t[r],h)>0&&Be(t,n,r);l<p;){for(Be(t,l,p),l++,p--;i(t[l],h)<0;)l++;for(;i(t[p],h)>0;)p--}0===i(t[n],h)?Be(t,n,p):Be(t,++p,r),p<=e&&(n=p+1),e<=p&&(r=p-1)}}function Be(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function ke(t,e){if(!(this instanceof ke))return new ke(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function ze(t,e){je(t,0,t.children.length,e,t)}function je(t,e,n,r,i){i||(i=Ze(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],Xe(i,t.leaf?r(o):o);return i}function Xe(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function Ue(t,e){return t.minX-e.minX}function Ye(t,e){return t.minY-e.minY}function Ve(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function He(t){return t.maxX-t.minX+(t.maxY-t.minY)}function We(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function Je(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function Ze(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Ke(t,e,n,r,i){for(var o,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=r||(qe(t,o=e+Math.ceil((n-e)/r/2)*r,e,n,i),s.push(e,o,o,n))}function Qe(t){var e=ke(t);return e.insert=function(t){if(Array.isArray(t)){var e=t;(t=$e(e)).bbox=e}else t.bbox=t.bbox?t.bbox:tn(t);return ke.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach(function(t){var n=$e(t);n.bbox=t,e.push(n)}):O(t,function(t){t.bbox=t.bbox?t.bbox:tn(t),e.push(t)}),ke.prototype.load.call(this,e)},e.remove=function(t){if(Array.isArray(t)){var e=t;(t=$e(e)).bbox=e}return ke.prototype.remove.call(this,t)},e.clear=function(){return ke.prototype.clear.call(this)},e.search=function(t){return{type:\"FeatureCollection\",features:ke.prototype.search.call(this,this.toBBox(t))}},e.collides=function(t){return ke.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return{type:\"FeatureCollection\",features:ke.prototype.all.call(this)}},e.toJSON=function(){return ke.prototype.toJSON.call(this)},e.fromJSON=function(t){return ke.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;return e=t.bbox?t.bbox:Array.isArray(t)&&4===t.length?t:tn(t),{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}function $e(t){var e=[t[0],t[1]],n=[t[0],t[3]],r=[t[2],t[3]];return{type:\"Feature\",bbox:t,properties:{},geometry:{type:\"Polygon\",coordinates:[[e,[t[2],t[1]],r,n,e]]}}}function tn(t){var e=[1/0,1/0,-1/0,-1/0];return S(t,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}function en(t){if(!t)throw new Error(\"geojson is required\");var e=[];return F(t,function(t){!function(t,e){var n=[],r=t.geometry;switch(r.type){case\"Polygon\":n=U(r);break;case\"LineString\":n=[U(r)]}n.forEach(function(n){var r=function(t,e){var n=[];return t.reduce(function(t,r){var i=a([t,r],e);return i.bbox=function(t,e){var n=t[0],r=t[1],i=e[0],o=e[1];return[n<i?n:i,r<o?r:o,n>i?n:i,r>o?r:o]}(t,r),n.push(i),r}),n}(n,t.properties);r.forEach(function(t){t.id=e.length,e.push(t)})})}(t,e)}),c(e)}function nn(t,n){var r={},i=[];if(\"LineString\"===t.type&&(t=e(t)),\"LineString\"===n.type&&(n=e(n)),\"Feature\"===t.type&&\"Feature\"===n.type&&\"LineString\"===t.geometry.type&&\"LineString\"===n.geometry.type&&2===t.geometry.coordinates.length&&2===n.geometry.coordinates.length){var o=rn(t,n);return o&&i.push(o),c(i)}var s=Qe();return s.load(en(n)),O(en(t),function(t){O(s.search(t),function(e){var n=rn(t,e);if(n){var o=U(n).join(\",\");r[o]||(r[o]=!0,i.push(n))}})}),c(i)}function rn(t,e){var n=U(t),i=U(e);if(2!==n.length)throw new Error(\"<intersects> line1 must only contain 2 coordinates\");if(2!==i.length)throw new Error(\"<intersects> line2 must only contain 2 coordinates\");var o=n[0][0],s=n[0][1],a=n[1][0],u=n[1][1],c=i[0][0],h=i[0][1],l=i[1][0],p=i[1][1],f=(p-h)*(a-o)-(l-c)*(u-s),g=(l-c)*(s-h)-(p-h)*(o-c),d=(a-o)*(s-h)-(u-s)*(o-c);if(0===f)return null;var y=g/f,_=d/f;if(y>=0&&y<=1&&_>=0&&_<=1){return r([o+y*(a-o),s+y*(u-s)])}return null}function on(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var i=t.geometry?t.geometry.type:t.type;if(\"LineString\"!==i&&\"MultiLineString\"!==i)throw new Error(\"lines must be LineString or MultiLineString\");var o=r([1/0,1/0],{dist:1/0}),s=0;return F(t,function(t){for(var i=U(t),u=0;u<i.length-1;u++){var c=r(i[u]);c.properties.dist=qt(e,c,n);var h=r(i[u+1]);h.properties.dist=qt(e,h,n);var l=qt(c,h,n),p=Math.max(c.properties.dist,h.properties.dist),f=ge(c,h),g=pe(e,p,f+90,n),d=pe(e,p,f-90,n),y=nn(a([g.geometry.coordinates,d.geometry.coordinates]),a([c.geometry.coordinates,h.geometry.coordinates])),_=null;y.features.length>0&&((_=y.features[0]).properties.dist=qt(e,_,n),_.properties.location=s+qt(c,_,n)),c.properties.dist<o.properties.dist&&((o=c).properties.index=u,o.properties.location=s),h.properties.dist<o.properties.dist&&((o=h).properties.index=u+1,o.properties.location=s+l),_&&_.properties.dist<o.properties.dist&&((o=_).properties.index=u),s+=l}}),o}function sn(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.final;if(!t)throw new Error(\"start point is required\");if(!e)throw new Error(\"end point is required\");var i;return(i=r?an(X(e),X(t)):an(X(t),X(e)))>180?-(360-i):i}function an(t,e){var n=x(t[1]),r=x(e[1]),i=x(e[0]-t[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var o=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(n/2+Math.PI/4));return(v(Math.atan2(i,o))+360)%360}function un(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.units;if(!t)throw new Error(\"from point is required\");if(!e)throw new Error(\"to point is required\");var i=X(t),o=X(e);o[0]+=o[0]-i[0]>180?-360:i[0]-o[0]>180?360:0;return E(function(t,e,n){var r=n=void 0===n?Fo:Number(n),i=t[1]*Math.PI/180,o=e[1]*Math.PI/180,s=o-i,a=Math.abs(e[0]-t[0])*Math.PI/180;a>Math.PI&&(a-=2*Math.PI);var u=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),c=Math.abs(u)>1e-11?s/u:Math.cos(i);return Math.sqrt(s*s+c*c*a*a)*r}(i,o),\"meters\",r)}function cn(t,e){return ln(t,\"mercator\",e)}function hn(t,e){return ln(t,\"wgs84\",e)}function ln(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.mutate;if(!t)throw new Error(\"geojson is required\");return Array.isArray(t)&&b(t[0])?t=\"mercator\"===e?pn(t):fn(t):(!0!==r&&(t=Gt(t)),S(t,function(t){var n=\"mercator\"===e?pn(t):fn(t);t[0]=n[0],t[1]=n[1]})),t}function pn(t){var e=Math.PI/180,n=20037508.342789244,r=[6378137*(Math.abs(t[0])<=180?t[0]:t[0]-360*function(t){return t<0?-1:t>0?1:0}(t[0]))*e,6378137*Math.log(Math.tan(.25*Math.PI+.5*t[1]*e))];return r[0]>n&&(r[0]=n),r[0]<-n&&(r[0]=-n),r[1]>n&&(r[1]=n),r[1]<-n&&(r[1]=-n),r}function fn(t){var e=180/Math.PI;return[t[0]*e/6378137,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/6378137)))*e]}function gn(t,n,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");if(!t)throw new Error(\"pt is required\");if(Array.isArray(t)?t=r(t):\"Point\"===t.type?t=e(t):H(t,\"Point\",\"point\"),!n)throw new Error(\"line is required\");Array.isArray(n)?n=a(n):\"LineString\"===n.type?n=e(n):H(n,\"LineString\",\"line\");var o=1/0,s=t.geometry.coordinates;return G(n,function(t){var e=t.geometry.coordinates[0],n=t.geometry.coordinates[1],a=function(t,e,n,i){var o=i.mercator,s=!0!==o?qt(e,t,i):dn(e,t,i),a=m(!0!==o?ge(e,t):sn(e,t)),u=m(!0!==o?ge(e,n):sn(e,n)),c=Math.abs(a-u);if(c>90)return s;var h=(u+180)%360,l=m(!0!==o?ge(n,t):sn(n,t)),p=Math.abs(l-h);p>180&&(p=Math.abs(p-360));return p>90?!0!==o?qt(t,n,i):dn(t,n,i):!0!==o?s*Math.sin(x(c)):function(t,e,n,i){var o=0;(Math.abs(t[0])>=180||Math.abs(e[0])>=180||Math.abs(n[0])>=180)&&(o=t[0]>0||e[0]>0||n[0]>0?-180:180);var s=r(n),a=cn([t[0]+o,t[1]]),u=cn([e[0]+o,e[1]]),c=cn([n[0]+o,n[1]]),h=hn(function(t,e,n){var r=t[0],i=t[1],o=e[0],s=e[1],a=n[0],u=n[1],c=o-r,h=s-i,l=((a-r)*c+(u-i)*h)/(c*c+h*h);return[r+l*c,i+l*h]}(a,u,c));return 0!==o&&(h[0]-=o),un(s,h,i)}(e,n,t,i)}(s,e,n,i);o>a&&(o=a)}),o}function dn(t,e,n){var r=n.units,i=0;Math.abs(t[0])>=180&&(i=t[0]>0?-180:180),Math.abs(e[0])>=180&&(i=e[0]>0?-180:180);var o=cn([t[0]+i,t[1]]),s=cn([e[0]+i,e[1]]),a=function(t){return t*t},u=a(o[0]-s[0])+a(o[1]-s[1]);return E(Math.sqrt(u),\"meters\",r)}function yn(t){for(var n=function(t){if(\"FeatureCollection\"!==t.type)return\"Feature\"!==t.type?c([e(t)]):c([t]);return t}(t),i=de(n),o=!1,s=0;!o&&s<n.features.length;){var a,u=n.features[s].geometry,h=!1;if(\"Point\"===u.type)i.geometry.coordinates[0]===u.coordinates[0]&&i.geometry.coordinates[1]===u.coordinates[1]&&(o=!0);else if(\"MultiPoint\"===u.type){var l=!1;for(a=0;!l&&a<u.coordinates.length;)i.geometry.coordinates[0]===u.coordinates[a][0]&&i.geometry.coordinates[1]===u.coordinates[a][1]&&(o=!0,l=!0),a++}else if(\"LineString\"===u.type)for(a=0;!h&&a<u.coordinates.length-1;)_n(i.geometry.coordinates[0],i.geometry.coordinates[1],u.coordinates[a][0],u.coordinates[a][1],u.coordinates[a+1][0],u.coordinates[a+1][1])&&(h=!0,o=!0),a++;else if(\"MultiLineString\"===u.type)for(var p=0;p<u.coordinates.length;){h=!1,a=0;for(var f=u.coordinates[p];!h&&a<f.length-1;)_n(i.geometry.coordinates[0],i.geometry.coordinates[1],f[a][0],f[a][1],f[a+1][0],f[a+1][1])&&(h=!0,o=!0),a++;p++}else\"Polygon\"!==u.type&&\"MultiPolygon\"!==u.type||Pt(i,u)&&(o=!0);s++}if(o)return i;var g=c([]);for(s=0;s<n.features.length;s++)g.features=g.features.concat(me(n.features[s]).features);return r(Fe(i,g).geometry.coordinates)}function _n(t,e,n,r,i,o){return Math.sqrt((i-n)*(i-n)+(o-r)*(o-r))===Math.sqrt((t-n)*(t-n)+(e-r)*(e-r))+Math.sqrt((i-t)*(i-t)+(o-e)*(o-e))}function mn(t){return D(t,function(t,e){return t+vn(e)},0)}function vn(t){var e,n=0;switch(t.type){case\"Polygon\":return xn(t.coordinates);case\"MultiPolygon\":for(e=0;e<t.coordinates.length;e++)n+=xn(t.coordinates[e]);return n;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0;case\"GeometryCollection\":for(e=0;e<t.geometries.length;e++)n+=vn(t.geometries[e]);return n}}function xn(t){var e=0;if(t&&t.length>0){e+=Math.abs(En(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(En(t[n]))}return e}function En(t){var e,n,r,i,o,s,a=0,u=t.length;if(u>2){for(s=0;s<u;s++)s===u-2?(r=u-2,i=u-1,o=0):s===u-1?(r=u-1,i=0,o=1):(r=s,i=s+1,o=s+2),e=t[r],n=t[i],a+=(wn(t[o][0])-wn(e[0]))*Math.sin(wn(n[1]));a=a*Ss*Ss/2}return a}function wn(t){return t*Math.PI/180}function bn(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");if(!t)throw new Error(\"geojson is required\");return B(t,function(t,n){var r=n.geometry.coordinates;return t+qt(r[0],r[1],e)},0)}function In(t,e,n,r){if(r=r||{},!I(r))throw new Error(\"options is invalid\");var i,o=[];if(\"Feature\"===t.type)i=t.geometry.coordinates;else{if(\"LineString\"!==t.type)throw new Error(\"input must be a LineString Feature or Geometry\");i=t.coordinates}for(var s,u,c,h=0,l=0;l<i.length&&!(e>=h&&l===i.length-1);l++){if(h>e&&0===o.length){if(!(s=e-h))return o.push(i[l]),a(o);u=ge(i[l],i[l-1])-180,c=pe(i[l],s,u,r),o.push(c.geometry.coordinates)}if(h>=n)return(s=n-h)?(u=ge(i[l],i[l-1])-180,c=pe(i[l],s,u,r),o.push(c.geometry.coordinates),a(o)):(o.push(i[l]),a(o));if(h>=e&&o.push(i[l]),l===i.length-1)return a(o);h+=qt(i[l],i[l+1],r)}return a(i[i.length-1])}function Nn(t,e,n){var r=(n=n||{}).ignoreEndVertices;if(!I(n))throw new Error(\"invalid options\");if(!t)throw new Error(\"pt is required\");if(!e)throw new Error(\"line is required\");for(var i=X(t),o=U(e),s=0;s<o.length-1;s++){var a=!1;if(r&&(0===s&&(a=\"start\"),s===o.length-2&&(a=\"end\"),0===s&&s+1===o.length-1&&(a=\"both\")),function(t,e,n,r){var i=n[0],o=n[1],s=t[0],a=t[1],u=e[0],c=e[1],h=n[0]-s,l=n[1]-a,p=u-s,f=c-a;if(h*f-l*p!=0)return!1;{if(!r)return Math.abs(p)>=Math.abs(f)?p>0?s<=i&&i<=u:u<=i&&i<=s:f>0?a<=o&&o<=c:c<=o&&o<=a;if(\"start\"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<i&&i<=u:u<=i&&i<s:f>0?a<o&&o<=c:c<=o&&o<a;if(\"end\"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<=i&&i<u:u<i&&i<=s:f>0?a<=o&&o<c:c<o&&o<=a;if(\"both\"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<i&&i<u:u<i&&i<s:f>0?a<o&&o<c:c<o&&o<a}}(o[s],o[s+1],i,a))return!0}return!1}function Cn(t,e){var n=K(t),r=K(e),i=J(t),o=J(e);switch(n){case\"Point\":switch(r){case\"MultiPoint\":return function(t,e){var n,r=!1;for(n=0;n<e.coordinates.length;n++)if(Mn(e.coordinates[n],t.coordinates)){r=!0;break}return r}(i,o);case\"LineString\":return Nn(i,o,{ignoreEndVertices:!0});case\"Polygon\":return Pt(i,o,{ignoreBoundary:!0});default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"MultiPoint\":switch(r){case\"MultiPoint\":return function(t,e){for(var n=0;n<t.coordinates.length;n++){for(var r=!1,i=0;i<e.coordinates.length;i++)Mn(t.coordinates[n],e.coordinates[i])&&(r=!0);if(!r)return!1}return!0}(i,o);case\"LineString\":return function(t,e){for(var n=!1,r=0;r<t.coordinates.length;r++){if(!Nn(t.coordinates[r],e))return!1;n||(n=Nn(t.coordinates[r],e,{ignoreEndVertices:!0}))}return n}(i,o);case\"Polygon\":return function(t,e){for(var n=!0,r=0;r<t.coordinates.length;r++){var i=Pt(t.coordinates[1],e);if(!i){n=!1;break}i=Pt(t.coordinates[1],e,{ignoreBoundary:!0})}return n&&i}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"LineString\":switch(r){case\"LineString\":return function(t,e){for(var n=0;n<t.coordinates.length;n++)if(!Nn(t.coordinates[n],e))return!1;return!0}(i,o);case\"Polygon\":return function(t,e){var n=j(e),r=j(t);if(!Sn(n,r))return!1;for(var i=!1,o=0;o<t.coordinates.length-1;o++){if(!Pt(t.coordinates[o],e))return!1;if(i||(i=Pt(t.coordinates[o],e,{ignoreBoundary:!0})),!i){var s=function(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}(t.coordinates[o],t.coordinates[o+1]);i=Pt(s,e,{ignoreBoundary:!0})}}return i}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"Polygon\":switch(r){case\"Polygon\":return function(t,e){var n=j(t);if(!Sn(j(e),n))return!1;for(var r=0;r<t.coordinates[0].length;r++)if(!Pt(t.coordinates[0][r],e))return!1;return!0}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}default:throw new Error(\"feature1 \"+n+\" geometry not supported\")}}function Sn(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Mn(t,e){return t[0]===e[0]&&t[1]===e[1]}function Ln(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var i=n.mask,o=n.properties,s=[];if(null===e||void 0===e)throw new Error(\"cellSide is required\");if(!b(e))throw new Error(\"cellSide is invalid\");if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be array\");if(4!==t.length)throw new Error(\"bbox must contain 4 numbers\");if(i&&-1===[\"Polygon\",\"MultiPolygon\"].indexOf(K(i)))throw new Error(\"options.mask must be a (Multi)Polygon\");for(var a=t[0],u=t[1],h=t[2],l=t[3],p=e/qt([a,u],[h,u],n)*(h-a),f=e/qt([a,u],[a,l],n)*(l-u),g=h-a,d=l-u,y=Math.floor(g/p),_=(d-Math.floor(d/f)*f)/2,m=a+(g-y*p)/2;m<=h;){for(var v=u+_;v<=l;){var x=r([m,v],o);i?Cn(x,i)&&s.push(x):s.push(x),v+=f}m+=p}return c(s)}function Pn(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.precision,r=e.coordinates,i=e.mutate;if(n=void 0===n||null===n||isNaN(n)?6:n,r=void 0===r||null===r||isNaN(r)?3:r,!t)throw new Error(\"<geojson> is required\");if(\"number\"!=typeof n)throw new Error(\"<precision> must be a number\");if(\"number\"!=typeof r)throw new Error(\"<coordinates> must be a number\");!1!==i&&void 0!==i||(t=JSON.parse(JSON.stringify(t)));var o=Math.pow(10,n);return S(t,function(t){!function(t,e,n){t.length>n&&t.splice(n,t.length);for(var r=0;r<t.length;r++)t[r]=Math.round(t[r]*e)/e}(t,o,r)}),t}function On(t,e){if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!On(t[n],e[n]))return!1}else if(t[n]!==e[n])return!1;return!0}function Rn(t,e){if(void 0===e&&(e=!0),3!=t.length)throw new Error(\"This function requires an array of three points [x,y]\");return(t[1][0]-t[0][0])*(t[2][1]-t[0][1])-(t[1][1]-t[0][1])*(t[2][0]-t[0][0])>=0==e}function Tn(t,e){if(!t||!e)return!1;if(t.length!=e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!Tn(t[n],e[n]))return!1}else if(t[n]!=e[n])return!1;return!0}function An(t,e){var n=[],r=Qe();return F(e,function(e){if(n.forEach(function(t,e){t.id=e}),n.length){var i=r.search(e);if(i.features.length){var o=Fn(e,i);n=n.filter(function(t){return t.id!==o.id}),r.remove(o),O(Dn(o,e),function(t){n.push(t),r.insert(t)})}}else(n=Dn(t,e).features).forEach(function(t){t.bbox||(t.bbox=le(j(t)))}),r.load(c(n))}),c(n)}function Dn(t,e){var n=[],r=U(t)[0],i=U(t)[t.geometry.coordinates.length-1];if(qn(r,X(e))||qn(i,X(e)))return c([t]);var o=Qe(),s=en(t);o.load(s);var u=o.search(e);if(!u.features.length)return c([t]);var h=Fn(e,u),l=R(s,function(t,r,i){var o=U(r)[1],s=X(e);return i===h.id?(t.push(s),n.push(a(t)),qn(s,o)?[s]:[s,o]):(t.push(o),t)},[r]);return l.length>1&&n.push(a(l)),c(n)}function Fn(t,e){if(!e.features.length)throw new Error(\"lines must contain features\");if(1===e.features.length)return e.features[0];var n,r=1/0;return O(e,function(e){var i=on(e,t).properties.dist;i<r&&(n=e,r=i)}),n}function qn(t,e){return t[0]===e[0]&&t[1]===e[1]}function Gn(t,e,n,r,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");var o=i.steps,s=i.units;if(!t)throw new Error(\"center is required\");if(!e)throw new Error(\"radius is required\");if(void 0===n||null===n)throw new Error(\"bearing1 is required\");if(void 0===r||null===r)throw new Error(\"bearing2 is required\");if(\"object\"!=typeof i)throw new Error(\"options must be an object\");o=o||64;var u=Bn(n),c=Bn(r),h=t.properties;if(u===c)return a(fe(t,e,i).geometry.coordinates[0],h);for(var l=u,p=u<c?c:c+360,f=l,g=[],d=0;f<p;)g.push(pe(t,e,f,s).geometry.coordinates),f=l+360*++d/o;return f>p&&g.push(pe(t,e,p,s).geometry.coordinates),a(g,h)}function Bn(t){var e=t%360;return e<0&&(e+=360),e}function kn(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.properties,r=K(t),i=U(t);if(n=n||t.properties||{},!i.length)throw new Error(\"polygon must contain coordinates\");switch(r){case\"Polygon\":return zn(i,n);case\"MultiPolygon\":var o=[];return i.forEach(function(t){o.push(zn(t,n))}),c(o);default:throw new Error(\"geom \"+r+\" not supported\")}}function zn(t,e){return t.length>1?h(t,e):a(t[0],e)}function jn(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.properties,r=e.autoComplete,i=e.orderCoords;if(!t)throw new Error(\"lines is required\");r=void 0===r||r,i=void 0===i||i;switch(K(t)){case\"FeatureCollection\":case\"GeometryCollection\":var o=[];return(t.features?t.features:t.geometries).forEach(function(t){o.push(U(Xn(t,{},r,i)))}),p(o,n)}return Xn(t,n,r,i)}function Xn(t,e,n,r){e=e||t.properties||{};var i=U(t),s=K(t);if(!i.length)throw new Error(\"line must contain coordinates\");switch(s){case\"LineString\":return n&&(i=Un(i)),o([i],e);case\"MultiLineString\":var u=[],c=0;return i.forEach(function(t){if(n&&(t=Un(t)),r){var e=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return Math.abs(e-r)*Math.abs(n-i)}(j(a(t)));e>c?(u.unshift(t),c=e):u.push(t)}else u.push(t)}),o(u,e);default:throw new Error(\"geometry type \"+s+\" is not supported\")}}function Un(t){var e=t[0],n=e[0],r=e[1],i=t[t.length-1],o=i[0],s=i[1];return n===o&&r===s||t.push(e),t}function Yn(t,e,n){var r,i,o,s,a,u=t.length,c=Hn(t[0],e),h=[];for(n||(n=[]),r=1;r<u;r++){for(i=t[r-1],s=a=Hn(o=t[r],e);;){if(!(c|s)){h.push(i),s!==a?(h.push(o),r<u-1&&(n.push(h),h=[])):r===u-1&&h.push(o);break}if(c&s)break;c?c=Hn(i=Vn(i,o,c,e),e):s=Hn(o=Vn(i,o,s,e),e)}c=a}return h.length&&n.push(h),n}function Vn(t,e,n,r){return 8&n?[t[0]+(e[0]-t[0])*(r[3]-t[1])/(e[1]-t[1]),r[3]]:4&n?[t[0]+(e[0]-t[0])*(r[1]-t[1])/(e[1]-t[1]),r[1]]:2&n?[r[2],t[1]+(e[1]-t[1])*(r[2]-t[0])/(e[0]-t[0])]:1&n?[r[0],t[1]+(e[1]-t[1])*(r[0]-t[0])/(e[0]-t[0])]:null}function Hn(t,e){var n=0;return t[0]<e[0]?n|=1:t[0]>e[2]&&(n|=2),t[1]<e[1]?n|=4:t[1]>e[3]&&(n|=8),n}function Wn(t,e){for(var n=[],r=0;r<t.length;r++){var i=Gs.polygon(t[r],e);i.length>0&&(i[0][0]===i[i.length-1][0]&&i[0][1]===i[i.length-1][1]||i.push(i[0]),i.length>=4&&n.push(i))}return n}function Jn(t){return\"[object Arguments]\"===Object.prototype.toString.call(t)}function Zn(t,e,n){return n||(n={}),t===e||(t instanceof Date&&e instanceof Date?t.getTime()===e.getTime():!t||!e||\"object\"!=typeof t&&\"object\"!=typeof e?(n.strict,t===e):function(t,e,n){var r,i;if(Kn(t)||Kn(e))return!1;if(t.prototype!==e.prototype)return!1;if(Jn(t))return!!Jn(e)&&(t=Bs.call(t),e=Bs.call(e),Zn(t,e,n));if(Qn(t)){if(!Qn(e))return!1;if(t.length!==e.length)return!1;for(r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}try{var o=Object.keys(t),s=Object.keys(e)}catch(t){return!1}if(o.length!==s.length)return!1;for(o.sort(),s.sort(),r=o.length-1;r>=0;r--)if(o[r]!==s[r])return!1;for(r=o.length-1;r>=0;r--)if(i=o[r],!Zn(t[i],e[i],n))return!1;return typeof t==typeof e}(t,e,n))}function Kn(t){return null===t||void 0===t}function Qn(t){return!(!t||\"object\"!=typeof t||\"number\"!=typeof t.length)&&(\"function\"==typeof t.copy&&\"function\"==typeof t.slice&&!(t.length>0&&\"number\"!=typeof t[0]))}function $n(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.tolerance||0,i=[],o=Qe();o.load(en(t));var s;return G(e,function(t){var e=!1;O(o.search(t),function(n){if(!1===e){var i=U(t).sort(),o=U(n).sort();Zn(i,o)?(e=!0,s=s?tr(s,t):t):(0===r?Nn(i[0],n)&&Nn(i[1],n):on(n,i[0]).properties.dist<=r&&on(n,i[1]).properties.dist<=r)?(e=!0,s=s?tr(s,t):t):(0===r?Nn(o[0],t)&&Nn(o[1],t):on(t,o[0]).properties.dist<=r&&on(t,o[1]).properties.dist<=r)&&(s=s?tr(s,n):n)}}),!1===e&&s&&(i.push(s),s=void 0)}),s&&i.push(s),c(i)}function tr(t,e){var n=U(e),r=U(t),i=r[0],o=r[r.length-1],s=t.geometry.coordinates;return Zn(n[0],i)?s.unshift(n[1]):Zn(n[0],o)?s.push(n[1]):Zn(n[1],i)?s.unshift(n[0]):Zn(n[1],o)&&s.push(n[0]),t}function er(t){var e=t%360;return e<0&&(e+=360),e}function nr(t,e,n,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");var o=i.units,s=i.properties;if(!t)throw new Error(\"origin is required\");if(void 0===e||null===e)throw new Error(\"distance is required\");if(void 0===n||null===n)throw new Error(\"bearing is required\");if(!(e>=0))throw new Error(\"distance must be greater than 0\");var a=E(e,o,\"meters\"),u=X(t),c=function(t,e,n,r){r=void 0===r?Fo:Number(r);var i=e/r,o=t[0]*Math.PI/180,s=x(t[1]),a=x(n),u=i*Math.cos(a),c=s+u;Math.abs(c)>Math.PI/2&&(c=c>0?Math.PI-c:-Math.PI-c);var h=Math.log(Math.tan(c/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),l=Math.abs(h)>1e-11?u/h:Math.cos(s),p=i*Math.sin(a)/l;return[(180*(o+p)/Math.PI+540)%360-180,180*c/Math.PI]}(u,a,n);return c[0]+=c[0]-u[0]>180?-360:u[0]-c[0]>180?360:0,r(c,s)}function rr(t,e,n,r,i,o){for(var s=0;s<t.length;s++){var a=t[s],u=t[s+1];s===t.length-1&&(u=t[0]),r=ir(a,u,e),n<=0&&r>0?function(t,e,n){return ir(t,e,n)<0}(e,a,i)||(i=a):n>0&&r<=0&&(function(t,e,n){return ir(t,e,n)>0}(e,a,o)||(o=a)),n=r}return[i,o]}function ir(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(e[1]-t[1])}function or(t){if(!t)throw new Error(\"line is required\");var e=t.geometry?t.geometry.type:t.type;if(!Array.isArray(t)&&\"LineString\"!==e)throw new Error(\"geometry must be a LineString\");for(var n,r,i=U(t),o=0,s=1;s<i.length;)n=r||i[0],o+=((r=i[s])[0]-n[0])*(r[1]+n[1]),s++;return o>0}function sr(t,e){switch(\"Feature\"===t.type?t.geometry.type:t.type){case\"GeometryCollection\":return A(t,function(t){sr(t,e)}),t;case\"LineString\":return ar(U(t),e),t;case\"Polygon\":return ur(U(t),e),t;case\"MultiLineString\":return U(t).forEach(function(t){ar(t,e)}),t;case\"MultiPolygon\":return U(t).forEach(function(t){ur(t,e)}),t;case\"Point\":case\"MultiPoint\":return t}}function ar(t,e){or(t)===e&&t.reverse()}function ur(t,e){or(t[0])!==e&&t[0].reverse();for(var n=1;n<t.length;n++)or(t[n])===e&&t[n].reverse()}function cr(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.zProperty||\"elevation\",r=e.flip,i=e.flags;W(t,\"Point\",\"input must contain Points\");for(var o=function(t,e){var n={};O(t,function(t){var e=U(t)[1];n[e]||(n[e]=[]),n[e].push(t)});return Object.keys(n).map(function(t){var e=n[t],r=e.sort(function(t,e){return U(t)[0]-U(e)[0]});return r}).sort(function(t,n){return e?U(t[0])[1]-U(n[0])[1]:U(n[0])[1]-U(t[0])[1]})}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],c=[],h=0;h<u.length;h++){var l=u[h];l.properties[n]?c.push(l.properties[n]):c.push(0),!0===i&&(l.properties.matrixPosition=[a,h])}s.push(c)}return s}function hr(t,e,n,r){r=r||{};for(var i=Object.keys(ks),o=0;o<i.length;o++){var s=i[o],a=r[s];a=void 0!==a&&null!==a?a:ks[s],zs[s]=a}zs.verbose&&console.log(\"MarchingSquaresJS-isoBands: computing isobands for [\"+e+\":\"+(e+n)+\"]\");var u,c=function(t,e,n){for(var r=t.length-1,i=t[0].length-1,o={rows:r,cols:i,cells:[]},s=e+Math.abs(n),a=0;a<r;++a){o.cells[a]=[];for(var u=0;u<i;++u){var c=0,h=t[a+1][u],l=t[a+1][u+1],p=t[a][u+1],f=t[a][u];if(!(isNaN(h)||isNaN(l)||isNaN(p)||isNaN(f))){c|=h<e?0:h>s?128:64,c|=l<e?0:l>s?32:16,c|=p<e?0:p>s?8:4;var g=+(c|=f<e?0:f>s?2:1),d=0;if(17===c||18===c||33===c||34===c||38===c||68===c||72===c||98===c||102===c||132===c||136===c||137===c||152===c||153===c){var y=(h+l+p+f)/4;d=y>s?2:y<e?0:1,34===c?1===d?c=35:0===d&&(c=136):136===c?1===d?(c=35,d=4):0===d&&(c=34):17===c?1===d?(c=155,d=4):0===d&&(c=153):68===c?1===d?(c=103,d=4):0===d&&(c=102):153===c?1===d&&(c=155):102===c?1===d&&(c=103):152===c?d<2&&(c=156,d=1):137===c?d<2&&(c=139,d=1):98===c?d<2&&(c=99,d=1):38===c?d<2&&(c=39,d=1):18===c?d>0?(c=156,d=4):c=152:33===c?d>0?(c=139,d=4):c=137:72===c?d>0?(c=99,d=4):c=98:132===c&&(d>0?(c=39,d=4):c=38)}if(0!=c&&170!=c){var _,m,v,x,E,w,b,I;_=m=v=x=E=w=b=I=.5;var N=[];1===c?(v=1-lr(e,p,f),I=1-lr(e,h,f),N.push(Sa[c])):169===c?(v=lr(s,f,p),I=lr(s,f,h),N.push(Sa[c])):4===c?(w=1-lr(e,l,p),x=lr(e,f,p),N.push(Na[c])):166===c?(w=lr(s,p,l),x=1-lr(s,p,f),N.push(Na[c])):16===c?(E=lr(e,p,l),m=lr(e,h,l),N.push(Ia[c])):154===c?(E=1-lr(s,l,p),m=1-lr(s,l,h),N.push(Ia[c])):64===c?(b=lr(e,f,h),_=1-lr(e,l,h),N.push(La[c])):106===c?(b=1-lr(s,h,f),_=lr(s,h,l),N.push(La[c])):168===c?(x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),N.push(Ca[c]),N.push(Sa[c])):2===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Ca[c]),N.push(Sa[c])):162===c?(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),N.push(Ca[c]),N.push(Sa[c])):8===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),N.push(Ia[c]),N.push(Na[c])):138===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):32===c?(E=lr(s,p,l),w=lr(e,p,l),_=lr(e,h,l),m=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):42===c?(I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Ma[c]),N.push(La[c])):128===c&&(I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ma[c]),N.push(La[c])),5===c?(w=1-lr(e,l,p),I=1-lr(e,h,f),N.push(Na[c])):165===c?(w=lr(s,p,l),I=lr(s,f,h),N.push(Na[c])):20===c?(x=lr(e,f,p),m=lr(e,h,l),N.push(Ca[c])):150===c?(x=1-lr(s,p,f),m=1-lr(s,l,h),N.push(Ca[c])):80===c?(E=lr(e,p,l),b=lr(e,f,h),N.push(Ia[c])):90===c?(E=1-lr(s,l,p),b=1-lr(s,h,f),N.push(Ia[c])):65===c?(v=1-lr(e,p,f),_=1-lr(e,l,h),N.push(Sa[c])):105===c?(v=lr(s,f,p),_=lr(s,h,l),N.push(Sa[c])):160===c?(E=lr(s,p,l),w=lr(e,p,l),I=lr(e,f,h),b=lr(s,f,h),N.push(Ia[c]),N.push(Na[c])):10===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Ia[c]),N.push(Na[c])):130===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ca[c]),N.push(Sa[c])):40===c?(x=lr(s,f,p),v=lr(e,f,p),_=lr(e,h,l),m=lr(s,h,l),N.push(Ca[c]),N.push(Sa[c])):101===c?(w=lr(s,p,l),_=lr(s,h,l),N.push(Na[c])):69===c?(w=1-lr(e,l,p),_=1-lr(e,l,h),N.push(Na[c])):149===c?(I=lr(s,f,h),m=1-lr(s,l,h),N.push(Ma[c])):21===c?(I=1-lr(e,h,f),m=lr(e,h,l),N.push(Ma[c])):86===c?(x=1-lr(s,p,f),b=1-lr(s,h,f),N.push(Ca[c])):84===c?(x=lr(e,f,p),b=lr(e,f,h),N.push(Ca[c])):89===c?(E=1-lr(s,l,p),v=lr(s,f,p),N.push(Sa[c])):81===c?(E=lr(e,p,l),v=1-lr(e,p,f),N.push(Sa[c])):96===c?(E=lr(s,p,l),w=lr(e,p,l),b=lr(e,f,h),_=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):74===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):24===c?(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),m=lr(e,h,l),N.push(Ia[c]),N.push(Sa[c])):146===c?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),m=1-lr(s,l,h),N.push(Ia[c]),N.push(Sa[c])):6===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Na[c]),N.push(Ca[c])):164===c?(w=lr(s,p,l),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),N.push(Na[c]),N.push(Ca[c])):129===c?(v=1-lr(e,p,f),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Sa[c]),N.push(Ma[c])):41===c?(v=lr(s,f,p),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Sa[c]),N.push(Ma[c])):66===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Ca[c]),N.push(Sa[c])):104===c?(x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=lr(s,h,l),N.push(Sa[c]),N.push(Pa[c])):144===c?(E=lr(e,p,l),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h),N.push(Ia[c]),N.push(La[c])):26===c?(E=1-lr(s,l,p),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l),N.push(Ia[c]),N.push(La[c])):36===c?(w=lr(s,p,l),x=lr(e,f,p),_=lr(e,h,l),m=lr(s,h,l),N.push(Na[c]),N.push(Ca[c])):134===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Na[c]),N.push(Ca[c])):9===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=1-lr(e,h,f),N.push(Ia[c]),N.push(Na[c])):161===c?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=lr(s,f,h),N.push(Ia[c]),N.push(Na[c])):37===c?(w=lr(s,p,l),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Na[c]),N.push(Ma[c])):133===c?(w=1-lr(e,l,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Na[c]),N.push(Ma[c])):148===c?(x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h),N.push(Ca[c]),N.push(La[c])):22===c?(x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l),N.push(Ca[c]),N.push(La[c])):82===c?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),N.push(Ia[c]),N.push(Sa[c])):88===c?(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),N.push(Ia[c]),N.push(Sa[c])):73===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),_=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):97===c?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),_=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):145===c?(E=lr(e,p,l),v=1-lr(e,p,f),I=lr(s,f,h),m=1-lr(s,l,h),N.push(Ia[c]),N.push(Ma[c])):25===c?(E=1-lr(s,l,p),v=lr(s,f,p),I=1-lr(e,h,f),m=lr(e,h,l),N.push(Ia[c]),N.push(Ma[c])):70===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Na[c]),N.push(Ca[c])):100===c?(w=lr(s,p,l),x=lr(e,f,p),b=lr(e,f,h),_=lr(s,h,l),N.push(Na[c]),N.push(Ca[c])):34===c?(0===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):35===c?(4===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c]),N.push(La[c])):136===c?(0===d?(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):153===c?(0===d?(E=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Sa[c])):102===c?(0===d?(w=1-lr(e,l,p),x=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Na[c]),N.push(La[c])):155===c?(4===d?(E=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Ma[c])):103===c?(4===d?(w=1-lr(e,l,p),x=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Na[c]),N.push(Ca[c])):152===c?(0===d?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Ca[c]),N.push(Sa[c])):156===c?(4===d?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Sa[c]),N.push(La[c])):137===c?(0===d?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c])):139===c?(4===d?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c])):98===c?(0===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(La[c])):99===c?(4===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c])):38===c?(0===d?(w=1-lr(e,l,p),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):39===c?(4===d?(w=1-lr(e,l,p),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Na[c]),N.push(Ca[c]),N.push(La[c])):85===c&&(E=1,w=0,x=1,v=0,I=0,b=1,_=0,m=1),(_<0||_>1||m<0||m>1||E<0||E>1||x<0||x>1||I<0||I>1||b<0||b>1)&&console.log(\"MarchingSquaresJS-isoBands: \"+c+\" \"+g+\" \"+h+\",\"+l+\",\"+p+\",\"+f+\" \"+d+\" \"+_+\" \"+m+\" \"+E+\" \"+w+\" \"+x+\" \"+v+\" \"+I+\" \"+b),o.cells[a][u]={cval:c,cval_real:g,flipped:d,topleft:_,topright:m,righttop:E,rightbottom:w,bottomright:x,bottomleft:v,leftbottom:I,lefttop:b,edges:N}}}}}return o}(t,e,n);return zs.polygons?(zs.verbose&&console.log(\"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\"),u=function(t){var e=[],n=0;return t.cells.forEach(function(t,r){t.forEach(function(t,i){if(void 0!==t){var o=Ra[t.cval](t);\"object\"==typeof o&&pr(o)?\"object\"==typeof o[0]&&pr(o[0])?\"object\"==typeof o[0][0]&&pr(o[0][0])?o.forEach(function(t){t.forEach(function(t){t[0]+=i,t[1]+=r}),e[n++]=t}):(o.forEach(function(t){t[0]+=i,t[1]+=r}),e[n++]=o):console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\"):console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\")}})}),e}(c)):(zs.verbose&&console.log(\"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\"),u=function(t){for(var e=[],n=t.rows,r=t.cols,i=[],o=0;o<n;o++)for(var s=0;s<r;s++)if(void 0!==t.cells[o][s]&&t.cells[o][s].edges.length>0){var a=t.cells[o][s],u=function(t){if(t.edges.length>0){var e=t.edges[t.edges.length-1],n=t.cval_real;switch(e){case 0:return n&Xs?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 1:return n&Us?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 2:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 3:return n&Ys?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 4:return n&Xs?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 5:return n&Us?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 6:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 7:return n&Ys?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 8:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.righttop],x:-1,y:0,o:1};case 9:return n&Ys?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 10:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.righttop],x:-1,y:0,o:1};case 11:return n&js?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 12:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 13:return n&Ys?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 14:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 15:return n&js?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 16:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 17:return n&js?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 18:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 19:return n&js?{p:[t.bottomleft,0],x:0,y:1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 20:return n&js?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 21:return n&Xs?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.topright,1],x:0,y:-1,o:1};case 22:return n&js?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 23:return n&Xs?{p:[0,t.lefttop],x:1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};default:console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\"),console.log(t)}}return null}(a),c=null,h=s,l=o;null!==u&&i.push([u.p[0]+h,u.p[1]+l]);do{if(null===(c=function(t,e,n,r){var i,o,s,a,u,c=t.cval;switch(e){case-1:switch(r){case 0:i=Na[c],s=ea[c],a=na[c],u=ra[c];break;default:i=Ia[c],s=Qs[c],a=$s[c],u=ta[c]}break;case 1:switch(r){case 0:i=Ma[c],s=fa[c],a=ga[c],u=da[c];break;default:i=La[c],s=ha[c],a=la[c],u=pa[c]}break;default:switch(n){case-1:switch(r){case 0:i=Pa[c],s=Vs[c],a=Hs[c],u=Ws[c];break;default:i=Oa[c],s=Js[c],a=Zs[c],u=Ks[c]}break;case 1:switch(r){case 0:i=Sa[c],s=ia[c],a=oa[c],u=sa[c];break;default:i=Ca[c],s=aa[c],a=ua[c],u=ca[c]}}}{if(o=t.edges.indexOf(i),void 0===t.edges[o])return null;!function(t,e){delete t.edges[e];for(var n=e+1;n<t.edges.length;n++)t.edges[n-1]=t.edges[n];t.edges.pop()}(t,o)}switch(c=t.cval_real,i){case 0:c&Xs?(e=t.topleft,n=1):(e=1,n=t.righttop);break;case 1:c&Us?(e=1,n=t.rightbottom):(e=t.topleft,n=1);break;case 2:c&Us?(e=t.topleft,n=1):(e=t.bottomright,n=0);break;case 3:c&Ys?(e=t.bottomleft,n=0):(e=t.topleft,n=1);break;case 4:c&Xs?(e=t.topright,n=1):(e=1,n=t.righttop);break;case 5:c&Us?(e=1,n=t.rightbottom):(e=t.topright,n=1);break;case 6:c&Us?(e=t.topright,n=1):(e=t.bottomright,n=0);break;case 7:c&Ys?(e=t.bottomleft,n=0):(e=t.topright,n=1);break;case 8:c&Us?(e=1,n=t.righttop):(e=t.bottomright,n=0);break;case 9:c&Ys?(e=t.bottomleft,n=0):(e=1,n=t.righttop);break;case 10:c&Ys?(e=1,n=t.righttop):(e=0,n=t.leftbottom);break;case 11:c&js?(e=0,n=t.lefttop):(e=1,n=t.righttop);break;case 12:c&Us?(e=1,n=t.rightbottom):(e=t.bottomright,n=0);break;case 13:c&Ys?(e=t.bottomleft,n=0):(e=1,n=t.rightbottom);break;case 14:c&Ys?(e=1,n=t.rightbottom):(e=0,n=t.leftbottom);break;case 15:c&js?(e=0,n=t.lefttop):(e=1,n=t.rightbottom);break;case 16:c&Us?(e=0,n=t.leftbottom):(e=t.bottomright,n=0);break;case 17:c&js?(e=0,n=t.lefttop):(e=t.bottomright,n=0);break;case 18:c&Ys?(e=t.bottomleft,n=0):(e=0,n=t.leftbottom);break;case 19:c&js?(e=0,n=t.lefttop):(e=t.bottomleft,n=0);break;case 20:c&js?(e=0,n=t.leftbottom):(e=t.topleft,n=1);break;case 21:c&Xs?(e=t.topright,n=1):(e=0,n=t.leftbottom);break;case 22:c&js?(e=0,n=t.lefttop):(e=t.topleft,n=1);break;case 23:c&Xs?(e=t.topright,n=1):(e=0,n=t.lefttop);break;default:return console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\"),console.log(t),null}void 0!==e&&void 0!==n&&void 0!==s&&void 0!==a&&void 0!==u||(console.log(\"MarchingSquaresJS-isoBands: undefined value!\"),console.log(t),console.log(e+\" \"+n+\" \"+s+\" \"+a+\" \"+u));return{p:[e,n],x:s,y:a,o:u}}(t.cells[l][h],u.x,u.y,u.o)))break;if(i.push([c.p[0]+h,c.p[1]+l]),h+=c.x,l+=c.y,u=c,l<0||l>=n||h<0||h>=r||void 0===t.cells[l][h]){h-=c.x,l-=c.y;var p=function(t,e,n,r,i,o){var s=t.cells[n][e],a=s.cval_real,u=e+r,c=n+i,h=[],l=!1;for(;!l;){if(void 0===t.cells[c]||void 0===t.cells[c][u])if(c-=i,u-=r,s=t.cells[c][u],a=s.cval_real,-1===i)if(0===o)if(a&Ys)h.push([u,c]),r=-1,i=0,o=0;else{if(!(a&Us)){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u+1,c]),r=1,i=0,o=0}else{if(!(a&Ys)){if(a&Us){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u+s.bottomleft,c]),r=0,i=1,o=0,l=!0;break}h.push([u,c]),r=-1,i=0,o=0}else if(1===i)if(0===o){if(!(a&Xs)){if(a&js){h.push([u+s.topleft,c+1]),r=0,i=-1,o=0,l=!0;break}h.push([u+s.topright,c+1]),r=0,i=-1,o=1,l=!0;break}h.push([u+1,c+1]),r=1,i=0,o=1}else h.push([u+1,c+1]),r=1,i=0,o=1;else if(-1===r)if(0===o){if(!(a&js)){if(a&Ys){h.push([u,c+s.leftbottom]),r=1,i=0,o=0,l=!0;break}h.push([u,c+s.lefttop]),r=1,i=0,o=1,l=!0;break}h.push([u,c+1]),r=0,i=1,o=0}else{if(!(a&js)){console.log(\"MarchingSquaresJS-isoBands: wtf\");break}h.push([u,c+1]),r=0,i=1,o=0}else{if(1!==r){console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");break}if(0===o){if(!(a&Us)){h.push([u+1,c+s.rightbottom]),r=-1,i=0,o=0,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}else{if(!(a&Us)){if(a&Xs){h.push([u+1,c+s.righttop]),r=-1,i=0,o=1;break}h.push([u+1,c+s.rightbottom]),r=-1,i=0,o=0,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}}else if(s=t.cells[c][u],a=s.cval_real,-1===r)if(0===o)if(void 0!==t.cells[c-1]&&void 0!==t.cells[c-1][u])r=0,i=-1,o=1;else{if(!(a&Ys)){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u,c])}else{if(!(a&js)){console.log(\"MarchingSquaresJS-isoBands: found entry from top at \"+u+\",\"+c);break}console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\")}else if(1===r){if(0===o){console.log(\"MarchingSquaresJS-isoBands: wtf\");break}if(void 0!==t.cells[c+1]&&void 0!==t.cells[c+1][u])r=0,i=1,o=0;else{if(!(a&Xs)){h.push([u+s.topleft,c+1]),r=0,i=-1,o=0,l=!0;break}h.push([u+1,c+1]),r=1,i=0,o=1}}else if(-1===i){if(1!==o){console.log(\"MarchingSquaresJS-isoBands: wtf\");break}if(void 0!==t.cells[c][u+1])r=1,i=0,o=1;else{if(!(a&Us)){h.push([u+1,c+s.righttop]),r=-1,i=0,o=1,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}}else{if(1!==i){console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");break}if(0!==o){console.log(\"MarchingSquaresJS-isoBands: wtf\");break}if(void 0!==t.cells[c][u-1])r=-1,i=0,o=0;else{if(!(a&js)){h.push([u,c+s.leftbottom]),r=1,i=0,o=0,l=!0;break}h.push([u,c+1]),r=0,i=1,o=0}}if(u+=r,c+=i,u===e&&c===n)break}return{path:h,i:u,j:c,x:r,y:i,o:o}}(t,h,l,c.x,c.y,c.o);if(null===p)break;p.path.forEach(function(t){i.push(t)}),h=p.i,l=p.j,u=p}}while(void 0!==t.cells[l][h]&&t.cells[l][h].edges.length>0);e.push(i),i=[],t.cells[o][s].edges.length>0&&s--}return e}(c)),\"function\"==typeof zs.successCallback&&zs.successCallback(u),u}function lr(t,e,n){return(t-e)/(n-e)}function pr(t){return t.constructor.toString().indexOf(\"Array\")>-1}function fr(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.pivot,i=n.mutate;if(!t)throw new Error(\"geojson is required\");if(void 0===e||null===e||isNaN(e))throw new Error(\"angle is required\");return 0===e?t:(r||(r=ye(t)),!1!==i&&void 0!==i||(t=Gt(t)),S(t,function(t){var n=sn(r,t)+e,i=un(r,t),o=U(nr(r,i,n));t[0]=o[0],t[1]=o[1]}),t)}function gr(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.origin,i=n.mutate;if(!t)throw new Error(\"geojson required\");if(\"number\"!=typeof e||0===e)throw new Error(\"invalid factor\");var o=Array.isArray(r)||\"object\"==typeof r;return!0!==i&&(t=Gt(t)),\"FeatureCollection\"!==t.type||o?dr(t,e,r):(O(t,function(n,i){t.features[i]=dr(n,e,r)}),t)}function dr(t,e,n){var i=\"Point\"===K(t);return n=function(t,e){void 0!==e&&null!==e||(e=\"centroid\");if(Array.isArray(e)||\"object\"==typeof e)return X(e);var n=t.bbox?t.bbox:j(t),i=n[0],o=n[1],s=n[2],a=n[3];switch(e){case\"sw\":case\"southwest\":case\"westsouth\":case\"bottomleft\":return r([i,o]);case\"se\":case\"southeast\":case\"eastsouth\":case\"bottomright\":return r([s,o]);case\"nw\":case\"northwest\":case\"westnorth\":case\"topleft\":return r([i,a]);case\"ne\":case\"northeast\":case\"eastnorth\":case\"topright\":return r([s,a]);case\"center\":return de(t);case void 0:case null:case\"centroid\":return ye(t);default:throw new Error(\"invalid origin\")}}(t,n),1===e||i?t:(S(t,function(t){var r=un(n,t),i=sn(n,t),o=U(nr(n,r*e,i));t[0]=o[0],t[1]=o[1],3===t.length&&(t[2]*=e)}),t)}function yr(t){var e=t[0],n=t[1];return[n[0]-e[0],n[1]-e[1]]}function _r(t,e){return t[0]*e[1]-e[0]*t[1]}function mr(t,e){return!function(t,e){return 0===_r(yr(t),yr(e))}(t,e)&&function(t,e){var n=t[0],r=yr(t),i=e[0],o=yr(e),s=_r(r,o);return function(t,e){return[t[0]+e[0],t[1]+e[1]]}(n,function(t,e){return[t*e[0],t*e[1]]}(_r(function(t,e){return[t[0]-e[0],t[1]-e[1]]}(i,n),o)/s,r))}(t,e)}function vr(t,e,n){var r=[],i=_(e,n),o=U(t),s=[];return o.forEach(function(t,e){if(e!==o.length-1){var n=function(t,e,n){var r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),i=t[0]+n*(e[1]-t[1])/r,o=e[0]+n*(e[1]-t[1])/r,s=t[1]+n*(t[0]-e[0])/r,a=e[1]+n*(t[0]-e[0])/r;return[[i,s],[o,a]]}(t,o[e+1],i);if(r.push(n),e>0){var a=r[e-1],u=mr(n,a);!1!==u&&(a[1]=u,n[0]=u),s.push(a[0]),e===o.length-2&&(s.push(n[0]),s.push(n[1]))}2===o.length&&(s.push(n[0]),s.push(n[1]))}}),a(s,t.properties)}function xr(t,e,n){var r=e[0]-t[0],i=e[1]-t[1],o=n[0]-e[0],s=n[1]-e[1];return Math.sign(r*s-o*i)}function Er(t,e){return e.geometry.coordinates[0].every(function(e){return Pt(r(e),t)})}function wr(t,e){for(var n=0;n<t.coordinates.length-1;n++)if(function(t,e,n){var r=n[0]-t[0],i=n[1]-t[1],o=e[0]-t[0],s=e[1]-t[1];if(r*s-i*o!=0)return!1;return Math.abs(o)>=Math.abs(s)?o>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:s>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]}(t.coordinates[n],t.coordinates[n+1],e.coordinates))return!0;return!1}function br(t,e){return nn(e,kn(t)).features.length>0}function Ir(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Nr(t,e){return t[0]===e[0]&&t[1]===e[1]}function Cr(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&!n&&!r;){for(var s=0;s<e.coordinates.length-1;s++){var a=!0;0!==s&&s!==e.coordinates.length-2||(a=!1),Lr(e.coordinates[s],e.coordinates[s+1],t.coordinates[o],a)?n=!0:r=!0}o++}return n&&r}function Sr(t,e){return nn(t,kn(e)).features.length>0}function Mr(t,e){for(var n=!1,i=!1,o=t.coordinates[0].length,s=0;s<o&&n&&i;)Pt(r(t.coordinates[0][s]),e)?n=!0:i=!0,s++;return i&&i}function Lr(t,e,n,r){var i=n[0]-t[0],o=n[1]-t[1],s=e[0]-t[0],a=e[1]-t[1];return 0==i*a-o*s&&(r?Math.abs(s)>=Math.abs(a)?s>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:a>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]:Math.abs(s)>=Math.abs(a)?s>0?t[0]<n[0]&&n[0]<e[0]:e[0]<n[0]&&n[0]<t[0]:a>0?t[1]<n[1]&&n[1]<e[1]:e[1]<n[1]&&n[1]<t[1])}function Pr(t){return t.coordinates.map(function(e){return{type:t.type.replace(\"Multi\",\"\"),coordinates:e}})}function Or(t,e){return t.hasOwnProperty(\"coordinates\")?t.coordinates.length===e.coordinates.length:t.length===e.length}function Rr(t,e){return ka(t,e,{strict:!0})}function Tr(t,e){if(!t)throw new Error(\"feature1 is required\");if(!e)throw new Error(\"feature2 is required\");var n=K(t);if(n!==K(e))throw new Error(\"features must be of the same type\");if(\"Point\"===n)throw new Error(\"Point geometry not supported\");if(new ja({precision:6}).compare(t,e))return!1;var r=0;switch(n){case\"MultiPoint\":var i=T(t),o=T(e);i.forEach(function(t){o.forEach(function(e){t[0]===e[0]&&t[1]===e[1]&&r++})});break;case\"LineString\":case\"MultiLineString\":G(t,function(t){G(e,function(e){$n(t,e).features.length&&r++})});break;case\"Polygon\":case\"MultiPolygon\":G(t,function(t){G(e,function(e){nn(t,e).features.length&&r++})})}return r>0}function Ar(t,e,n){n=n||[];for(var r=0;r<t;r++)n[r]=e;return n}function Dr(t,e){if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error(\"Invalid GeoJSON object for \"+e)}function Fr(t){for(var e=t,n=[];e.parent;)n.unshift(e),e=e.parent;return n}function qr(t,e){e=e||{},this.nodes=[],this.diagonal=!!e.diagonal,this.grid=[];for(var n=0;n<t.length;n++){this.grid[n]=[];for(var r=0,i=t[n];r<i.length;r++){var o=new Gr(n,r,i[r]);this.grid[n][r]=o,this.nodes.push(o)}}this.init()}function Gr(t,e,n){this.x=t,this.y=e,this.weight=n}function Br(t){this.content=[],this.scoreFunction=t}function kr(t){return t[0]}function zr(t){return t[1]}function jr(){this._=null}function Xr(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Ur(t,e){var n=e,r=e.R,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Yr(t,e){var n=e,r=e.L,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Vr(t){for(;t.L;)t=t.L;return t}function Hr(t,e,n,r){var i=[null,null],o=uu.push(i)-1;return i.left=t,i.right=e,n&&Jr(i,t,e,n),r&&Jr(i,e,t,r),su[t.index].halfedges.push(o),su[e.index].halfedges.push(o),i}function Wr(t,e,n){var r=[e,n];return r.left=t,r}function Jr(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function Zr(t,e,n,r,i){var o,s=t[0],a=t[1],u=s[0],c=s[1],h=0,l=1,p=a[0]-u,f=a[1]-c;if(o=e-u,p||!(o>0)){if(o/=p,p<0){if(o<h)return;o<l&&(l=o)}else if(p>0){if(o>l)return;o>h&&(h=o)}if(o=r-u,p||!(o<0)){if(o/=p,p<0){if(o>l)return;o>h&&(h=o)}else if(p>0){if(o<h)return;o<l&&(l=o)}if(o=n-c,f||!(o>0)){if(o/=f,f<0){if(o<h)return;o<l&&(l=o)}else if(f>0){if(o>l)return;o>h&&(h=o)}if(o=i-c,f||!(o<0)){if(o/=f,f<0){if(o>l)return;o>h&&(h=o)}else if(f>0){if(o<h)return;o<l&&(l=o)}return!(h>0||l<1)||(h>0&&(t[0]=[u+h*p,c+h*f]),l<1&&(t[1]=[u+l*p,c+l*f]),!0)}}}}}function Kr(t,e,n,r,i){var o=t[1];if(o)return!0;var s,a,u=t[0],c=t.left,h=t.right,l=c[0],p=c[1],f=h[0],g=h[1],d=(l+f)/2,y=(p+g)/2;if(g===p){if(d<e||d>=r)return;if(l>f){if(u){if(u[1]>=i)return}else u=[d,n];o=[d,i]}else{if(u){if(u[1]<n)return}else u=[d,i];o=[d,n]}}else if(s=(l-f)/(g-p),a=y-s*d,s<-1||s>1)if(l>f){if(u){if(u[1]>=i)return}else u=[(n-a)/s,n];o=[(i-a)/s,i]}else{if(u){if(u[1]<n)return}else u=[(i-a)/s,i];o=[(n-a)/s,n]}else if(p<g){if(u){if(u[0]>=r)return}else u=[e,s*e+a];o=[r,s*r+a]}else{if(u){if(u[0]<e)return}else u=[r,s*r+a];o=[e,s*e+a]}return t[0]=u,t[1]=o,!0}function Qr(t,e){var n=t.site,r=e.left,i=e.right;return n===i&&(i=r,r=n),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(n===r?(r=e[1],i=e[0]):(r=e[0],i=e[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function $r(t,e){return e[+(e.left!==t.site)]}function ti(t,e){return e[+(e.left===t.site)]}function ei(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,i=t.site,o=n.site;if(r!==o){var s=i[0],a=i[1],u=r[0]-s,c=r[1]-a,h=o[0]-s,l=o[1]-a,p=2*(u*l-c*h);if(!(p>=-pu)){var f=u*u+c*c,g=h*h+l*l,d=(l*f-c*g)/p,y=(u*g-h*f)/p,_=cu.pop()||new function(){Xr(this),this.x=this.y=this.arc=this.site=this.cy=null};_.arc=t,_.site=i,_.x=d+s,_.y=(_.cy=y+a)+Math.sqrt(d*d+y*y),t.circle=_;for(var m=null,v=au._;v;)if(_.y<v.y||_.y===v.y&&_.x<=v.x){if(!v.L){m=v.P;break}v=v.L}else{if(!v.R){m=v;break}v=v.R}au.insert(m,_),m||(iu=_)}}}}function ni(t){var e=t.circle;e&&(e.P||(iu=e.N),au.remove(e),cu.push(e),Xr(e),t.circle=null)}function ri(t){var e=hu.pop()||new function(){Xr(this),this.edge=this.site=this.circle=null};return e.site=t,e}function ii(t){ni(t),ou.remove(t),hu.push(t),Xr(t)}function oi(t){var e=t.circle,n=e.x,r=e.cy,i=[n,r],o=t.P,s=t.N,a=[t];ii(t);for(var u=o;u.circle&&Math.abs(n-u.circle.x)<lu&&Math.abs(r-u.circle.cy)<lu;)o=u.P,a.unshift(u),ii(u),u=o;a.unshift(u),ni(u);for(var c=s;c.circle&&Math.abs(n-c.circle.x)<lu&&Math.abs(r-c.circle.cy)<lu;)s=c.N,a.push(c),ii(c),c=s;a.push(c),ni(c);var h,l=a.length;for(h=1;h<l;++h)c=a[h],u=a[h-1],Jr(c.edge,u.site,c.site,i);u=a[0],(c=a[l-1]).edge=Hr(u.site,c.site,null,i),ei(u),ei(c)}function si(t){for(var e,n,r,i,o=t[0],s=t[1],a=ou._;a;)if((r=ai(a,s)-o)>lu)a=a.L;else{if(!((i=o-function(t,e){var n=t.N;if(n)return ai(n,e);var r=t.site;return r[1]===e?r[0]:1/0}(a,s))>lu)){r>-lu?(e=a.P,n=a):i>-lu?(e=a,n=a.N):e=n=a;break}if(!a.R){e=a;break}a=a.R}!function(t){su[t.index]={site:t,halfedges:[]}}(t);var u=ri(t);if(ou.insert(e,u),e||n){if(e===n)return ni(e),n=ri(e.site),ou.insert(u,n),u.edge=n.edge=Hr(e.site,u.site),ei(e),void ei(n);if(n){ni(e),ni(n);var c=e.site,h=c[0],l=c[1],p=t[0]-h,f=t[1]-l,g=n.site,d=g[0]-h,y=g[1]-l,_=2*(p*y-f*d),m=p*p+f*f,v=d*d+y*y,x=[(y*m-f*v)/_+h,(p*v-d*m)/_+l];Jr(n.edge,c,g,x),u.edge=Hr(c,t,null,x),n.edge=Hr(t,g,null,x),ei(e),ei(n)}else u.edge=Hr(e.site,u.site)}}function ai(t,e){var n=t.site,r=n[0],i=n[1],o=i-e;if(!o)return r;var s=t.P;if(!s)return-1/0;var a=(n=s.site)[0],u=n[1],c=u-e;if(!c)return a;var h=a-r,l=1/o-1/c,p=h/c;return l?(-p+Math.sqrt(p*p-2*l*(h*h/(-2*c)-u+c/2+i-o/2)))/l+r:(r+a)/2}function ui(t,e,n){return(t[0]-n[0])*(e[1]-t[1])-(t[0]-e[0])*(n[1]-t[1])}function ci(t,e){return e[1]-t[1]||e[0]-t[0]}function hi(t,e){var n,r,i,o=t.sort(ci).pop();for(uu=[],su=new Array(t.length),ou=new jr,au=new jr;;)if(i=iu,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===n&&o[1]===r||(si(o),n=o[0],r=o[1]),o=t.pop();else{if(!i)break;oi(i.arc)}if(function(){for(var t,e,n,r,i=0,o=su.length;i<o;++i)if((t=su[i])&&(r=(e=t.halfedges).length)){var s=new Array(r),a=new Array(r);for(n=0;n<r;++n)s[n]=n,a[n]=Qr(t,uu[e[n]]);for(s.sort(function(t,e){return a[e]-a[t]}),n=0;n<r;++n)a[n]=e[s[n]];for(n=0;n<r;++n)e[n]=a[n]}}(),e){var s=+e[0][0],a=+e[0][1],u=+e[1][0],c=+e[1][1];!function(t,e,n,r){for(var i,o=uu.length;o--;)Kr(i=uu[o],t,e,n,r)&&Zr(i,t,e,n,r)&&(Math.abs(i[0][0]-i[1][0])>lu||Math.abs(i[0][1]-i[1][1])>lu)||delete uu[o]}(s,a,u,c),function(t,e,n,r){var i,o,s,a,u,c,h,l,p,f,g,d,y=su.length,_=!0;for(i=0;i<y;++i)if(o=su[i]){for(s=o.site,a=(u=o.halfedges).length;a--;)uu[u[a]]||u.splice(a,1);for(a=0,c=u.length;a<c;)g=(f=ti(o,uu[u[a]]))[0],d=f[1],l=(h=$r(o,uu[u[++a%c]]))[0],p=h[1],(Math.abs(g-l)>lu||Math.abs(d-p)>lu)&&(u.splice(a,0,uu.push(Wr(s,f,Math.abs(g-t)<lu&&r-d>lu?[t,Math.abs(l-t)<lu?p:r]:Math.abs(d-r)<lu&&n-g>lu?[Math.abs(p-r)<lu?l:n,r]:Math.abs(g-n)<lu&&d-e>lu?[n,Math.abs(l-n)<lu?p:e]:Math.abs(d-e)<lu&&g-t>lu?[Math.abs(p-e)<lu?l:t,e]:null))-1),++c);c&&(_=!1)}if(_){var m,v,x,E=1/0;for(i=0,_=null;i<y;++i)(o=su[i])&&(x=(m=(s=o.site)[0]-t)*m+(v=s[1]-e)*v)<E&&(E=x,_=o);if(_){var w=[t,e],b=[t,r],I=[n,r],N=[n,e];_.halfedges.push(uu.push(Wr(s=_.site,w,b))-1,uu.push(Wr(s,b,I))-1,uu.push(Wr(s,I,N))-1,uu.push(Wr(s,N,w))-1)}}for(i=0;i<y;++i)(o=su[i])&&(o.halfedges.length||delete su[i])}(s,a,u,c)}this.edges=uu,this.cells=su,ou=au=uu=su=null}function li(t){return(t=t.slice()).push(t[0]),o([t])}function pi(t,e,n,r){var i=(r=r||{}).steps||64,s=r.units||\"kilometers\",a=r.angle||0,u=r.pivot||t,c=r.properties||t.properties||{};if(!t)throw new Error(\"center is required\");if(!e)throw new Error(\"xSemiAxis is required\");if(!n)throw new Error(\"ySemiAxis is required\");if(!I(r))throw new Error(\"options must be an object\");if(!b(i))throw new Error(\"steps must be a number\");if(!b(a))throw new Error(\"angle must be a number\");var h=X(t);if(\"degrees\"===s)var l=x(a);else e=nr(t,e,90,{units:s}),n=nr(t,n,0,{units:s}),e=X(e)[0]-h[0],n=X(n)[1]-h[1];for(var p=[],f=0;f<i;f+=1){var g=-360*f/i,d=e*n/Math.sqrt(Math.pow(n,2)+Math.pow(e,2)*Math.pow(fi(g),2)),y=e*n/Math.sqrt(Math.pow(e,2)+Math.pow(n,2)/Math.pow(fi(g),2));if(g<-90&&g>=-270&&(d=-d),g<-180&&g>=-360&&(y=-y),\"degrees\"===s){var _=d*Math.cos(l)+y*Math.sin(l),m=y*Math.cos(l)-d*Math.sin(l);d=_,y=m}p.push([d+h[0],y+h[1]])}return p.push(p[0]),\"degrees\"===s?o([p],c):fr(o([p],c),a,{pivot:u})}function fi(t){var e=t*Math.PI/180;return Math.tan(e)}function gi(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.properties,i=e.weight;if(!t)throw new Error(\"geojson is required\");var o=0,s=0,a=0;return A(t,function(t,e,n){var r=n[i];if(r=void 0===r||null===r?1:r,!b(r))throw new Error(\"weight value must be a number for feature index \"+e);(r=Number(r))>0&&S(t,function(t){o+=t[0]*r,s+=t[1]*r,a+=r})}),r([o/a,s/a],n)}function di(t,e,n,i){var o=n.properties.tolerance||.001,s=0,a=0,u=0,c=0;if(O(n,function(e){var n=e.properties.weight,r=void 0===n||null===n?1:n;if(r=Number(r),!b(r))throw new Error(\"weight value must be a number\");if(r>0){c+=1;var i=r*qt(e,t);0===i&&(i=1);var o=r/i;s+=e.geometry.coordinates[0]*o,a+=e.geometry.coordinates[1]*o,u+=o}}),c<1)throw new Error(\"no features to measure\");var h=s/u,l=a/u;return 1===c||0===i||Math.abs(h-e[0])<o&&Math.abs(l-e[1])<o?r([h,l],{medianCandidates:n.properties.medianCandidates}):(n.properties.medianCandidates.push([h,l]),di([h,l],t,n,i-1))}function yi(t,e){return{x:t[0]-e[0],y:t[1]-e[1]}}function _i(t){if(I(t)&&(t=t.bbox),t&&!Array.isArray(t))throw new Error(\"bbox is invalid\");return t?function(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}(t):[360*Ei(),180*Ei()]}function mi(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.bbox;void 0!==t&&null!==t||(t=1);for(var i=[],o=0;o<t;o++)i.push(r(_i(n)));return c(i)}function vi(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.bbox,r=e.num_vertices,i=e.max_radial_length;void 0!==t&&null!==t||(t=1),b(r)||(r=10),b(i)||(i=10);for(var s=[],a=0;a<t;a++){var u=[],h=Array.apply(null,new Array(r+1)).map(Math.random);h.forEach(function(t,e,n){n[e]=e>0?t+n[e-1]:t}),h.forEach(function(t){t=2*t*Math.PI/h[h.length-1];var e=Math.random();u.push([e*i*Math.sin(t),e*i*Math.cos(t)])}),u[u.length-1]=u[0],u=u.map(function(t){return function(e){return[e[0]+t[0],e[1]+t[1]]}}(_i(n))),s.push(o([u]))}return c(s)}function xi(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.bbox,r=e.num_vertices,i=e.max_length,o=e.max_rotation;void 0!==t&&null!==t||(t=1),(!b(r)||r<2)&&(r=10),b(i)||(i=1e-4),b(o)||(o=Math.PI/8);for(var s=[],u=0;u<t;u++){for(var h=[_i(n)],l=0;l<r-1;l++){var p=(0===l?2*Math.random()*Math.PI:Math.tan((h[l][1]-h[l-1][1])/(h[l][0]-h[l-1][0])))+(Math.random()-.5)*o*2,f=Math.random()*i;h.push([h[l][0]+f*Math.cos(p),h[l][1]+f*Math.sin(p)])}s.push(a(h))}return c(s)}function Ei(){return Math.random()-.5}function wi(t,e){if(!t)throw new Error(\"geojson is required\");if(\"FeatureCollection\"!==t.type)throw new Error(\"geojson must be a FeatureCollection\");if(void 0===e||null===e)throw new Error(\"filter is required\");var n=[];return O(t,function(t){Ci(t.properties,e)&&n.push(t)}),c(n)}function bi(t,e,n){if(!t)throw new Error(\"geojson is required\");if(\"FeatureCollection\"!==t.type)throw new Error(\"geojson must be a FeatureCollection\");if(void 0===e||null===e)throw new Error(\"property is required\");for(var r=Ni(t,e),i=Object.keys(r),o=0;o<i.length;o++){for(var s=i[o],a=r[s],u=[],h=0;h<a.length;h++)u.push(t.features[a[h]]);n(c(u),s,o)}}function Ii(t,e,n,r){var i=r;return bi(t,e,function(t,e,o){i=0===o&&void 0===r?t:n(i,t,e,o)}),i}function Ni(t,e){var n={};return O(t,function(t,r){var i=t.properties||{};if(i.hasOwnProperty(e)){var o=i[e];n.hasOwnProperty(o)?n[o].push(r):n[o]=[r]}}),n}function Ci(t,e){if(void 0===t)return!1;var n=typeof e;if(\"number\"===n||\"string\"===n)return t.hasOwnProperty(e);if(Array.isArray(e)){for(var r=0;r<e.length;r++)if(!Ci(t,e[r]))return!1;return!0}return Si(t,e)}function Si(t,e){for(var n=Object.keys(e),r=0;r<n.length;r++){var i=n[r];if(t[i]!==e[i])return!1}return!0}function Mi(t,e){if(!e)return{};if(!e.length)return{};for(var n={},r=0;r<e.length;r++){var i=e[r];t.hasOwnProperty(i)&&(n[i]=t[i])}return n}function Li(){}function Pi(t){this.message=t||\"\"}function Oi(t){this.message=t||\"\"}function Ri(){}function Ti(t){return null===t?Ac:t.color}function Ai(t){return null===t?null:t.parent}function Di(t,e){null!==t&&(t.color=e)}function Fi(t){return null===t?null:t.left}function qi(t){return null===t?null:t.right}function Gi(){this.root_=null,this.size_=0}function Bi(){}function ki(){this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}function zi(){}function ji(t){this.message=t||\"\"}function Xi(){this.array_=[]}function Ui(t){switch(t.type){case\"Polygon\":return mn(t)>1?t:null;case\"MultiPolygon\":var e=[];if(F(t,function(t){mn(t)>1&&e.push(t.geometry.coordinates)}),e.length)return{type:\"MultiPolygon\",coordinates:e}}}function Yi(){this.reset()}function Vi(t,e,n){var r=t.s=e+n,i=r-e,o=r-i;t.t=e-o+(n-i)}function Hi(t){return t>1?kf:t<-1?-kf:Math.asin(t)}function Wi(){}function Ji(t,e){t&&eg.hasOwnProperty(t.type)&&eg[t.type](t,e)}function Zi(t,e,n){var r,i=-1,o=t.length-n;for(e.lineStart();++i<o;)r=t[i],e.point(r[0],r[1],r[2]);e.lineEnd()}function Ki(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)Zi(t[n],e,1);e.polygonEnd()}function Qi(t){return[Hf(t[1],t[0]),Hi(t[2])]}function $i(t){var e=t[0],n=t[1],r=Wf(n);return[r*Wf(e),r*Kf(e),Kf(n)]}function to(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function eo(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function no(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function ro(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function io(t){var e=Qf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}function oo(t,e){return[t>Bf?t-jf:t<-Bf?t+jf:t,e]}function so(t,e,n){return(t%=jf)?e||n?rg(uo(t),co(e,n)):uo(t):e||n?co(e,n):oo}function ao(t){return function(e,n){return e+=t,[e>Bf?e-jf:e<-Bf?e+jf:e,n]}}function uo(t){var e=ao(t);return e.invert=ao(-t),e}function co(t,e){function n(t,e){var n=Wf(e),a=Wf(t)*n,u=Kf(t)*n,c=Kf(e),h=c*r+a*i;return[Hf(u*o-h*s,a*r-c*i),Hi(h*o+u*s)]}var r=Wf(t),i=Kf(t),o=Wf(e),s=Kf(e);return n.invert=function(t,e){var n=Wf(e),a=Wf(t)*n,u=Kf(t)*n,c=Kf(e),h=c*o-u*s;return[Hf(u*o+c*s,a*r+h*i),Hi(h*r-a*i)]},n}function ho(t,e){(e=$i(e))[0]-=t,io(e);var n=function(t){return t>1?0:t<-1?Bf:Math.acos(t)}(-e[1]);return((-e[2]<0?-n:n)+jf-Gf)%jf}function lo(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function po(t){if(e=t.length){for(var e,n,r=0,i=t[0];++r<e;)i.n=n=t[r],n.p=i,i=n;i.n=n=t[0],n.p=i}}function fo(t,e,n,r){function i(i,o){return t<=i&&i<=n&&e<=o&&o<=r}function o(i,o,a,c){var h=0,l=0;if(null==i||(h=s(i,a))!==(l=s(o,a))||u(i,o)<0^a>0)do{c.point(0===h||3===h?t:n,h>1?r:e)}while((h=(h+a+4)%4)!==l);else c.point(o[0],o[1])}function s(r,i){return Yf(r[0]-t)<Gf?i>0?0:3:Yf(r[0]-n)<Gf?i>0?2:1:Yf(r[1]-e)<Gf?i>0?1:0:i>0?3:2}function a(t,e){return u(t.x,e.x)}function u(t,e){var n=s(t,1),r=s(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(s){function u(t,e){i(t,e)&&E.point(t,e)}function c(o,s){var a=i(o,s);if(l&&p.push([o,s]),v)f=o,g=s,d=a,v=!1,a&&(E.lineStart(),E.point(o,s));else if(a&&m)E.point(o,s);else{var u=[y=Math.max(pg,Math.min(lg,y)),_=Math.max(pg,Math.min(lg,_))],c=[o=Math.max(pg,Math.min(lg,o)),s=Math.max(pg,Math.min(lg,s))];sg(u,c,t,e,n,r)?(m||(E.lineStart(),E.point(u[0],u[1])),E.point(c[0],c[1]),a||E.lineEnd(),x=!1):a&&(E.lineStart(),E.point(o,s),x=!1)}y=o,_=s,m=a}var h,l,p,f,g,d,y,_,m,v,x,E=s,w=og(),b={point:u,lineStart:function(){b.point=c,l&&l.push(p=[]),v=!0,m=!1,y=_=NaN},lineEnd:function(){h&&(c(f,g),d&&m&&w.rejoin(),h.push(w.result())),b.point=u,m&&E.lineEnd()},polygonStart:function(){E=w,h=[],l=[],x=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,i=l.length;n<i;++n)for(var o,s,a=l[n],u=1,c=a.length,h=a[0],p=h[0],f=h[1];u<c;++u)o=p,s=f,p=(h=a[u])[0],f=h[1],s<=r?f>r&&(p-o)*(r-s)>(f-s)*(t-o)&&++e:f<=r&&(p-o)*(r-s)<(f-s)*(t-o)&&--e;return e}(),n=x&&e,i=(h=hg(h)).length;(n||i)&&(s.polygonStart(),n&&(s.lineStart(),o(null,null,1,s),s.lineEnd()),i&&ug(h,a,e,o,s),s.polygonEnd()),E=s,h=l=p=null}};return b}}function go(t){return t.length>1}function yo(t,e){return((t=t.x)[0]<0?t[1]-kf-Gf:kf-t[1])-((e=e.x)[0]<0?e[1]-kf-Gf:kf-e[1])}function _o(t){return function(e){var n=new mo;for(var r in t)n[r]=t[r];return n.stream=e,n}}function mo(){}function vo(t,e,n){var r=e[1][0]-e[0][0],i=e[1][1]-e[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),ng(n,t.stream(vg));var s=vg.result(),a=Math.min(r/(s[1][0]-s[0][0]),i/(s[1][1]-s[0][1])),u=+e[0][0]+(r-a*(s[1][0]+s[0][0]))/2,c=+e[0][1]+(i-a*(s[1][1]+s[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([u,c])}function xo(t){return function(t){function e(t){return t=c(t[0]*Uf,t[1]*Uf),[t[0]*d+s,a-t[1]*d]}function n(t,e){return t=o(t,e),[t[0]*d+s,a-t[1]*d]}function r(){c=rg(u=so(x,E,w),o);var t=o(m,v);return s=y-t[0]*d,a=_+t[1]*d,i()}function i(){return f=g=null,e}var o,s,a,u,c,h,l,p,f,g,d=150,y=480,_=250,m=0,v=0,x=0,E=0,w=0,b=null,I=Eg,N=null,C=gg,S=.5,M=Ng(n,S);e.stream=function(t){return f&&g===t?f:f=Cg(I(u,M(C(g=t))))},e.clipAngle=function(t){return arguments.length?(I=+t?wg(b=t*Uf,6*Uf):(b=null,Eg),i()):b*Xf},e.clipExtent=function(t){return arguments.length?(C=null==t?(N=h=l=p=null,gg):fo(N=+t[0][0],h=+t[0][1],l=+t[1][0],p=+t[1][1]),i()):null==N?null:[[N,h],[l,p]]},e.scale=function(t){return arguments.length?(d=+t,r()):d},e.translate=function(t){return arguments.length?(y=+t[0],_=+t[1],r()):[y,_]},e.center=function(t){return arguments.length?(m=t[0]%360*Uf,v=t[1]%360*Uf,r()):[m*Xf,v*Xf]},e.rotate=function(t){return arguments.length?(x=t[0]%360*Uf,E=t[1]%360*Uf,w=t.length>2?t[2]%360*Uf:0,r()):[x*Xf,E*Xf,w*Xf]},e.precision=function(t){return arguments.length?(M=Ng(n,S=t*t),i()):Qf(S)},e.fitExtent=function(t,n){return vo(e,t,n)},e.fitSize=function(t,n){return function(t,e,n){return vo(t,[[0,0],e],n)}(e,t,n)};return function(){return o=t.apply(this,arguments),e.invert=o.invert&&function(t){return(t=c.invert((t[0]-s)/d,(a-t[1])/d))&&[t[0]*Xf,t[1]*Xf]},r()}}(function(){return t})()}function Eo(t,e){return[t,Zf($f((kf+e)/2))]}function wo(t,e){return[Zf($f((kf+e)/2)),-t]}function bo(t,n,r,i){var o=t.properties||{},s=\"Feature\"===t.type?t.geometry:t;if(\"GeometryCollection\"===s.type){var a=[];return A(t,function(t){var e=bo(t,n,r,i);e&&a.push(e)}),c(a)}var u,h=j(t),l=h[1]>50&&h[3]>50;u=l?{type:s.type,coordinates:No(s.coordinates,So(s))}:cn(s);var p=(new bh).read(u),f=d(y(n,r),\"meters\"),g=gp.bufferOp(p,f);if(g=(new Ih).write(g),!Io(g.coordinates)){var _;return(_=l?{type:g.type,coordinates:Co(g.coordinates,So(s))}:hn(g)).geometry?_:e(_,o)}}function Io(t){return Array.isArray(t[0])?Io(t[0]):isNaN(t[0])}function No(t,e){return\"object\"!=typeof t[0]?e(t):t.map(function(t){return No(t,e)})}function Co(t,e){return\"object\"!=typeof t[0]?e.invert(t):t.map(function(t){return Co(t,e)})}function So(t){var e=de(t).geometry.coordinates.reverse(),n=e.map(function(t){return-t});return Sg().center(e).rotate(n).scale(Fo)}function Mo(){for(var t=new bh,e=t.read(JSON.stringify(arguments[0].geometry)),n=1;n<arguments.length;n++)e=Df.union(e,t.read(JSON.stringify(arguments[n].geometry)));return e=(new Ih).write(e),{type:\"Feature\",geometry:e,properties:arguments[0].properties}}function Lo(t,n){var r=J(t),i=J(n);if(te(Pn(i,{precision:4})).coordinates[0].length<4)return null;if(te(Pn(r,{precision:4})).coordinates[0].length<4)return null;var o=new bh,s=o.read(Pn(r)),a=o.read(Pn(i)),u=Cf.intersection(s,a);if(u.isEmpty())return null;return e((new Ih).write(u))}function Po(t,e){return function(t,e,n){var r,i;if(!Array.isArray(e))throw new Error(\"Get closest expects an array as second argument\");return e.forEach(function(e,o){var s=n(e,t);s>=0&&(void 0===i||s<i)&&(i=s,r=o)}),r}(t,e,function(t,e){return t-e})}function Oo(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.properties||{},i=n.triangles,s=n.mask;if(null===e||void 0===e)throw new Error(\"cellSide is required\");if(!b(e))throw new Error(\"cellSide is invalid\");if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be array\");if(4!==t.length)throw new Error(\"bbox must contain 4 numbers\");if(s&&-1===[\"Polygon\",\"MultiPolygon\"].indexOf(K(s)))throw new Error(\"options.mask must be a (Multi)Polygon\");var a=t[0],u=t[1],h=t[2],l=t[3],p=(u+l)/2,f=(a+h)/2,g=2*e/qt([a,p],[h,p],n)*(h-a),d=2*e/qt([f,u],[f,l],n)*(l-u),y=g/2,_=2*y,m=Math.sqrt(3)/2*d,v=h-a,x=l-u,E=.75*_,w=m,N=(v-_)/(_-y/2),C=Math.floor(N),S=(C*E-y/2-v)/2-y/2+E/2,M=Math.floor((x-m)/m),L=(x-M*m)/2,P=M*m-x>m/2;P&&(L-=m/4);for(var O=[],R=[],T=0;T<6;T++){var A=2*Math.PI/6*T;O.push(Math.cos(A)),R.push(Math.sin(A))}for(var D=[],F=0;F<=C;F++)for(var q=0;q<=M;q++){var G=F%2==1;if((0!==q||!G)&&(0!==q||!P)){var B=F*E+a-S,k=q*w+u+L;if(G&&(k-=m/2),!0===i)(function(t,e,n,r,i,s){for(var a=[],u=0;u<6;u++){var c=[];c.push(t),c.push([t[0]+e*i[u],t[1]+n*s[u]]),c.push([t[0]+e*i[(u+1)%6],t[1]+n*s[(u+1)%6]]),c.push(t),a.push(o([c],r))}return a})([B,k],g/2,d/2,r,O,R).forEach(function(t){s?Lo(s,t)&&D.push(t):D.push(t)});else{var z=function(t,e,n,r,i,s){for(var a=[],u=0;u<6;u++){var c=t[0]+e*i[u],h=t[1]+n*s[u];a.push([c,h])}return a.push(a[0].slice()),o([a],r)}([B,k],g/2,d/2,r,O,R);s?Lo(s,z)&&D.push(z):D.push(z)}}}return c(D)}function Ro(t){if(t.features.length<=1)return t;var e=function(t){var e=Vo(),n=[];return F(t,function(t,e){var r=j(t);n.push({minX:r[0],minY:r[1],maxX:r[2],maxY:r[3],geojson:t,index:e})}),e.load(n),e}(t),n=[],r={};return F(t,function(t,i){if(r[i])return!0;for(e.remove({index:i},To),r[i]=!0;;){var o=j(t),s=e.search({minX:o[0],minY:o[1],maxX:o[2],maxY:o[3]});if(s.length>0){var a=s.map(function(t){return r[t.index]=!0,e.remove({index:t.index},To),t.geojson});a.push(t),t=Mo.apply(this,a)}if(0===s.length)break}n.push(t)}),c(n)}function To(t,e){return t.index===e.index}function Ao(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.properties,i=n.mask,s=[];if(null===e||void 0===e)throw new Error(\"cellSide is required\");if(!b(e))throw new Error(\"cellSide is invalid\");if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be array\");if(4!==t.length)throw new Error(\"bbox must contain 4 numbers\");if(i&&-1===[\"Polygon\",\"MultiPolygon\"].indexOf(K(i)))throw new Error(\"options.mask must be a (Multi)Polygon\");for(var a=t[0],u=t[1],h=t[2],l=t[3],p=e/qt([a,u],[h,u],n)*(h-a),f=e/qt([a,u],[a,l],n)*(l-u),g=h-a,d=l-u,y=Math.floor(g/p),_=Math.floor(d/f),m=(d-_*f)/2,v=a+(g-y*p)/2,x=0;x<y;x++){for(var E=u+m,w=0;w<_;w++){var N=o([[[v,E],[v,E+f],[v+p,E+f],[v+p,E],[v,E]]],r);i?Lo(i,N)&&s.push(N):s.push(N),E+=f}v+=p}return c(s)}function Do(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.properties,i=n.mask,s=[];if(null===e||void 0===e)throw new Error(\"cellSide is required\");if(!b(e))throw new Error(\"cellSide is invalid\");if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be array\");if(4!==t.length)throw new Error(\"bbox must contain 4 numbers\");if(i&&-1===[\"Polygon\",\"MultiPolygon\"].indexOf(K(i)))throw new Error(\"options.mask must be a (Multi)Polygon\");for(var a=e/qt([t[0],t[1]],[t[2],t[1]],n)*(t[2]-t[0]),u=e/qt([t[0],t[1]],[t[0],t[3]],n)*(t[3]-t[1]),h=0,l=t[0];l<=t[2];){for(var p=0,f=t[1];f<=t[3];){var g=null,d=null;h%2==0&&p%2==0?(g=o([[[l,f],[l,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f+u],[l+a,f+u],[l+a,f],[l,f+u]]],r)):h%2==0&&p%2==1?(g=o([[[l,f],[l+a,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f],[l,f+u],[l+a,f+u],[l,f]]],r)):p%2==0&&h%2==1?(g=o([[[l,f],[l,f+u],[l+a,f+u],[l,f]]],r),d=o([[[l,f],[l+a,f+u],[l+a,f],[l,f]]],r)):p%2==1&&h%2==1&&(g=o([[[l,f],[l,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f+u],[l+a,f+u],[l+a,f],[l,f+u]]],r)),i?(Lo(i,g)&&s.push(g),Lo(i,d)&&s.push(d)):(s.push(g),s.push(d)),f+=u,p++}h++,l+=a}return c(s)}var Fo=6371008.8,qo={meters:Fo,metres:Fo,millimeters:1e3*Fo,millimetres:1e3*Fo,centimeters:100*Fo,centimetres:100*Fo,kilometers:Fo/1e3,kilometres:Fo/1e3,miles:Fo/1609.344,nauticalmiles:Fo/1852,inches:39.37*Fo,yards:Fo/1.0936,feet:3.28084*Fo,radians:1,degrees:Fo/111325},Go={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/Fo,degrees:1/111325},Bo={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006},ko=Object.freeze({earthRadius:Fo,factors:qo,unitsFactors:Go,areaFactors:Bo,feature:e,geometry:n,point:r,points:i,polygon:o,polygons:s,lineString:a,lineStrings:u,featureCollection:c,multiLineString:h,multiPoint:l,multiPolygon:p,geometryCollection:f,round:g,radiansToLength:d,lengthToRadians:y,lengthToDegrees:_,bearingToAzimuth:m,radiansToDegrees:v,degreesToRadians:x,convertLength:E,convertArea:w,isNumber:b,isObject:I,validateBBox:N,validateId:C,radians2degrees:function(){throw new Error(\"method has been renamed to `radiansToDegrees`\")},degrees2radians:function(){throw new Error(\"method has been renamed to `degreesToRadians`\")},distanceToDegrees:function(){throw new Error(\"method has been renamed to `lengthToDegrees`\")},distanceToRadians:function(){throw new Error(\"method has been renamed to `lengthToRadians`\")},radiansToDistance:function(){throw new Error(\"method has been renamed to `radiansToLength`\")},bearingToAngle:function(){throw new Error(\"method has been renamed to `bearingToAzimuth`\")},convertDistance:function(){throw new Error(\"method has been renamed to `convertLength`\")}}),zo=Object.freeze({coordEach:S,coordReduce:M,propEach:L,propReduce:P,featureEach:O,featureReduce:R,coordAll:T,geomEach:A,geomReduce:D,flattenEach:F,flattenReduce:q,segmentEach:G,segmentReduce:B,lineEach:k,lineReduce:z}),jo=Object.freeze({getCoord:X,getCoords:U,containsNumber:Y,geojsonType:V,featureOf:H,collectionOf:W,getGeom:J,getGeomType:Z,getType:K}),Xo={successCallback:null,verbose:!1},Uo={},Yo=it,Vo=st;st.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!dt(t,e))return n;for(var i,o,s,a,u=[];e;){for(i=0,o=e.children.length;i<o;i++)s=e.children[i],dt(t,a=e.leaf?r(s):s)&&(e.leaf?n.push(s):gt(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!dt(t,e))return!1;for(var r,i,o,s,a=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],s=e.leaf?n(o):o,dt(t,s)){if(e.leaf||gt(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=yt([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,o,s=this.data,a=this.toBBox(t),u=[],c=[];s||u.length;){if(s||(s=u.pop(),r=u[u.length-1],n=c.pop(),o=!0),s.leaf&&-1!==(i=function(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}(t,s.children,e)))return s.children.splice(i,1),u.push(s),this._condense(u),this;o||s.leaf||!gt(s,a)?r?(n++,s=r.children[n],o=!1):s=null:(u.push(s),c.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:ht,compareMinY:lt,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return i=yt(t.slice(e,n+1)),at(i,this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=yt([])).leaf=!1,i.height=r;var a,u,c,h,l=Math.ceil(o/s),p=l*Math.ceil(Math.sqrt(s));for(_t(t,e,n,p,this.compareMinX),a=e;a<=n;a+=p)for(_t(t,a,c=Math.min(a+p-1,n),l,this.compareMinY),u=a;u<=c;u+=l)h=Math.min(u+l-1,c),i.children.push(this._build(t,u,h,r-1));return at(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,s,a,u,c,h,l;r.push(e),!e.leaf&&r.length-1!==n;){for(h=l=1/0,i=0,o=e.children.length;i<o;i++)u=pt(s=e.children[i]),(c=function(t,e){return(Math.max(e.maxX,t.maxX)-Math.min(e.minX,t.minX))*(Math.max(e.maxY,t.maxY)-Math.min(e.minY,t.minY))}(t,s)-u)<l?(l=c,h=u<h?u:h,a=s):c===l&&u<h&&(h=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],s=this._chooseSubtree(i,this.data,e,o);for(s.children.push(t),ct(s,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=yt(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,at(n,this.toBBox),at(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=yt([t,e]),this.data.height=t.height+1,this.data.leaf=!1,at(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,s,a,u,c,h;for(u=c=1/0,r=e;r<=n-e;r++)s=function(t,e){var n=Math.max(t.minX,e.minX),r=Math.max(t.minY,e.minY),i=Math.min(t.maxX,e.maxX),o=Math.min(t.maxY,e.maxY);return Math.max(0,i-n)*Math.max(0,o-r)}(i=ut(t,0,r,this.toBBox),o=ut(t,r,n,this.toBBox)),a=pt(i)+pt(o),s<u?(u=s,h=r,c=a<c?a:c):s===u&&a<c&&(c=a,h=r);return h},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:ht,i=t.leaf?this.compareMinY:lt;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,s=this.toBBox,a=ut(t,0,e,s),u=ut(t,n-e,n,s),c=ft(a)+ft(u);for(i=e;i<n-e;i++)o=t.children[i],ct(a,t.leaf?s(o):o),c+=ft(a);for(i=n-e-1;i>=e;i--)o=t.children[i],ct(u,t.leaf?s(o):o),c+=ft(u);return c},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)ct(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():at(t[n],this.toBBox)},_initFormat:function(t){var e=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",e.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",e.join(t[1])),this.toBBox=new Function(\"a\",\"return {minX: a\"+t[0]+\", minY: a\"+t[1]+\", maxX: a\"+t[2]+\", maxY: a\"+t[3]+\"};\")}};var Ho=function(t,e,n){var r=t*e,i=Wo*t,o=i-(i-t),s=t-o,a=Wo*e,u=a-(a-e),c=e-u,h=s*c-(r-o*u-s*u-o*c);return n?(n[0]=h,n[1]=r,n):[h,r]},Wo=+(Math.pow(2,27)+1),Jo=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);return i?[i,n]:[n]}(t[0],e[0]);var i,o,s=n+r,a=new Array(s),u=0,c=0,h=0,l=Math.abs,p=t[c],f=l(p),g=e[h],d=l(g);f<d?(o=p,(c+=1)<n&&(f=l(p=t[c]))):(o=g,(h+=1)<r&&(d=l(g=e[h]))),c<n&&f<d||h>=r?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=e[h])));for(var y,_,m=i+o,v=m-i,x=o-v,E=x,w=m;c<n&&h<r;)f<d?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=e[h]))),(x=(o=E)-(v=(m=i+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y;for(;c<n;)(x=(o=E)-(v=(m=(i=p)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(c+=1)<n&&(p=t[c]);for(;h<r;)(x=(o=E)-(v=(m=(i=g)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(h+=1)<r&&(g=e[h]);return E&&(a[u++]=E),w&&(a[u++]=w),u||(a[u++]=0),a.length=u,a},Zo=function(t,e,n){var r=t+e,i=r-t,o=e-i,s=t-(r-i);return n?(n[0]=s+o,n[1]=r,n):[s+o,r]},Ko=function(t,e){var n=t.length;if(1===n){var r=Ho(t[0],e);return r[0]?r:[r[1]]}var i=new Array(2*n),o=[.1,.1],s=[.1,.1],a=0;Ho(t[0],e,o),o[0]&&(i[a++]=o[0]);for(var u=1;u<n;++u){Ho(t[u],e,s);var c=o[1];Zo(c,s[0],o),o[0]&&(i[a++]=o[0]);var h=s[1],l=o[1],p=h+l,f=l-(p-h);o[1]=p,f&&(i[a++]=f)}return o[1]&&(i[a++]=o[1]),0===a&&(i[a++]=0),i.length=a,i},Qo=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);return i?[i,n]:[n]}(t[0],-e[0]);var i,o,s=n+r,a=new Array(s),u=0,c=0,h=0,l=Math.abs,p=t[c],f=l(p),g=-e[h],d=l(g);f<d?(o=p,(c+=1)<n&&(f=l(p=t[c]))):(o=g,(h+=1)<r&&(d=l(g=-e[h]))),c<n&&f<d||h>=r?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=-e[h])));for(var y,_,m=i+o,v=m-i,x=o-v,E=x,w=m;c<n&&h<r;)f<d?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=-e[h]))),(x=(o=E)-(v=(m=i+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y;for(;c<n;)(x=(o=E)-(v=(m=(i=p)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(c+=1)<n&&(p=t[c]);for(;h<r;)(x=(o=E)-(v=(m=(i=g)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(h+=1)<r&&(g=-e[h]);return E&&(a[u++]=E),w&&(a[u++]=w),u||(a[u++]=0),a.length=u,a},$o=mt(function(t){function e(t,e){for(var n=new Array(t.length-1),r=1;r<t.length;++r)for(var i=n[r-1]=new Array(t.length-1),o=0,s=0;o<t.length;++o)o!==e&&(i[s++]=t[r][o]);return n}function n(t){return 1&t?\"-\":\"\"}function r(t){if(1===t.length)return t[0];if(2===t.length)return[\"sum(\",t[0],\",\",t[1],\")\"].join(\"\");var e=t.length>>1;return[\"sum(\",r(t.slice(0,e)),\",\",r(t.slice(e)),\")\"].join(\"\")}function i(t){if(2===t.length)return[[\"sum(prod(\",t[0][0],\",\",t[1][1],\"),prod(-\",t[0][1],\",\",t[1][0],\"))\"].join(\"\")];for(var o=[],s=0;s<t.length;++s)o.push([\"scale(\",r(i(e(t,s))),\",\",n(s),t[0][s],\")\"].join(\"\"));return o}function o(t){for(var n=[],o=[],s=function(t){for(var e=new Array(t),n=0;n<t;++n){e[n]=new Array(t);for(var r=0;r<t;++r)e[n][r]=[\"m\",r,\"[\",t-n-1,\"]\"].join(\"\")}return e}(t),a=[],u=0;u<t;++u)0==(1&u)?n.push.apply(n,i(e(s,u))):o.push.apply(o,i(e(s,u))),a.push(\"m\"+u);var c=r(n),h=r(o),l=\"orientation\"+t+\"Exact\",p=[\"function \",l,\"(\",a.join(),\"){var p=\",c,\",n=\",h,\",d=sub(p,n);return d[d.length-1];};return \",l].join(\"\");return new Function(\"sum\",\"prod\",\"scale\",\"sub\",p)(Jo,Ho,Ko,Qo)}var s=5,a=o(3),u=o(4),c=[function(){return 0},function(){return 0},function(t,e){return e[0]-t[0]},function(t,e,n){var r,i=(t[1]-n[1])*(e[0]-n[0]),o=(t[0]-n[0])*(e[1]-n[1]),s=i-o;if(i>0){if(o<=0)return s;r=i+o}else{if(!(i<0))return s;if(o>=0)return s;r=-(i+o)}var u=3.3306690738754716e-16*r;return s>=u||s<=-u?s:a(t,e,n)},function(t,e,n,r){var i=t[0]-r[0],o=e[0]-r[0],s=n[0]-r[0],a=t[1]-r[1],c=e[1]-r[1],h=n[1]-r[1],l=t[2]-r[2],p=e[2]-r[2],f=n[2]-r[2],g=o*h,d=s*c,y=s*a,_=i*h,m=i*c,v=o*a,x=l*(g-d)+p*(y-_)+f*(m-v),E=7.771561172376103e-16*((Math.abs(g)+Math.abs(d))*Math.abs(l)+(Math.abs(y)+Math.abs(_))*Math.abs(p)+(Math.abs(m)+Math.abs(v))*Math.abs(f));return x>E||-x>E?x:u(t,e,n,r)}];!function(){for(;c.length<=s;)c.push(o(c.length));for(var e=[],n=[\"slow\"],r=0;r<=s;++r)e.push(\"a\"+r),n.push(\"o\"+r);var i=[\"function getOrientation(\",e.join(),\"){switch(arguments.length){case 0:case 1:return 0;\"];for(r=2;r<=s;++r)i.push(\"case \",r,\":return o\",r,\"(\",e.slice(0,r).join(),\");\");i.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation\"),n.push(i.join(\"\"));var a=Function.apply(void 0,n);for(t.exports=a.apply(void 0,[function(t){var e=c[t.length];return e||(e=c[t.length]=o(t.length)),e.apply(void 0,t)}].concat(c)),r=0;r<=s;++r)t.exports[r]=c[r]}()}),ts=function(t){var e=t.length;if(e<3){for(var n=new Array(e),r=0;r<e;++r)n[r]=r;return 2===e&&t[0][0]===t[1][0]&&t[0][1]===t[1][1]?[0]:n}var i=new Array(e);for(r=0;r<e;++r)i[r]=r;i.sort(function(e,n){var r=t[e][0]-t[n][0];return r||t[e][1]-t[n][1]});var o=[i[0],i[1]],s=[i[0],i[1]];for(r=2;r<e;++r){for(var a=i[r],u=t[a],c=o.length;c>1&&es(t[o[c-2]],t[o[c-1]],u)<=0;)c-=1,o.pop();for(o.push(a),c=s.length;c>1&&es(t[s[c-2]],t[s[c-1]],u)>=0;)c-=1,s.pop();s.push(a)}n=new Array(s.length+o.length-2);for(var h=0,l=(r=0,o.length);r<l;++r)n[h++]=o[r];for(var p=s.length-2;p>0;--p)n[h++]=s[p];return n},es=$o[3],ns=vt,rs=vt;vt.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var i=t-1>>1,o=e[i];if(n(r,o)>=0)break;e[t]=o,t=i}e[t]=r},_down:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,i=e[t];t<r;){var o=1+(t<<1),s=o+1,a=e[o];if(s<this.length&&n(e[s],a)<0&&(o=s,a=e[s]),n(a,i)>=0)break;e[t]=a,t=o}e[t]=i}},ns.default=rs;var is=function(t,e){for(var n=t[0],r=t[1],i=!1,o=0,s=e.length-1;o<e.length;s=o++){var a=e[o][0],u=e[o][1],c=e[s][0],h=e[s][1];u>r!=h>r&&n<(c-a)*(r-u)/(h-u)+a&&(i=!i)}return i},os=$o[3],ss=xt,as=xt;ss.default=as;var us=function(t){return t},cs=function(t){if(null==t)return us;var e,n,r=t.scale[0],i=t.scale[1],o=t.translate[0],s=t.translate[1];return function(t,a){a||(e=n=0);var u=2,c=t.length,h=new Array(c);for(h[0]=(e+=t[0])*r+o,h[1]=(n+=t[1])*i+s;u<c;)h[u]=t[u],++u;return h}},hs=function(t,e){for(var n,r=t.length,i=r-e;i<--r;)n=t[i],t[i++]=t[r],t[r]=n},ls=function(t,e){function n(t,e){for(var n in t){var i=t[n];delete e[i.start],delete i.start,delete i.end,i.forEach(function(t){r[t<0?~t:t]=1}),s.push(i)}}var r={},i={},o={},s=[],a=-1;return e.forEach(function(n,r){var i,o=t.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(i=e[++a],e[a]=n,e[r]=i)}),e.forEach(function(e){var n,r,s=function(e){var n,r=t.arcs[e<0?~e:e],i=r[0];return t.transform?(n=[0,0],r.forEach(function(t){n[0]+=t[0],n[1]+=t[1]})):n=r[r.length-1],e<0?[n,i]:[i,n]}(e),a=s[0],u=s[1];if(n=o[a])if(delete o[n.end],n.push(e),n.end=u,r=i[u]){delete i[r.start];var c=r===n?n:n.concat(r);i[c.start=n.start]=o[c.end=r.end]=c}else i[n.start]=o[n.end]=n;else if(n=i[u])if(delete i[n.start],n.unshift(e),n.start=a,r=o[a]){delete o[r.end];var h=r===n?n:r.concat(n);i[h.start=r.start]=o[h.end=n.end]=h}else i[n.start]=o[n.end]=n;else i[(n=[e]).start=a]=o[n.end=u]=n}),n(o,i),n(i,o),e.forEach(function(t){r[t<0?~t:t]||s.push([t])}),s},ps=function(t){return Xt(t,Ut.apply(this,arguments))},fs=function(t,e,n,r,i,o){3===arguments.length&&(r=o=Array,i=null);for(var s=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),a=new o(t),u=t-1,c=0;c<t;++c)s[c]=i;return{set:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c]=o;if(++l>=t)throw new Error(\"full hashmap\");h=s[c=c+1&u]}return s[c]=r,a[c]=o,o},maybeSet:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c];if(++l>=t)throw new Error(\"full hashmap\");h=s[c=c+1&u]}return s[c]=r,a[c]=o,o},get:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c];if(++l>=t)break;h=s[c=c+1&u]}return o},keys:function(){for(var t=[],e=0,n=s.length;e<n;++e){var r=s[e];r!=i&&t.push(r)}return t}}},gs=function(t,e){return t[0]===e[0]&&t[1]===e[1]},ds=new ArrayBuffer(16),ys=new Float64Array(ds),_s=new Uint32Array(ds),ms=function(t){ys[0]=t[0],ys[1]=t[1];var e=_s[0]^_s[1];return 2147483647&(e=e<<5^e>>7^_s[2]^_s[3])},vs=function(t){function e(t,e,n,r){if(p[n]!==t){p[n]=t;var i=f[n];if(i>=0){var o=g[n];i===e&&o===r||i===r&&o===e||(++y,d[n]=1)}else f[n]=e,g[n]=r}}function n(t){return ms(u[t])}function r(t,e){return gs(u[t],u[e])}var i,o,s,a,u=t.coordinates,c=t.lines,h=t.rings,l=function(){for(var t=fs(1.4*u.length,n,r,Int32Array,-1,Int32Array),e=new Int32Array(u.length),i=0,o=u.length;i<o;++i)e[i]=t.maybeSet(i,i);return e}(),p=new Int32Array(u.length),f=new Int32Array(u.length),g=new Int32Array(u.length),d=new Int8Array(u.length),y=0;for(i=0,o=u.length;i<o;++i)p[i]=f[i]=g[i]=-1;for(i=0,o=c.length;i<o;++i){var _=c[i],m=_[0],v=_[1];for(s=l[m],a=l[++m],++y,d[s]=1;++m<=v;)e(i,s,s=a,a=l[m]);++y,d[a]=1}for(i=0,o=u.length;i<o;++i)p[i]=-1;for(i=0,o=h.length;i<o;++i){var x=h[i],E=x[0]+1,w=x[1];for(e(i,l[w-1],s=l[E-1],a=l[E]);++E<=w;)e(i,s,s=a,a=l[E])}p=f=g=null;var b,I=function(t,e,n,r,i){3===arguments.length&&(r=Array,i=null);for(var o=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),s=t-1,a=0;a<t;++a)o[a]=i;return{add:function(r){for(var a=e(r)&s,u=o[a],c=0;u!=i;){if(n(u,r))return!0;if(++c>=t)throw new Error(\"full hashset\");u=o[a=a+1&s]}return o[a]=r,!0},has:function(r){for(var a=e(r)&s,u=o[a],c=0;u!=i;){if(n(u,r))return!0;if(++c>=t)break;u=o[a=a+1&s]}return!1},values:function(){for(var t=[],e=0,n=o.length;e<n;++e){var r=o[e];r!=i&&t.push(r)}return t}}}(1.4*y,ms,gs);for(i=0,o=u.length;i<o;++i)d[b=l[i]]&&I.add(u[b]);return I},xs=function(t){var e,n,r,i=vs(t),o=t.coordinates,s=t.lines,a=t.rings;for(n=0,r=s.length;n<r;++n)for(var u=s[n],c=u[0],h=u[1];++c<h;)i.has(o[c])&&(e={0:c,1:u[1]},u[1]=c,u=u.next=e);for(n=0,r=a.length;n<r;++n)for(var l=a[n],p=l[0],f=p,g=l[1],d=i.has(o[p]);++f<g;)i.has(o[f])&&(d?(e={0:f,1:l[1]},l[1]=f,l=l.next=e):(!function(t,e,n,r){Yt(t,e,n),Yt(t,e,e+r),Yt(t,e+r,n)}(o,p,g,g-f),o[g]=o[p],d=!0,f=p));return t},Es=function(t){function e(t){var e,n,r,i,o,s,a,u;if(r=f.get(e=c[t[0]]))for(a=0,u=r.length;a<u;++a)if(i=r[a],function(t,e){var n=t[0],r=e[0],i=t[1],o=e[1];if(n-i!=r-o)return!1;for(;n<=i;++n,++r)if(!gs(c[n],c[r]))return!1;return!0}(i,t))return t[0]=i[0],void(t[1]=i[1]);if(o=f.get(n=c[t[1]]))for(a=0,u=o.length;a<u;++a)if(s=o[a],function(t,e){var n=t[0],r=e[0],i=t[1],o=e[1];if(n-i!=r-o)return!1;for(;n<=i;++n,--o)if(!gs(c[n],c[o]))return!1;return!0}(s,t))return t[1]=s[0],void(t[0]=s[1]);r?r.push(t):f.set(e,[t]),o?o.push(t):f.set(n,[t]),g.push(t)}function n(t,e){var n=t[0],r=e[0],o=t[1]-n;if(o!==e[1]-r)return!1;for(var s=i(t),a=i(e),u=0;u<o;++u)if(!gs(c[n+(u+s)%o],c[r+(u+a)%o]))return!1;return!0}function r(t,e){var n=t[0],r=e[0],o=t[1],s=e[1],a=o-n;if(a!==s-r)return!1;for(var u=i(t),h=a-i(e),l=0;l<a;++l)if(!gs(c[n+(l+u)%a],c[s-(l+h)%a]))return!1;return!0}function i(t){for(var e=t[0],n=t[1],r=e,i=r,o=c[r];++r<n;){var s=c[r];(s[0]<o[0]||s[0]===o[0]&&s[1]<o[1])&&(i=r,o=s)}return i-e}var o,s,a,u,c=t.coordinates,h=t.lines,l=t.rings,p=h.length+l.length;for(delete t.lines,delete t.rings,a=0,u=h.length;a<u;++a)for(o=h[a];o=o.next;)++p;for(a=0,u=l.length;a<u;++a)for(s=l[a];s=s.next;)++p;var f=fs(2*p*1.4,ms,gs),g=t.arcs=[];for(a=0,u=h.length;a<u;++a){o=h[a];do{e(o)}while(o=o.next)}for(a=0,u=l.length;a<u;++a)if((s=l[a]).next)do{e(s)}while(s=s.next);else!function(t){var e,o,s,a,u;if(o=f.get(e=c[t[0]]))for(a=0,u=o.length;a<u;++a){if(s=o[a],n(s,t))return t[0]=s[0],void(t[1]=s[1]);if(r(s,t))return t[0]=s[1],void(t[1]=s[0])}if(o=f.get(e=c[t[0]+i(t)]))for(a=0,u=o.length;a<u;++a){if(s=o[a],n(s,t))return t[0]=s[0],void(t[1]=s[1]);if(r(s,t))return t[0]=s[1],void(t[1]=s[0])}o?o.push(t):f.set(e,[t]),g.push(t)}(s);return t},ws=function(t,e){function n(t){t&&h.hasOwnProperty(t.type)&&h[t.type](t)}function r(t){var e=[];do{var n=c.get(t);e.push(t[0]<t[1]?n:~n)}while(t=t.next);return e}function i(t){return t.map(r)}var o=function(t){function e(t){null!=t&&c.hasOwnProperty(t.type)&&c[t.type](t)}function n(t){var e=t[0],n=t[1];e<o&&(o=e),e>a&&(a=e),n<s&&(s=n),n>u&&(u=n)}function r(t){t.forEach(n)}function i(t){t.forEach(r)}var o=1/0,s=1/0,a=-1/0,u=-1/0,c={GeometryCollection:function(t){t.geometries.forEach(e)},Point:function(t){n(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(n)},LineString:function(t){r(t.arcs)},MultiLineString:function(t){t.arcs.forEach(r)},Polygon:function(t){t.arcs.forEach(r)},MultiPolygon:function(t){t.arcs.forEach(i)}};for(var h in t)e(t[h]);return a>=o&&u>=s?[o,s,a,u]:void 0}(t=function(t){var e,n={};for(e in t)n[e]=Vt(t[e]);return n}(t)),s=e>0&&o&&function(t,e,n){function r(t){return[Math.round((t[0]-c)*f),Math.round((t[1]-h)*g)]}function i(t,e){for(var n,r,i,o,s,a=-1,u=0,l=t.length,p=new Array(l);++a<l;)n=t[a],o=Math.round((n[0]-c)*f),s=Math.round((n[1]-h)*g),o===r&&s===i||(p[u++]=[r=o,i=s]);for(p.length=u;u<e;)u=p.push([p[0][0],p[0][1]]);return p}function o(t){return i(t,2)}function s(t){return i(t,4)}function a(t){return t.map(s)}function u(t){null!=t&&d.hasOwnProperty(t.type)&&d[t.type](t)}var c=e[0],h=e[1],l=e[2],p=e[3],f=l-c?(n-1)/(l-c):1,g=p-h?(n-1)/(p-h):1,d={GeometryCollection:function(t){t.geometries.forEach(u)},Point:function(t){t.coordinates=r(t.coordinates)},MultiPoint:function(t){t.coordinates=t.coordinates.map(r)},LineString:function(t){t.arcs=o(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(o)},Polygon:function(t){t.arcs=a(t.arcs)},MultiPolygon:function(t){t.arcs=t.arcs.map(a)}};for(var y in t)u(t[y]);return{scale:[1/f,1/g],translate:[c,h]}}(t,o,e),a=Es(xs(function(t){function e(t){t&&c.hasOwnProperty(t.type)&&c[t.type](t)}function n(t){for(var e=0,n=t.length;e<n;++e)u[++o]=t[e];var r={0:o-n+1,1:o};return s.push(r),r}function r(t){for(var e=0,n=t.length;e<n;++e)u[++o]=t[e];var r={0:o-n+1,1:o};return a.push(r),r}function i(t){return t.map(r)}var o=-1,s=[],a=[],u=[],c={GeometryCollection:function(t){t.geometries.forEach(e)},LineString:function(t){t.arcs=n(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(n)},Polygon:function(t){t.arcs=t.arcs.map(r)},MultiPolygon:function(t){t.arcs=t.arcs.map(i)}};for(var h in t)e(t[h]);return{type:\"Topology\",coordinates:u,lines:s,rings:a,objects:t}}(t))),u=a.coordinates,c=fs(1.4*a.arcs.length,Jt,Zt);t=a.objects,a.bbox=o,a.arcs=a.arcs.map(function(t,e){return c.set(t,e),u.slice(t[0],t[1]+1)}),delete a.coordinates,u=null;var h={GeometryCollection:function(t){t.geometries.forEach(n)},LineString:function(t){t.arcs=r(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(r)},Polygon:function(t){t.arcs=t.arcs.map(r)},MultiPolygon:function(t){t.arcs=t.arcs.map(i)}};for(var l in t)n(t[l]);return s&&(a.transform=s,a.arcs=function(t){for(var e=-1,n=t.length;++e<n;){for(var r,i,o=t[e],s=0,a=1,u=o.length,c=o[0],h=c[0],l=c[1];++s<u;)r=(c=o[s])[0],i=c[1],r===h&&i===l||(o[a++]=[r-h,i-l],h=r,l=i);1===a&&(o[a++]=[0,0]),o.length=a}return t}(a.arcs)),a},bs=function(t){this.points=t.points||[],this.duration=t.duration||1e4,this.sharpness=t.sharpness||.85,this.centers=[],this.controls=[],this.stepLength=t.stepLength||60,this.length=this.points.length,this.delay=0;for(var e=0;e<this.length;e++)this.points[e].z=this.points[e].z||0;for(e=0;e<this.length-1;e++){var n=this.points[e],r=this.points[e+1];this.centers.push({x:(n.x+r.x)/2,y:(n.y+r.y)/2,z:(n.z+r.z)/2})}this.controls.push([this.points[0],this.points[0]]);for(e=0;e<this.centers.length-1;e++){n=this.centers[e],r=this.centers[e+1];var i=this.points[e+1].x-(this.centers[e].x+this.centers[e+1].x)/2,o=this.points[e+1].y-(this.centers[e].y+this.centers[e+1].y)/2,s=this.points[e+1].z-(this.centers[e].y+this.centers[e+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e].z+s)},{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e+1].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e+1].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e+1].z+s)}])}return this.controls.push([this.points[this.length-1],this.points[this.length-1]]),this.steps=this.cacheSteps(this.stepLength),this};bs.prototype.cacheSteps=function(t){var e=[],n=this.pos(0);e.push(0);for(var r=0;r<this.duration;r+=10){var i=this.pos(r);Math.sqrt((i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y)+(i.z-n.z)*(i.z-n.z))>t&&(e.push(r),n=i)}return e},bs.prototype.vector=function(t){var e=this.pos(t+10),n=this.pos(t-10);return{angle:180*Math.atan2(e.y-n.y,e.x-n.x)/3.14,speed:Math.sqrt((n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y)+(n.z-e.z)*(n.z-e.z))}},bs.prototype.pos=function(t){var e=t-this.delay;e<0&&(e=0),e>this.duration&&(e=this.duration-1);var n=e/this.duration;if(n>=1)return this.points[this.length-1];var r=Math.floor((this.points.length-1)*n);return function(t,e,n,r,i){var o=function(t){var e=t*t;return[e*t,3*e*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]}(t);return{x:i.x*o[0]+r.x*o[1]+n.x*o[2]+e.x*o[3],y:i.y*o[0]+r.y*o[1]+n.y*o[2]+e.y*o[3],z:i.z*o[0]+r.z*o[1]+n.z*o[2]+e.z*o[3]}}((this.length-1)*n-r,this.points[r],this.controls[r][1],this.controls[r+1][0],this.points[r+1])};var Is=ve,Ns=ve;ve.deviation=function(t,e,n,r){var i=e&&e.length,o=i?e[0]*n:t.length,s=Math.abs(Ae(t,0,o,n));if(i)for(var a=0,u=e.length;a<u;a++){var c=e[a]*n,h=a<u-1?e[a+1]*n:t.length;s-=Math.abs(Ae(t,c,h,n))}var l=0;for(a=0;a<r.length;a+=3){var p=r[a]*n,f=r[a+1]*n,g=r[a+2]*n;l+=Math.abs((t[p]-t[g])*(t[f+1]-t[p+1])-(t[p]-t[f])*(t[g+1]-t[p+1]))}return 0===s&&0===l?0:Math.abs((l-s)/s)},ve.flatten=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n},Is.default=Ns,ke.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!Je(t,e))return n;for(var i,o,s,a,u=[];e;){for(i=0,o=e.children.length;i<o;i++)s=e.children[i],Je(t,a=e.leaf?r(s):s)&&(e.leaf?n.push(s):We(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!Je(t,e))return!1;for(var r,i,o,s,a=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],s=e.leaf?n(o):o,Je(t,s)){if(e.leaf||We(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=Ze([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,o,s=this.data,a=this.toBBox(t),u=[],c=[];s||u.length;){if(s||(s=u.pop(),r=u[u.length-1],n=c.pop(),o=!0),s.leaf&&-1!==(i=function(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}(t,s.children,e)))return s.children.splice(i,1),u.push(s),this._condense(u),this;o||s.leaf||!We(s,a)?r?(n++,s=r.children[n],o=!1):s=null:(u.push(s),c.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:Ue,compareMinY:Ye,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return i=Ze(t.slice(e,n+1)),ze(i,this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=Ze([])).leaf=!1,i.height=r;var a,u,c,h,l=Math.ceil(o/s),p=l*Math.ceil(Math.sqrt(s));for(Ke(t,e,n,p,this.compareMinX),a=e;a<=n;a+=p)for(Ke(t,a,c=Math.min(a+p-1,n),l,this.compareMinY),u=a;u<=c;u+=l)h=Math.min(u+l-1,c),i.children.push(this._build(t,u,h,r-1));return ze(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,s,a,u,c,h,l;r.push(e),!e.leaf&&r.length-1!==n;){for(h=l=1/0,i=0,o=e.children.length;i<o;i++)u=Ve(s=e.children[i]),(c=function(t,e){return(Math.max(e.maxX,t.maxX)-Math.min(e.minX,t.minX))*(Math.max(e.maxY,t.maxY)-Math.min(e.minY,t.minY))}(t,s)-u)<l?(l=c,h=u<h?u:h,a=s):c===l&&u<h&&(h=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],s=this._chooseSubtree(i,this.data,e,o);for(s.children.push(t),Xe(s,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=Ze(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,ze(n,this.toBBox),ze(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=Ze([t,e]),this.data.height=t.height+1,this.data.leaf=!1,ze(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,s,a,u,c,h;for(u=c=1/0,r=e;r<=n-e;r++)s=function(t,e){var n=Math.max(t.minX,e.minX),r=Math.max(t.minY,e.minY),i=Math.min(t.maxX,e.maxX),o=Math.min(t.maxY,e.maxY);return Math.max(0,i-n)*Math.max(0,o-r)}(i=je(t,0,r,this.toBBox),o=je(t,r,n,this.toBBox)),a=Ve(i)+Ve(o),s<u?(u=s,h=r,c=a<c?a:c):s===u&&a<c&&(c=a,h=r);return h},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:Ue,i=t.leaf?this.compareMinY:Ye;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,s=this.toBBox,a=je(t,0,e,s),u=je(t,n-e,n,s),c=He(a)+He(u);for(i=e;i<n-e;i++)o=t.children[i],Xe(a,t.leaf?s(o):o),c+=He(a);for(i=n-e-1;i>=e;i--)o=t.children[i],Xe(u,t.leaf?s(o):o),c+=He(u);return c},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)Xe(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():ze(t[n],this.toBBox)},_initFormat:function(t){var e=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",e.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",e.join(t[1])),this.toBBox=new Function(\"a\",\"return {minX: a\"+t[0]+\", minY: a\"+t[1]+\", maxX: a\"+t[2]+\", maxY: a\"+t[3]+\"};\")}};var Cs=Object.freeze({toMercator:cn,toWgs84:hn}),Ss=6378137,Ms=function(t,e,n){function r(t,n,r,i){var u=o[t][n],c=o[t][n+1],h=o[r][i],l=o[r][i+1],p=function(t,e,n,r){if(On(t,n)||On(t,r)||On(e,n)||On(r,n))return null;var i=t[0],o=t[1],s=e[0],a=e[1],u=n[0],c=n[1],h=r[0],l=r[1],p=(i-s)*(c-l)-(o-a)*(u-h);return 0===p?null:[((i*a-o*s)*(u-h)-(i-s)*(u*l-c*h))/p,((i*a-o*s)*(c-l)-(o-a)*(u*l-c*h))/p]}(u,c,h,l);if(null!==p){var f,g;if(f=c[0]!==u[0]?(p[0]-u[0])/(c[0]-u[0]):(p[1]-u[1])/(c[1]-u[1]),g=l[0]!==h[0]?(p[0]-h[0])/(l[0]-h[0]):(p[1]-h[1])/(l[1]-h[1]),!(f>=1||f<=0||g>=1||g<=0)){var d=p,y=!a[d];y&&(a[d]=!0),e?s.push(e(p,t,n,u,c,f,r,i,h,l,g,y)):s.push(p)}}}function i(t,e){var n,r,i,s,a=o[t][e],u=o[t][e+1];return a[0]<u[0]?(n=a[0],r=u[0]):(n=u[0],r=a[0]),a[1]<u[1]?(i=a[1],s=u[1]):(i=u[1],s=a[1]),{minX:n,minY:i,maxX:r,maxY:s,ring:t,edge:e}}if(\"Polygon\"!==t.geometry.type)throw new Error(\"The input feature must be a Polygon\");void 0===n&&(n=1);var o=t.geometry.coordinates,s=[],a={};if(n){for(var u=[],c=0;c<o.length;c++)for(var h=0;h<o[c].length-1;h++)u.push(i(c,h));var l=Vo();l.load(u)}for(var p=0;p<o.length;p++)for(var f=0;f<o[p].length-1;f++)if(n){l.search(i(p,f)).forEach(function(t){var e=t.ring,n=t.edge;r(p,f,e,n)})}else for(var g=0;g<o.length;g++)for(var d=0;d<o[g].length-1;d++)r(p,f,g,d);return e||(s={type:\"Feature\",geometry:{type:\"MultiPoint\",coordinates:s}}),s},Ls=function(t){function e(){for(var t=[],e=0;e<g.features.length;e++)-1==g.features[e].properties.parent&&t.push(e);if(t.length>1)for(e=0;e<t.length;e++){for(var n=-1,r=0;r<g.features.length;r++)t[e]!=r&&Pt(g.features[t[e]].geometry.coordinates[0][0],g.features[r],{ignoreBoundary:!0})&&mn(g.features[r])<1/0&&(n=r);g.features[t[e]].properties.parent=n}}function n(){for(var t=0;t<g.features.length;t++)if(-1==g.features[t].properties.parent){var e=g.features[t].properties.winding;g.features[t].properties.netWinding=e,r(t,e)}}function r(t,e){for(var n=0;n<g.features.length;n++)if(g.features[n].properties.parent==t){var i=e+g.features[n].properties.winding;g.features[n].properties.netWinding=i,r(n,i)}}if(\"Feature\"!=t.type)throw new Error(\"The input must a geojson object of type Feature\");if(void 0===t.geometry||null==t.geometry)throw new Error(\"The input must a geojson object with a non-empty geometry\");if(\"Polygon\"!=t.geometry.type)throw new Error(\"The input must be a geojson Polygon\");for(var i=t.geometry.coordinates.length,s=[],a=0;a<i;a++){var u=t.geometry.coordinates[a];Tn(u[0],u[u.length-1])||u.push(u[0]),s.push.apply(s,u.slice(0,u.length-1))}if(!function(t){for(var e={},n=1,r=0,i=t.length;r<i;++r){if(e.hasOwnProperty(t[r])){n=0;break}e[t[r]]=1}return n}(s))throw new Error(\"The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)\");var h=s.length,l=Ms(t,function(t,e,n,r,i,o,s,a,u,c,h,l){return[t,e,n,r,i,o,s,a,u,c,h,l]}),p=l.length;if(0==p){var f=[];for(a=0;a<i;a++)f.push(o([t.geometry.coordinates[a]],{parent:-1,winding:function(t){for(var e=0,n=0;n<t.length-1;n++)t[n][0]<t[e][0]&&(e=n);if(Rn([t[(e-1).modulo(t.length-1)],t[e],t[(e+1).modulo(t.length-1)]],!0))var r=1;else r=-1;return r}(t.geometry.coordinates[a])}));var g=c(f);return e(),n(),g}var d=[],y=[];for(a=0;a<i;a++){d.push([]);for(var _=0;_<t.geometry.coordinates[a].length-1;_++)d[a].push([new Ps(t.geometry.coordinates[a][(_+1).modulo(t.geometry.coordinates[a].length-1)],1,[a,_],[a,(_+1).modulo(t.geometry.coordinates[a].length-1)],void 0)]),y.push(new Os(t.geometry.coordinates[a][_],[a,(_-1).modulo(t.geometry.coordinates[a].length-1)],[a,_],void 0,void 0,!1,!0))}for(a=0;a<p;a++)d[l[a][1]][l[a][2]].push(new Ps(l[a][0],l[a][5],[l[a][1],l[a][2]],[l[a][6],l[a][7]],void 0)),l[a][11]&&y.push(new Os(l[a][0],[l[a][1],l[a][2]],[l[a][6],l[a][7]],void 0,void 0,!0,!0));var m=y.length;for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)d[a][_].sort(function(t,e){return t.param<e.param?-1:1});var v=[];for(a=0;a<m;a++)v.push({minX:y[a].coord[0],minY:y[a].coord[1],maxX:y[a].coord[0],maxY:y[a].coord[1],index:a});var x=Vo();x.load(v);for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)for(var E=0;E<d[a][_].length;E++){b=E==d[a][_].length-1?d[a][(_+1).modulo(t.geometry.coordinates[a].length-1)][0].coord:d[a][_][E+1].coord;var w=x.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0];d[a][_][E].nxtIsectAlongEdgeIn=w.index}for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)for(E=0;E<d[a][_].length;E++){var b=d[a][_][E].coord,I=(w=x.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0]).index;I<h?y[I].nxtIsectAlongRingAndEdge2=d[a][_][E].nxtIsectAlongEdgeIn:Tn(y[I].ringAndEdge1,d[a][_][E].ringAndEdgeIn)?y[I].nxtIsectAlongRingAndEdge1=d[a][_][E].nxtIsectAlongEdgeIn:y[I].nxtIsectAlongRingAndEdge2=d[a][_][E].nxtIsectAlongEdgeIn}var N=[];for(a=0,_=0;_<i;_++){var C=a;for(E=0;E<t.geometry.coordinates[_].length-1;E++)y[a].coord[0]<y[C].coord[0]&&(C=a),a++;var S=y[C].nxtIsectAlongRingAndEdge2;for(E=0;E<y.length;E++)if(y[E].nxtIsectAlongRingAndEdge1==C||y[E].nxtIsectAlongRingAndEdge2==C){var M=E;break}var L=Rn([y[M].coord,y[C].coord,y[S].coord],!0)?1:-1;N.push({isect:C,parent:-1,winding:L})}N.sort(function(t,e){return y[t.isect].coord>y[e.isect].coord?-1:1});for(f=[];N.length>0;){var P=N.pop(),O=P.isect,R=P.parent,T=P.winding,A=f.length,D=[y[O].coord],F=O;if(y[O].ringAndEdge1Walkable)var q=y[O].ringAndEdge1,G=y[O].nxtIsectAlongRingAndEdge1;else q=y[O].ringAndEdge2,G=y[O].nxtIsectAlongRingAndEdge2;for(;!Tn(y[O].coord,y[G].coord);){D.push(y[G].coord);var B=void 0;for(a=0;a<N.length;a++)if(N[a].isect==G){B=a;break}if(void 0!=B&&N.splice(B,1),Tn(q,y[G].ringAndEdge1)){if(q=y[G].ringAndEdge2,y[G].ringAndEdge2Walkable=!1,y[G].ringAndEdge1Walkable){var k={isect:G};Rn([y[F].coord,y[G].coord,y[y[G].nxtIsectAlongRingAndEdge2].coord],1==T)?(k.parent=R,k.winding=-T):(k.parent=A,k.winding=T),N.push(k)}F=G,G=y[G].nxtIsectAlongRingAndEdge2}else{if(q=y[G].ringAndEdge1,y[G].ringAndEdge1Walkable=!1,y[G].ringAndEdge2Walkable){k={isect:G};Rn([y[F].coord,y[G].coord,y[y[G].nxtIsectAlongRingAndEdge1].coord],1==T)?(k.parent=R,k.winding=-T):(k.parent=A,k.winding=T),N.push(k)}F=G,G=y[G].nxtIsectAlongRingAndEdge1}}D.push(y[G].coord),f.push(o([D],{index:A,parent:R,winding:T,netWinding:void 0}))}g=c(f);return e(),n(),g},Ps=function(t,e,n,r,i){this.coord=t,this.param=e,this.ringAndEdgeIn=n,this.ringAndEdgeOut=r,this.nxtIsectAlongEdgeIn=i},Os=function(t,e,n,r,i,o,s){this.coord=t,this.ringAndEdge1=e,this.ringAndEdge2=n,this.nxtIsectAlongRingAndEdge1=r,this.nxtIsectAlongRingAndEdge2=i,this.ringAndEdge1Walkable=o,this.ringAndEdge2Walkable=s};Number.prototype.modulo=function(t){return(this%t+t)%t};var Rs=Math.PI/180,Ts=180/Math.PI,As=function(t,e){this.lon=t,this.lat=e,this.x=Rs*t,this.y=Rs*e};As.prototype.view=function(){return String(this.lon).slice(0,4)+\",\"+String(this.lat).slice(0,4)},As.prototype.antipode=function(){var t=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new As(e,t)};var Ds=function(){this.coords=[],this.length=0};Ds.prototype.move_to=function(t){this.length++,this.coords.push(t)};var Fs=function(t){this.properties=t||{},this.geometries=[]};Fs.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:\"LineString\",coordinates:null},type:\"Feature\",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:\"LineString\",coordinates:this.geometries[0].coords},type:\"Feature\",properties:this.properties};for(var t=[],e=0;e<this.geometries.length;e++)t.push(this.geometries[e].coords);return{geometry:{type:\"MultiLineString\",coordinates:t},type:\"Feature\",properties:this.properties}},Fs.prototype.wkt=function(){for(var t=\"\",e=\"LINESTRING(\",n=function(t){e+=t[0]+\" \"+t[1]+\",\"},r=0;r<this.geometries.length;r++){if(0===this.geometries[r].coords.length)return\"LINESTRING(empty)\";this.geometries[r].coords.forEach(n),t+=e.substring(0,e.length-1)+\")\"}return t};var qs=function(t,e,n){if(!t||void 0===t.x||void 0===t.y)throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");if(!e||void 0===e.x||void 0===e.y)throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");this.start=new As(t.x,t.y),this.end=new As(e.x,e.y),this.properties=n||{};var r=this.start.x-this.end.x,i=this.start.y-this.end.y,o=Math.pow(Math.sin(i/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(r/2),2);if(this.g=2*Math.asin(Math.sqrt(o)),this.g===Math.PI)throw new Error(\"it appears \"+t.view()+\" and \"+e.view()+\" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");if(isNaN(this.g))throw new Error(\"could not calculate great circle between \"+t+\" and \"+e)};qs.prototype.interpolate=function(t){var e=Math.sin((1-t)*this.g)/Math.sin(this.g),n=Math.sin(t*this.g)/Math.sin(this.g),r=e*Math.cos(this.start.y)*Math.cos(this.start.x)+n*Math.cos(this.end.y)*Math.cos(this.end.x),i=e*Math.cos(this.start.y)*Math.sin(this.start.x)+n*Math.cos(this.end.y)*Math.sin(this.end.x),o=e*Math.sin(this.start.y)+n*Math.sin(this.end.y),s=Ts*Math.atan2(o,Math.sqrt(Math.pow(r,2)+Math.pow(i,2)));return[Ts*Math.atan2(i,r),s]},qs.prototype.Arc=function(t,e){var n=[];if(!t||t<=2)n.push([this.start.lon,this.start.lat]),n.push([this.end.lon,this.end.lat]);else for(var r=1/(t-1),i=0;i<t;++i){var o=r*i,s=this.interpolate(o);n.push(s)}for(var a=!1,u=0,c=e&&e.offset?e.offset:10,h=180-c,l=-180+c,p=360-c,f=1;f<n.length;++f){var g=n[f-1][0],d=n[f][0],y=Math.abs(d-g);y>p&&(d>h&&g<l||g>h&&d<l)?a=!0:y>u&&(u=y)}var _=[];if(a&&u<c){var m=[];_.push(m);for(var v=0;v<n.length;++v){var x=parseFloat(n[v][0]);if(v>0&&Math.abs(x-n[v-1][0])>p){var E=parseFloat(n[v-1][0]),w=parseFloat(n[v-1][1]),b=parseFloat(n[v][0]),I=parseFloat(n[v][1]);if(E>-180&&E<l&&180===b&&v+1<n.length&&n[v-1][0]>-180&&n[v-1][0]<l){m.push([-180,n[v][1]]),v++,m.push([n[v][0],n[v][1]]);continue}if(E>h&&E<180&&-180===b&&v+1<n.length&&n[v-1][0]>h&&n[v-1][0]<180){m.push([180,n[v][1]]),v++,m.push([n[v][0],n[v][1]]);continue}if(E<l&&b>h){var N=E;E=b,b=N;var C=w;w=I,I=C}if(E>h&&b<l&&(b+=360),E<=180&&b>=180&&E<b){var S=(180-E)/(b-E),M=S*I+(1-S)*w;m.push([n[v-1][0]>h?180:-180,M]),(m=[]).push([n[v-1][0]>h?-180:180,M]),_.push(m)}else m=[],_.push(m);m.push([x,n[v][1]])}else m.push([n[v][0],n[v][1]])}}else{var L=[];_.push(L);for(var P=0;P<n.length;++P)L.push([n[P][0],n[P][1]])}for(var O=new Fs(this.properties),R=0;R<_.length;++R){var T=new Ds;O.geometries.push(T);for(var A=_[R],D=0;D<A.length;++D)T.move_to(A[D])}return O};var Gs=Yn;Yn.polyline=Yn,Yn.polygon=function(t,e){var n,r,i,o,s,a,u;for(r=1;r<=8;r*=2){for(n=[],o=!(Hn(i=t[t.length-1],e)&r),s=0;s<t.length;s++)(u=!(Hn(a=t[s],e)&r))!==o&&n.push(Vn(i,a,r,e)),u&&n.push(a),i=a,o=u;if(!(t=n).length)break}return n};var Bs=Array.prototype.slice,ks={successCallback:null,verbose:!1,polygons:!1},zs={},js=64,Xs=16,Us=4,Ys=1,Vs=[],Hs=[],Ws=[],Js=[],Zs=[],Ks=[],Qs=[],$s=[],ta=[],ea=[],na=[],ra=[],ia=[],oa=[],sa=[],aa=[],ua=[],ca=[],ha=[],la=[],pa=[],fa=[],ga=[],da=[];Qs[85]=ea[85]=-1,$s[85]=na[85]=0,ta[85]=ra[85]=1,ha[85]=fa[85]=1,la[85]=ga[85]=0,pa[85]=da[85]=1,Vs[85]=Js[85]=0,Hs[85]=Zs[85]=-1,Ws[85]=sa[85]=0,aa[85]=ia[85]=0,ua[85]=oa[85]=1,Ks[85]=ca[85]=1,fa[1]=fa[169]=0,ga[1]=ga[169]=-1,da[1]=da[169]=0,ia[1]=ia[169]=-1,oa[1]=oa[169]=0,sa[1]=sa[169]=0,ea[4]=ea[166]=0,na[4]=na[166]=-1,ra[4]=ra[166]=1,aa[4]=aa[166]=1,ua[4]=ua[166]=0,ca[4]=ca[166]=0,Qs[16]=Qs[154]=0,$s[16]=$s[154]=1,ta[16]=ta[154]=1,Js[16]=Js[154]=1,Zs[16]=Zs[154]=0,Ks[16]=Ks[154]=1,ha[64]=ha[106]=0,la[64]=la[106]=1,pa[64]=pa[106]=0,Vs[64]=Vs[106]=-1,Hs[64]=Hs[106]=0,Ws[64]=Ws[106]=1,ha[2]=ha[168]=0,la[2]=la[168]=-1,pa[2]=pa[168]=1,fa[2]=fa[168]=0,ga[2]=ga[168]=-1,da[2]=da[168]=0,ia[2]=ia[168]=-1,oa[2]=oa[168]=0,sa[2]=sa[168]=0,aa[2]=aa[168]=-1,ua[2]=ua[168]=0,ca[2]=ca[168]=1,Qs[8]=Qs[162]=0,$s[8]=$s[162]=-1,ta[8]=ta[162]=0,ea[8]=ea[162]=0,na[8]=na[162]=-1,ra[8]=ra[162]=1,ia[8]=ia[162]=1,oa[8]=oa[162]=0,sa[8]=sa[162]=1,aa[8]=aa[162]=1,ua[8]=ua[162]=0,ca[8]=ca[162]=0,Qs[32]=Qs[138]=0,$s[32]=$s[138]=1,ta[32]=ta[138]=1,ea[32]=ea[138]=0,na[32]=na[138]=1,ra[32]=ra[138]=0,Vs[32]=Vs[138]=1,Hs[32]=Hs[138]=0,Ws[32]=Ws[138]=0,Js[32]=Js[138]=1,Zs[32]=Zs[138]=0,Ks[32]=Ks[138]=1,fa[128]=fa[42]=0,ga[128]=ga[42]=1,da[128]=da[42]=1,ha[128]=ha[42]=0,la[128]=la[42]=1,pa[128]=pa[42]=0,Vs[128]=Vs[42]=-1,Hs[128]=Hs[42]=0,Ws[128]=Ws[42]=1,Js[128]=Js[42]=-1,Zs[128]=Zs[42]=0,Ks[128]=Ks[42]=0,ea[5]=ea[165]=-1,na[5]=na[165]=0,ra[5]=ra[165]=0,fa[5]=fa[165]=1,ga[5]=ga[165]=0,da[5]=da[165]=0,aa[20]=aa[150]=0,ua[20]=ua[150]=1,ca[20]=ca[150]=1,Js[20]=Js[150]=0,Zs[20]=Zs[150]=-1,Ks[20]=Ks[150]=1,Qs[80]=Qs[90]=-1,$s[80]=$s[90]=0,ta[80]=ta[90]=1,ha[80]=ha[90]=1,la[80]=la[90]=0,pa[80]=pa[90]=1,ia[65]=ia[105]=0,oa[65]=oa[105]=1,sa[65]=sa[105]=0,Vs[65]=Vs[105]=0,Hs[65]=Hs[105]=-1,Ws[65]=Ws[105]=0,Qs[160]=Qs[10]=-1,$s[160]=$s[10]=0,ta[160]=ta[10]=1,ea[160]=ea[10]=-1,na[160]=na[10]=0,ra[160]=ra[10]=0,fa[160]=fa[10]=1,ga[160]=ga[10]=0,da[160]=da[10]=0,ha[160]=ha[10]=1,la[160]=la[10]=0,pa[160]=pa[10]=1,aa[130]=aa[40]=0,ua[130]=ua[40]=1,ca[130]=ca[40]=1,ia[130]=ia[40]=0,oa[130]=oa[40]=1,sa[130]=sa[40]=0,Vs[130]=Vs[40]=0,Hs[130]=Hs[40]=-1,Ws[130]=Ws[40]=0,Js[130]=Js[40]=0,Zs[130]=Zs[40]=-1,Ks[130]=Ks[40]=1,ea[37]=ea[133]=0,na[37]=na[133]=1,ra[37]=ra[133]=1,fa[37]=fa[133]=0,ga[37]=ga[133]=1,da[37]=da[133]=0,Vs[37]=Vs[133]=-1,Hs[37]=Hs[133]=0,Ws[37]=Ws[133]=0,Js[37]=Js[133]=1,Zs[37]=Zs[133]=0,Ks[37]=Ks[133]=0,aa[148]=aa[22]=-1,ua[148]=ua[22]=0,ca[148]=ca[22]=0,fa[148]=fa[22]=0,ga[148]=ga[22]=-1,da[148]=da[22]=1,ha[148]=ha[22]=0,la[148]=la[22]=1,pa[148]=pa[22]=1,Js[148]=Js[22]=-1,Zs[148]=Zs[22]=0,Ks[148]=Ks[22]=1,Qs[82]=Qs[88]=0,$s[82]=$s[88]=-1,ta[82]=ta[88]=1,aa[82]=aa[88]=1,ua[82]=ua[88]=0,ca[82]=ca[88]=1,ia[82]=ia[88]=-1,oa[82]=oa[88]=0,sa[82]=sa[88]=1,ha[82]=ha[88]=0,la[82]=la[88]=-1,pa[82]=pa[88]=0,Qs[73]=Qs[97]=0,$s[73]=$s[97]=1,ta[73]=ta[97]=0,ea[73]=ea[97]=0,na[73]=na[97]=-1,ra[73]=ra[97]=0,ia[73]=ia[97]=1,oa[73]=oa[97]=0,sa[73]=sa[97]=0,Vs[73]=Vs[97]=1,Hs[73]=Hs[97]=0,Ws[73]=Ws[97]=1,Qs[145]=Qs[25]=0,$s[145]=$s[25]=-1,ta[145]=ta[25]=0,ia[145]=ia[25]=1,oa[145]=oa[25]=0,sa[145]=sa[25]=1,fa[145]=fa[25]=0,ga[145]=ga[25]=1,da[145]=da[25]=1,Js[145]=Js[25]=-1,Zs[145]=Zs[25]=0,Ks[145]=Ks[25]=0,ea[70]=ea[100]=0,na[70]=na[100]=1,ra[70]=ra[100]=0,aa[70]=aa[100]=-1,ua[70]=ua[100]=0,ca[70]=ca[100]=1,ha[70]=ha[100]=0,la[70]=la[100]=-1,pa[70]=pa[100]=1,Vs[70]=Vs[100]=1,Hs[70]=Hs[100]=0,Ws[70]=Ws[100]=0,ea[101]=ea[69]=0,na[101]=na[69]=1,ra[101]=ra[69]=0,Vs[101]=Vs[69]=1,Hs[101]=Hs[69]=0,Ws[101]=Ws[69]=0,fa[149]=fa[21]=0,ga[149]=ga[21]=1,da[149]=da[21]=1,Js[149]=Js[21]=-1,Zs[149]=Zs[21]=0,Ks[149]=Ks[21]=0,aa[86]=aa[84]=-1,ua[86]=ua[84]=0,ca[86]=ca[84]=1,ha[86]=ha[84]=0,la[86]=la[84]=-1,pa[86]=pa[84]=1,Qs[89]=Qs[81]=0,$s[89]=$s[81]=-1,ta[89]=ta[81]=0,ia[89]=ia[81]=1,oa[89]=oa[81]=0,sa[89]=sa[81]=1,Qs[96]=Qs[74]=0,$s[96]=$s[74]=1,ta[96]=ta[74]=0,ea[96]=ea[74]=-1,na[96]=na[74]=0,ra[96]=ra[74]=1,ha[96]=ha[74]=1,la[96]=la[74]=0,pa[96]=pa[74]=0,Vs[96]=Vs[74]=1,Hs[96]=Hs[74]=0,Ws[96]=Ws[74]=1,Qs[24]=Qs[146]=0,$s[24]=$s[146]=-1,ta[24]=ta[146]=1,aa[24]=aa[146]=1,ua[24]=ua[146]=0,ca[24]=ca[146]=1,ia[24]=ia[146]=0,oa[24]=oa[146]=1,sa[24]=sa[146]=1,Js[24]=Js[146]=0,Zs[24]=Zs[146]=-1,Ks[24]=Ks[146]=0,ea[6]=ea[164]=-1,na[6]=na[164]=0,ra[6]=ra[164]=1,aa[6]=aa[164]=-1,ua[6]=ua[164]=0,ca[6]=ca[164]=0,fa[6]=fa[164]=0,ga[6]=ga[164]=-1,da[6]=da[164]=1,ha[6]=ha[164]=1,la[6]=la[164]=0,pa[6]=pa[164]=0,ia[129]=ia[41]=0,oa[129]=oa[41]=1,sa[129]=sa[41]=1,fa[129]=fa[41]=0,ga[129]=ga[41]=1,da[129]=da[41]=0,Vs[129]=Vs[41]=-1,Hs[129]=Hs[41]=0,Ws[129]=Ws[41]=0,Js[129]=Js[41]=0,Zs[129]=Zs[41]=-1,Ks[129]=Ks[41]=0,aa[66]=aa[104]=0,ua[66]=ua[104]=1,ca[66]=ca[104]=0,ia[66]=ia[104]=-1,oa[66]=oa[104]=0,sa[66]=sa[104]=1,ha[66]=ha[104]=0,la[66]=la[104]=-1,pa[66]=pa[104]=0,Vs[66]=Vs[104]=0,Hs[66]=Hs[104]=-1,Ws[66]=Ws[104]=1,Qs[144]=Qs[26]=-1,$s[144]=$s[26]=0,ta[144]=ta[26]=0,fa[144]=fa[26]=1,ga[144]=ga[26]=0,da[144]=da[26]=1,ha[144]=ha[26]=0,la[144]=la[26]=1,pa[144]=pa[26]=1,Js[144]=Js[26]=-1,Zs[144]=Zs[26]=0,Ks[144]=Ks[26]=1,ea[36]=ea[134]=0,na[36]=na[134]=1,ra[36]=ra[134]=1,aa[36]=aa[134]=0,ua[36]=ua[134]=1,ca[36]=ca[134]=0,Vs[36]=Vs[134]=0,Hs[36]=Hs[134]=-1,Ws[36]=Ws[134]=1,Js[36]=Js[134]=1,Zs[36]=Zs[134]=0,Ks[36]=Ks[134]=0,Qs[9]=Qs[161]=-1,$s[9]=$s[161]=0,ta[9]=ta[161]=0,ea[9]=ea[161]=0,na[9]=na[161]=-1,ra[9]=ra[161]=0,ia[9]=ia[161]=1,oa[9]=oa[161]=0,sa[9]=sa[161]=0,fa[9]=fa[161]=1,ga[9]=ga[161]=0,da[9]=da[161]=1,Qs[136]=0,$s[136]=1,ta[136]=1,ea[136]=0,na[136]=1,ra[136]=0,aa[136]=-1,ua[136]=0,ca[136]=1,ia[136]=-1,oa[136]=0,sa[136]=0,fa[136]=0,ga[136]=-1,da[136]=0,ha[136]=0,la[136]=-1,pa[136]=1,Vs[136]=1,Hs[136]=0,Ws[136]=0,Js[136]=1,Zs[136]=0,Ks[136]=1,Qs[34]=0,$s[34]=-1,ta[34]=0,ea[34]=0,na[34]=-1,ra[34]=1,aa[34]=1,ua[34]=0,ca[34]=0,ia[34]=1,oa[34]=0,sa[34]=1,fa[34]=0,ga[34]=1,da[34]=1,ha[34]=0,la[34]=1,pa[34]=0,Vs[34]=-1,Hs[34]=0,Ws[34]=1,Js[34]=-1,Zs[34]=0,Ks[34]=0,Qs[35]=0,$s[35]=1,ta[35]=1,ea[35]=0,na[35]=-1,ra[35]=1,aa[35]=1,ua[35]=0,ca[35]=0,ia[35]=-1,oa[35]=0,sa[35]=0,fa[35]=0,ga[35]=-1,da[35]=0,ha[35]=0,la[35]=1,pa[35]=0,Vs[35]=-1,Hs[35]=0,Ws[35]=1,Js[35]=1,Zs[35]=0,Ks[35]=1,Qs[153]=0,$s[153]=1,ta[153]=1,ia[153]=-1,oa[153]=0,sa[153]=0,fa[153]=0,ga[153]=-1,da[153]=0,Js[153]=1,Zs[153]=0,Ks[153]=1,ea[102]=0,na[102]=-1,ra[102]=1,aa[102]=1,ua[102]=0,ca[102]=0,ha[102]=0,la[102]=1,pa[102]=0,Vs[102]=-1,Hs[102]=0,Ws[102]=1,Qs[155]=0,$s[155]=-1,ta[155]=0,ia[155]=1,oa[155]=0,sa[155]=1,fa[155]=0,ga[155]=1,da[155]=1,Js[155]=-1,Zs[155]=0,Ks[155]=0,ea[103]=0,na[103]=1,ra[103]=0,aa[103]=-1,ua[103]=0,ca[103]=1,ha[103]=0,la[103]=-1,pa[103]=1,Vs[103]=1,Hs[103]=0,Ws[103]=0,Qs[152]=0,$s[152]=1,ta[152]=1,aa[152]=-1,ua[152]=0,ca[152]=1,ia[152]=-1,oa[152]=0,sa[152]=0,fa[152]=0,ga[152]=-1,da[152]=0,ha[152]=0,la[152]=-1,pa[152]=1,Js[152]=1,Zs[152]=0,Ks[152]=1,Qs[156]=0,$s[156]=-1,ta[156]=1,aa[156]=1,ua[156]=0,ca[156]=1,ia[156]=-1,oa[156]=0,sa[156]=0,fa[156]=0,ga[156]=-1,da[156]=0,ha[156]=0,la[156]=1,pa[156]=1,Js[156]=-1,Zs[156]=0,Ks[156]=1,Qs[137]=0,$s[137]=1,ta[137]=1,ea[137]=0,na[137]=1,ra[137]=0,ia[137]=-1,oa[137]=0,sa[137]=0,fa[137]=0,ga[137]=-1,da[137]=0,Vs[137]=1,Hs[137]=0,Ws[137]=0,Js[137]=1,Zs[137]=0,Ks[137]=1,Qs[139]=0,$s[139]=1,ta[139]=1,ea[139]=0,na[139]=-1,ra[139]=0,ia[139]=1,oa[139]=0,sa[139]=0,fa[139]=0,ga[139]=1,da[139]=0,Vs[139]=-1,Hs[139]=0,Ws[139]=0,Js[139]=1,Zs[139]=0,Ks[139]=1,Qs[98]=0,$s[98]=-1,ta[98]=0,ea[98]=0,na[98]=-1,ra[98]=1,aa[98]=1,ua[98]=0,ca[98]=0,ia[98]=1,oa[98]=0,sa[98]=1,ha[98]=0,la[98]=1,pa[98]=0,Vs[98]=-1,Hs[98]=0,Ws[98]=1,Qs[99]=0,$s[99]=1,ta[99]=0,ea[99]=0,na[99]=-1,ra[99]=1,aa[99]=1,ua[99]=0,ca[99]=0,ia[99]=-1,oa[99]=0,sa[99]=1,ha[99]=0,la[99]=-1,pa[99]=0,Vs[99]=1,Hs[99]=0,Ws[99]=1,ea[38]=0,na[38]=-1,ra[38]=1,aa[38]=1,ua[38]=0,ca[38]=0,fa[38]=0,ga[38]=1,da[38]=1,ha[38]=0,la[38]=1,pa[38]=0,Vs[38]=-1,Hs[38]=0,Ws[38]=1,Js[38]=-1,Zs[38]=0,Ks[38]=0,ea[39]=0,na[39]=1,ra[39]=1,aa[39]=-1,ua[39]=0,ca[39]=0,fa[39]=0,ga[39]=-1,da[39]=1,ha[39]=0,la[39]=1,pa[39]=0,Vs[39]=-1,Hs[39]=0,Ws[39]=1,Js[39]=1,Zs[39]=0,Ks[39]=0;var ya=function(t){return[[t.bottomleft,0],[0,0],[0,t.leftbottom]]},_a=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0]]},ma=function(t){return[[t.topright,1],[1,1],[1,t.righttop]]},va=function(t){return[[0,t.lefttop],[0,1],[t.topleft,1]]},xa=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop]]},Ea=function(t){return[[t.bottomright,0],[t.bottomleft,0],[1,t.righttop],[1,t.rightbottom]]},wa=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.topleft,1],[t.topright,1]]},ba=function(t){return[[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Ia=[],Na=[],Ca=[],Sa=[],Ma=[],La=[],Pa=[],Oa=[];Sa[1]=Ma[1]=18,Sa[169]=Ma[169]=18,Ca[4]=Na[4]=12,Ca[166]=Na[166]=12,Ia[16]=Oa[16]=4,Ia[154]=Oa[154]=4,La[64]=Pa[64]=22,La[106]=Pa[106]=22,Ca[2]=La[2]=17,Sa[2]=Ma[2]=18,Ca[168]=La[168]=17,Sa[168]=Ma[168]=18,Ia[8]=Sa[8]=9,Na[8]=Ca[8]=12,Ia[162]=Sa[162]=9,Na[162]=Ca[162]=12,Ia[32]=Oa[32]=4,Na[32]=Pa[32]=1,Ia[138]=Oa[138]=4,Na[138]=Pa[138]=1,Ma[128]=Oa[128]=21,La[128]=Pa[128]=22,Ma[42]=Oa[42]=21,La[42]=Pa[42]=22,Na[5]=Ma[5]=14,Na[165]=Ma[165]=14,Ca[20]=Oa[20]=6,Ca[150]=Oa[150]=6,Ia[80]=La[80]=11,Ia[90]=La[90]=11,Sa[65]=Pa[65]=3,Sa[105]=Pa[105]=3,Ia[160]=La[160]=11,Na[160]=Ma[160]=14,Ia[10]=La[10]=11,Na[10]=Ma[10]=14,Ca[130]=Oa[130]=6,Sa[130]=Pa[130]=3,Ca[40]=Oa[40]=6,Sa[40]=Pa[40]=3,Na[101]=Pa[101]=1,Na[69]=Pa[69]=1,Ma[149]=Oa[149]=21,Ma[21]=Oa[21]=21,Ca[86]=La[86]=17,Ca[84]=La[84]=17,Ia[89]=Sa[89]=9,Ia[81]=Sa[81]=9,Ia[96]=Pa[96]=0,Na[96]=La[96]=15,Ia[74]=Pa[74]=0,Na[74]=La[74]=15,Ia[24]=Ca[24]=8,Sa[24]=Oa[24]=7,Ia[146]=Ca[146]=8,Sa[146]=Oa[146]=7,Na[6]=La[6]=15,Ca[6]=Ma[6]=16,Na[164]=La[164]=15,Ca[164]=Ma[164]=16,Sa[129]=Oa[129]=7,Ma[129]=Pa[129]=20,Sa[41]=Oa[41]=7,Ma[41]=Pa[41]=20,Ca[66]=Pa[66]=2,Sa[66]=La[66]=19,Ca[104]=Pa[104]=2,Sa[104]=La[104]=19,Ia[144]=Ma[144]=10,La[144]=Oa[144]=23,Ia[26]=Ma[26]=10,La[26]=Oa[26]=23,Na[36]=Oa[36]=5,Ca[36]=Pa[36]=2,Na[134]=Oa[134]=5,Ca[134]=Pa[134]=2,Ia[9]=Ma[9]=10,Na[9]=Sa[9]=13,Ia[161]=Ma[161]=10,Na[161]=Sa[161]=13,Na[37]=Oa[37]=5,Ma[37]=Pa[37]=20,Na[133]=Oa[133]=5,Ma[133]=Pa[133]=20,Ca[148]=Ma[148]=16,La[148]=Oa[148]=23,Ca[22]=Ma[22]=16,La[22]=Oa[22]=23,Ia[82]=Ca[82]=8,Sa[82]=La[82]=19,Ia[88]=Ca[88]=8,Sa[88]=La[88]=19,Ia[73]=Pa[73]=0,Na[73]=Sa[73]=13,Ia[97]=Pa[97]=0,Na[97]=Sa[97]=13,Ia[145]=Sa[145]=9,Ma[145]=Oa[145]=21,Ia[25]=Sa[25]=9,Ma[25]=Oa[25]=21,Na[70]=Pa[70]=1,Ca[70]=La[70]=17,Na[100]=Pa[100]=1,Ca[100]=La[100]=17,Ia[34]=Sa[34]=9,Na[34]=Ca[34]=12,Ma[34]=Oa[34]=21,La[34]=Pa[34]=22,Ia[136]=Oa[136]=4,Na[136]=Pa[136]=1,Ca[136]=La[136]=17,Sa[136]=Ma[136]=18,Ia[35]=Oa[35]=4,Na[35]=Ca[35]=12,Sa[35]=Ma[35]=18,La[35]=Pa[35]=22,Ia[153]=Oa[153]=4,Sa[153]=Ma[153]=18,Na[102]=Ca[102]=12,La[102]=Pa[102]=22,Ia[155]=Sa[155]=9,Ma[155]=Oa[155]=23,Na[103]=Pa[103]=1,Ca[103]=La[103]=17,Ia[152]=Oa[152]=4,Ca[152]=La[152]=17,Sa[152]=Ma[152]=18,Ia[156]=Ca[156]=8,Sa[156]=Ma[156]=18,La[156]=Oa[156]=23,Ia[137]=Oa[137]=4,Na[137]=Pa[137]=1,Sa[137]=Ma[137]=18,Ia[139]=Oa[139]=4,Na[139]=Sa[139]=13,Ma[139]=Pa[139]=20,Ia[98]=Sa[98]=9,Na[98]=Ca[98]=12,La[98]=Pa[98]=22,Ia[99]=Pa[99]=0,Na[99]=Ca[99]=12,Sa[99]=La[99]=19,Na[38]=Ca[38]=12,Ma[38]=Oa[38]=21,La[38]=Pa[38]=22,Na[39]=Oa[39]=5,Ca[39]=Ma[39]=16,La[39]=Pa[39]=22;var Ra=[];Ra[1]=Ra[169]=ya,Ra[4]=Ra[166]=_a,Ra[16]=Ra[154]=ma,Ra[64]=Ra[106]=va,Ra[168]=Ra[2]=xa,Ra[162]=Ra[8]=Ea,Ra[138]=Ra[32]=wa,Ra[42]=Ra[128]=ba,Ra[5]=Ra[165]=function(t){return[[0,0],[0,t.leftbottom],[1,t.rightbottom],[1,0]]},Ra[20]=Ra[150]=function(t){return[[1,0],[t.bottomright,0],[t.topright,1],[1,1]]},Ra[80]=Ra[90]=function(t){return[[1,1],[1,t.righttop],[0,t.lefttop],[0,1]]},Ra[65]=Ra[105]=function(t){return[[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Ra[160]=Ra[10]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.leftbottom],[0,t.lefttop]]},Ra[130]=Ra[40]=function(t){return[[t.topleft,1],[t.topright,1],[t.bottomright,0],[t.bottomleft,0]]},Ra[85]=function(){return[[0,0],[0,1],[1,1],[1,0]]},Ra[101]=Ra[69]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,1],[t.topleft,1]]},Ra[149]=Ra[21]=function(t){return[[t.topright,1],[1,1],[1,0],[0,0],[0,t.leftbottom]]},Ra[86]=Ra[84]=function(t){return[[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[1,1]]},Ra[89]=Ra[81]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,1]]},Ra[96]=Ra[74]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[24]=Ra[146]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[t.topright,1]]},Ra[6]=Ra[164]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop]]},Ra[129]=Ra[41]=function(t){return[[t.topright,1],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1]]},Ra[66]=Ra[104]=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[144]=Ra[26]=function(t){return[[1,1],[1,t.righttop],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[36]=Ra[134]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[t.topleft,1],[t.topright,1]]},Ra[9]=Ra[161]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom]]},Ra[37]=Ra[133]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Ra[148]=Ra[22]=function(t){return[[1,1],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[82]=Ra[88]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1]]},Ra[73]=Ra[97]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Ra[145]=Ra[25]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Ra[70]=Ra[100]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[34]=function(t){return[ba(t),Ea(t)]},Ra[35]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Ra[136]=function(t){return[wa(t),xa(t)]},Ra[153]=function(t){return[ma(t),ya(t)]},Ra[102]=function(t){return[_a(t),va(t)]},Ra[155]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Ra[103]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[152]=function(t){return[ma(t),xa(t)]},Ra[156]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[137]=function(t){return[wa(t),ya(t)]},Ra[139]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Ra[98]=function(t){return[Ea(t),va(t)]},Ra[99]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[38]=function(t){return[_a(t),ba(t)]},Ra[39]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]};var Ta=function t(e){this.id=t.buildId(e),this.coordinates=e,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1};Ta.buildId=function(t){return t.join(\",\")},Ta.prototype.removeInnerEdge=function(t){this.innerEdges=this.innerEdges.filter(function(e){return e.from.id!==t.from.id})},Ta.prototype.removeOuterEdge=function(t){this.outerEdges=this.outerEdges.filter(function(e){return e.to.id!==t.to.id})},Ta.prototype.addOuterEdge=function(t){this.outerEdges.push(t),this.outerEdgesSorted=!1},Ta.prototype.sortOuterEdges=function(){var t=this;this.outerEdgesSorted||(this.outerEdges.sort(function(e,n){var r=e.to,i=n.to;if(r.coordinates[0]-t.coordinates[0]>=0&&i.coordinates[0]-t.coordinates[0]<0)return 1;if(r.coordinates[0]-t.coordinates[0]<0&&i.coordinates[0]-t.coordinates[0]>=0)return-1;if(r.coordinates[0]-t.coordinates[0]==0&&i.coordinates[0]-t.coordinates[0]==0)return r.coordinates[1]-t.coordinates[1]>=0||i.coordinates[1]-t.coordinates[1]>=0?r.coordinates[1]-i.coordinates[1]:i.coordinates[1]-r.coordinates[1];var o=xr(t.coordinates,r.coordinates,i.coordinates);if(o<0)return 1;if(o>0)return-1;return Math.pow(r.coordinates[0]-t.coordinates[0],2)+Math.pow(r.coordinates[1]-t.coordinates[1],2)-(Math.pow(i.coordinates[0]-t.coordinates[0],2)+Math.pow(i.coordinates[1]-t.coordinates[1],2))}),this.outerEdgesSorted=!0)},Ta.prototype.getOuterEdges=function(){return this.sortOuterEdges(),this.outerEdges},Ta.prototype.getOuterEdge=function(t){return this.sortOuterEdges(),this.outerEdges[t]},Ta.prototype.addInnerEdge=function(t){this.innerEdges.push(t)};var Aa=function(t,e){this.from=t,this.to=e,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)};Aa.prototype.getSymetric=function(){return this.symetric||(this.symetric=new Aa(this.to,this.from),this.symetric.symetric=this),this.symetric},Aa.prototype.deleteEdge=function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)},Aa.prototype.isEqual=function(t){return this.from.id===t.from.id&&this.to.id===t.to.id},Aa.prototype.toString=function(){return\"Edge { \"+this.from.id+\" -> \"+this.to.id+\" }\"},Aa.prototype.toLineString=function(){return a([this.from.coordinates,this.to.coordinates])},Aa.prototype.compareTo=function(t){return xr(t.from.coordinates,t.to.coordinates,this.to.coordinates)};var Da=function(){this.edges=[],this.polygon=void 0,this.envelope=void 0},Fa={length:{configurable:!0}};Da.prototype.push=function(t){this[this.edges.length]=t,this.edges.push(t),this.polygon=this.envelope=void 0},Da.prototype.get=function(t){return this.edges[t]},Fa.length.get=function(){return this.edges.length},Da.prototype.forEach=function(t){this.edges.forEach(t)},Da.prototype.map=function(t){return this.edges.map(t)},Da.prototype.some=function(t){return this.edges.some(t)},Da.prototype.isValid=function(){return!0},Da.prototype.isHole=function(){var t=this,e=this.edges.reduce(function(e,n,r){return n.from.coordinates[1]>t.edges[e].from.coordinates[1]&&(e=r),e},0),n=(0===e?this.length:e)-1,r=(e+1)%this.length,i=xr(this.edges[n].from.coordinates,this.edges[e].from.coordinates,this.edges[r].from.coordinates);return 0===i?this.edges[n].from.coordinates[0]>this.edges[r].from.coordinates[0]:i>0},Da.prototype.toMultiPoint=function(){return l(this.edges.map(function(t){return t.from.coordinates}))},Da.prototype.toPolygon=function(){if(this.polygon)return this.polygon;var t=this.edges.map(function(t){return t.from.coordinates});return t.push(this.edges[0].from.coordinates),this.polygon=o([t])},Da.prototype.getEnvelope=function(){return this.envelope?this.envelope:this.envelope=he(this.toPolygon())},Da.findEdgeRingContaining=function(t,e){var n,i,o=t.getEnvelope();return e.forEach(function(e){var s=e.getEnvelope();if(i&&(n=i.getEnvelope()),!function(t,e){var n=t.geometry.coordinates.map(function(t){return t[0]}),r=t.geometry.coordinates.map(function(t){return t[1]}),i=e.geometry.coordinates.map(function(t){return t[0]}),o=e.geometry.coordinates.map(function(t){return t[1]});return Math.max(null,n)===Math.max(null,i)&&Math.max(null,r)===Math.max(null,o)&&Math.min(null,n)===Math.min(null,i)&&Math.min(null,r)===Math.min(null,o)}(s,o)&&Er(s,o)){var a=t.map(function(t){return t.from.coordinates}).find(function(t){return!e.some(function(e){return function(t,e){return t[0]===e[0]&&t[1]===e[1]}(t,e.from.coordinates)})});a&&e.inside(r(a))&&(i&&!Er(n,s)||(i=e))}}),i},Da.prototype.inside=function(t){return Pt(t,this.toPolygon())},Object.defineProperties(Da.prototype,Fa);var qa=function(){this.edges=[],this.nodes={}};qa.fromGeoJson=function(t){!function(t){if(!t)throw new Error(\"No geojson passed\");if(\"FeatureCollection\"!==t.type&&\"GeometryCollection\"!==t.type&&\"MultiLineString\"!==t.type&&\"LineString\"!==t.type&&\"Feature\"!==t.type)throw new Error(\"Invalid input type '\"+t.type+\"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature\")}(t);var e=new qa;return F(t,function(t){H(t,\"LineString\",\"Graph::fromGeoJson\"),M(t,function(t,n){if(t){var r=e.getNode(t),i=e.getNode(n);e.addEdge(r,i)}return n})}),e},qa.prototype.getNode=function(t){var e=Ta.buildId(t),n=this.nodes[e];return n||(n=this.nodes[e]=new Ta(t)),n},qa.prototype.addEdge=function(t,e){var n=new Aa(t,e),r=n.getSymetric();this.edges.push(n),this.edges.push(r)},qa.prototype.deleteDangles=function(){var t=this;Object.keys(this.nodes).map(function(e){return t.nodes[e]}).forEach(function(e){return t._removeIfDangle(e)})},qa.prototype._removeIfDangle=function(t){var e=this;if(t.innerEdges.length<=1){var n=t.getOuterEdges().map(function(t){return t.to});this.removeNode(t),n.forEach(function(t){return e._removeIfDangle(t)})}},qa.prototype.deleteCutEdges=function(){var t=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach(function(e){e.label===e.symetric.label&&(t.removeEdge(e.symetric),t.removeEdge(e))})},qa.prototype._computeNextCWEdges=function(t){var e=this;void 0===t?Object.keys(this.nodes).forEach(function(t){return e._computeNextCWEdges(e.nodes[t])}):t.getOuterEdges().forEach(function(e,n){t.getOuterEdge((0===n?t.getOuterEdges().length:n)-1).symetric.next=e})},qa.prototype._computeNextCCWEdges=function(t,e){for(var n,r,i=t.getOuterEdges(),o=i.length-1;o>=0;--o){var s=i[o],a=s.symetric,u=void 0,c=void 0;s.label===e&&(u=s),a.label===e&&(c=a),u&&c&&(c&&(r=c),u&&(r&&(r.next=u,r=void 0),n||(n=u)))}r&&(r.next=n)},qa.prototype._findLabeledEdgeRings=function(){var t=[],e=0;return this.edges.forEach(function(n){if(!(n.label>=0)){t.push(n);var r=n;do{r.label=e,r=r.next}while(!n.isEqual(r));e++}}),t},qa.prototype.getEdgeRings=function(){var t=this;this._computeNextCWEdges(),this.edges.forEach(function(t){t.label=void 0}),this._findLabeledEdgeRings().forEach(function(e){t._findIntersectionNodes(e).forEach(function(n){t._computeNextCCWEdges(n,e.label)})});var e=[];return this.edges.forEach(function(n){n.ring||e.push(t._findEdgeRing(n))}),e},qa.prototype._findIntersectionNodes=function(t){var e=[],n=t,r=function(){var r=0;n.from.getOuterEdges().forEach(function(e){e.label===t.label&&++r}),r>1&&e.push(n.from),n=n.next};do{r()}while(!t.isEqual(n));return e},qa.prototype._findEdgeRing=function(t){var e=t,n=new Da;do{n.push(e),e.ring=n,e=e.next}while(!t.isEqual(e));return n},qa.prototype.removeNode=function(t){var e=this;t.getOuterEdges().forEach(function(t){return e.removeEdge(t)}),t.innerEdges.forEach(function(t){return e.removeEdge(t)}),delete this.nodes[t.id]},qa.prototype.removeEdge=function(t){this.edges=this.edges.filter(function(e){return!e.isEqual(t)}),t.deleteEdge()};var Ga=mt(function(t,e){function n(t){var e=[];for(var n in t)e.push(n);return e}(t.exports=\"function\"==typeof Object.keys?Object.keys:n).shim=n}),Ba=(Ga.shim,mt(function(t,e){function n(t){return\"[object Arguments]\"==Object.prototype.toString.call(t)}function r(t){return t&&\"object\"==typeof t&&\"number\"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,\"callee\")&&!Object.prototype.propertyIsEnumerable.call(t,\"callee\")||!1}var i=\"[object Arguments]\"==function(){return Object.prototype.toString.call(arguments)}();(e=t.exports=i?n:r).supported=n,e.unsupported=r})),ka=(Ba.supported,Ba.unsupported,mt(function(t){function e(t){return null===t||void 0===t}function n(t){return!(!t||\"object\"!=typeof t||\"number\"!=typeof t.length)&&(\"function\"==typeof t.copy&&\"function\"==typeof t.slice&&!(t.length>0&&\"number\"!=typeof t[0]))}var r=Array.prototype.slice,i=t.exports=function(t,o,s){return s||(s={}),t===o||(t instanceof Date&&o instanceof Date?t.getTime()===o.getTime():!t||!o||\"object\"!=typeof t&&\"object\"!=typeof o?s.strict?t===o:t==o:function(t,o,s){var a,u;if(e(t)||e(o))return!1;if(t.prototype!==o.prototype)return!1;if(Ba(t))return!!Ba(o)&&(t=r.call(t),o=r.call(o),i(t,o,s));if(n(t)){if(!n(o))return!1;if(t.length!==o.length)return!1;for(a=0;a<t.length;a++)if(t[a]!==o[a])return!1;return!0}try{var c=Ga(t),h=Ga(o)}catch(t){return!1}if(c.length!=h.length)return!1;for(c.sort(),h.sort(),a=c.length-1;a>=0;a--)if(c[a]!=h[a])return!1;for(a=c.length-1;a>=0;a--)if(u=c[a],!i(t[u],o[u],s))return!1;return typeof t==typeof o}(t,o,s))}})),za=function(t){this.precision=t&&t.precision?t.precision:17,this.direction=!(!t||!t.direction)&&t.direction,this.pseudoNode=!(!t||!t.pseudoNode)&&t.pseudoNode,this.objectComparator=t&&t.objectComparator?t.objectComparator:Rr};za.prototype.compare=function(t,e){if(t.type!==e.type||!Or(t,e))return!1;switch(t.type){case\"Point\":return this.compareCoord(t.coordinates,e.coordinates);case\"LineString\":return this.compareLine(t.coordinates,e.coordinates,0,!1);case\"Polygon\":return this.comparePolygon(t,e);case\"Feature\":return this.compareFeature(t,e);default:if(0===t.type.indexOf(\"Multi\")){var n=this,r=Pr(t),i=Pr(e);return r.every(function(t){return this.some(function(e){return n.compare(t,e)})},i)}}return!1},za.prototype.compareCoord=function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n].toFixed(this.precision)!==e[n].toFixed(this.precision))return!1;return!0},za.prototype.compareLine=function(t,e,n,r){if(!Or(t,e))return!1;var i=this.pseudoNode?t:this.removePseudo(t),o=this.pseudoNode?e:this.removePseudo(e);if(!r||this.compareCoord(i[0],o[0])||(o=this.fixStartIndex(o,i))){var s=this.compareCoord(i[n],o[n]);return this.direction||s?this.comparePath(i,o):!!this.compareCoord(i[n],o[o.length-(1+n)])&&this.comparePath(i.slice().reverse(),o)}},za.prototype.fixStartIndex=function(t,e){for(var n,r=-1,i=0;i<t.length;i++)if(this.compareCoord(t[i],e[0])){r=i;break}return r>=0&&(n=[].concat(t.slice(r,t.length),t.slice(1,r+1))),n},za.prototype.comparePath=function(t,e){var n=this;return t.every(function(t,e){return n.compareCoord(t,this[e])},e)},za.prototype.comparePolygon=function(t,e){if(this.compareLine(t.coordinates[0],e.coordinates[0],1,!0)){var n=t.coordinates.slice(1,t.coordinates.length),r=e.coordinates.slice(1,e.coordinates.length),i=this;return n.every(function(t){return this.some(function(e){return i.compareLine(t,e,1,!0)})},r)}return!1},za.prototype.compareFeature=function(t,e){return!(t.id!==e.id||!this.objectComparator(t.properties,e.properties)||!this.compareBBox(t,e))&&this.compare(t.geometry,e.geometry)},za.prototype.compareBBox=function(t,e){return!!(!t.bbox&&!e.bbox||t.bbox&&e.bbox&&this.compareCoord(t.bbox,e.bbox))},za.prototype.removePseudo=function(t){return t};var ja=za,Xa=mt(function(t){function e(t,e,n,r){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,e,n,r)}e.prototype.run=function(t,e,n,r){this._init(t,e,n,r);for(var i=0;i<this._datasetLength;i++)if(1!==this._visited[i]){this._visited[i]=1;var o=this._regionQuery(i);if(o.length<this.minPts)this.noise.push(i);else{var s=this.clusters.length;this.clusters.push([]),this._addToCluster(i,s),this._expandCluster(s,o)}}return this.clusters},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error(\"Dataset must be of type array, \"+typeof t+\" given\");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._expandCluster=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(1!==this._visited[r]){this._visited[r]=1;var i=this._regionQuery(r);i.length>=this.minPts&&(e=this._mergeArrays(e,i))}1!==this._assigned[r]&&this._addToCluster(r,t)}},e.prototype._addToCluster=function(t,e){this.clusters[e].push(t),this._assigned[t]=1},e.prototype._regionQuery=function(t){for(var e=[],n=0;n<this._datasetLength;n++){this.distance(this.dataset[t],this.dataset[n])<this.epsilon&&e.push(n)}return e},e.prototype._mergeArrays=function(t,e){for(var n=e.length,r=0;r<n;r++){var i=e[r];t.indexOf(i)<0&&t.push(i)}return t},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ua=mt(function(t){function e(t,e,n){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,e,n)}e.prototype.init=function(t,e,n){this.assignments=[],this.centroids=[],void 0!==t&&(this.dataset=t),void 0!==e&&(this.k=e),void 0!==n&&(this.distance=n)},e.prototype.run=function(t,e){this.init(t,e);for(var n=this.dataset.length,r=0;r<this.k;r++)this.centroids[r]=this.randomCentroid();for(var i=!0;i;){i=this.assign();for(var o=0;o<this.k;o++){for(var s=new Array(h),a=0,u=0;u<h;u++)s[u]=0;for(var c=0;c<n;c++){var h=this.dataset[c].length;if(o===this.assignments[c]){for(u=0;u<h;u++)s[u]+=this.dataset[c][u];a++}}if(a>0){for(u=0;u<h;u++)s[u]/=a;this.centroids[o]=s}else this.centroids[o]=this.randomCentroid(),i=!0}}return this.getClusters()},e.prototype.randomCentroid=function(){var t,e,n=this.dataset.length-1;do{e=Math.round(Math.random()*n),t=this.dataset[e]}while(this.centroids.indexOf(t)>=0);return t},e.prototype.assign=function(){for(var t,e=!1,n=this.dataset.length,r=0;r<n;r++)(t=this.argmin(this.dataset[r],this.centroids,this.distance))!=this.assignments[r]&&(this.assignments[r]=t,e=!0);return e},e.prototype.getClusters=function(){for(var t,e=new Array(this.k),n=0;n<this.assignments.length;n++)void 0===e[t=this.assignments[n]]&&(e[t]=[]),e[t].push(n);return e},e.prototype.argmin=function(t,e,n){for(var r,i=Number.MAX_VALUE,o=0,s=e.length,a=0;a<s;a++)(r=n(t,e[a]))<i&&(i=r,o=a);return o},e.prototype.distance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;){var i=t[r]-e[r];n+=i*i}return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ya=mt(function(t){function e(t,e,n){this._queue=[],this._priorities=[],this._sorting=\"desc\",this._init(t,e,n)}e.prototype.insert=function(t,e){for(var n=this._queue.length,r=n;r--;){var i=this._priorities[r];\"desc\"===this._sorting?e>i&&(n=r):e<i&&(n=r)}this._insertAt(t,e,n)},e.prototype.remove=function(t){for(var e=this._queue.length;e--;){if(t===this._queue[e]){this._queue.splice(e,1),this._priorities.splice(e,1);break}}},e.prototype.forEach=function(t){this._queue.forEach(t)},e.prototype.getElements=function(){return this._queue},e.prototype.getElementPriority=function(t){return this._priorities[t]},e.prototype.getPriorities=function(){return this._priorities},e.prototype.getElementsWithPriorities=function(){for(var t=[],e=0,n=this._queue.length;e<n;e++)t.push([this._queue[e],this._priorities[e]]);return t},e.prototype._init=function(t,e,n){if(t&&e){if(this._queue=[],this._priorities=[],t.length!==e.length)throw new Error(\"Arrays must have the same length\");for(var r=0;r<t.length;r++)this.insert(t[r],e[r])}n&&(this._sorting=n)},e.prototype._insertAt=function(t,e,n){this._queue.length===n?(this._queue.push(t),this._priorities.push(e)):(this._queue.splice(n,0,t),this._priorities.splice(n,0,e))},t.exports&&(t.exports=e)}),Va=mt(function(t){function e(t,e,n,r){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,e,n,r)}if(t.exports)var n=Ya;e.prototype.run=function(t,e,r,i){this._init(t,e,r,i);for(var o=0,s=this.dataset.length;o<s;o++)if(1!==this._processed[o]){this._processed[o]=1,this.clusters.push([o]);var a=this.clusters.length-1;this._orderedList.push(o);var u=new n(null,null,\"asc\"),c=this._regionQuery(o);void 0!==this._distanceToCore(o)&&(this._updateQueue(o,c,u),this._expandCluster(a,u))}return this.clusters},e.prototype.getReachabilityPlot=function(){for(var t=[],e=0,n=this._orderedList.length;e<n;e++){var r=this._orderedList[e],i=this._reachability[r];t.push([r,i])}return t},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error(\"Dataset must be of type array, \"+typeof t+\" given\");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._updateQueue=function(t,e,n){var r=this;this._coreDistance=this._distanceToCore(t),e.forEach(function(e){if(void 0===r._processed[e]){var i=r.distance(r.dataset[t],r.dataset[e]),o=Math.max(r._coreDistance,i);void 0===r._reachability[e]?(r._reachability[e]=o,n.insert(e,o)):o<r._reachability[e]&&(r._reachability[e]=o,n.remove(e),n.insert(e,o))}})},e.prototype._expandCluster=function(t,e){for(var n=e.getElements(),r=0,i=n.length;r<i;r++){var o=n[r];if(void 0===this._processed[o]){var s=this._regionQuery(o);this._processed[o]=1,this.clusters[t].push(o),this._orderedList.push(o),void 0!==this._distanceToCore(o)&&(this._updateQueue(o,s,e),this._expandCluster(t,e))}}},e.prototype._distanceToCore=function(t){for(var e=this.epsilon,n=0;n<e;n++){if(this._regionQuery(t,n).length>=this.minPts)return n}},e.prototype._regionQuery=function(t,e){e=e||this.epsilon;for(var n=[],r=0,i=this.dataset.length;r<i;r++)this.distance(this.dataset[t],this.dataset[r])<e&&n.push(r);return n},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ha=mt(function(t){t.exports&&(t.exports={DBSCAN:Xa,KMEANS:Ua,OPTICS:Va,PriorityQueue:Ya})}),Wa=(Ha.DBSCAN,Ha.KMEANS,Ha.OPTICS,Ha.PriorityQueue,function(t,e,n){for(var r=t.length,i=0,o=0;o<r;o++){var s=(t[o]||0)-(e[o]||0);i+=s*s}return n?Math.sqrt(i):i}),Ja=Wa,Za=function(t,e,n){var r=Math.abs(t-e);return n?r:r*r},Ka=Wa,Qa=function(t,e){for(var n={},r=[],i=e<<2,o=t.length,s=t[0].length>0;r.length<e&&i-- >0;){var a=t[Math.floor(Math.random()*o)],u=s?a.join(\"_\"):\"\"+a;n[u]||(n[u]=!0,r.push(a))}if(r.length<e)throw new Error(\"Error initializating clusters\");return r},$a=function(t,e){var n=t[0].length?Ja:Za,r=[],i=t.length,o=t[0].length>0,s=t[Math.floor(Math.random()*i)];o&&s.join(\"_\");for(r.push(s);r.length<e;){for(var a=[],u=r.length,c=0,h=[],l=0;l<i;l++){for(var p=1/0,f=0;f<u;f++){var g=n(t[l],r[f]);g<=p&&(p=g)}a[l]=p}for(var d=0;d<i;d++)c+=a[d];for(var y=0;y<i;y++)h[y]={i:y,v:t[y],pr:a[y]/c,cs:0};h.sort(function(t,e){return t.pr-e.pr}),h[0].cs=h[0].pr;for(var _=1;_<i;_++)h[_].cs=h[_-1].cs+h[_].pr;for(var m=Math.random(),v=0;v<i-1&&h[v++].cs<m;);r.push(h[v-1].v)}return r},tu=1e4,eu=function(t,e,n,r){var i=[],o=[],s=[],a=[],u=!1,c=r||tu,h=t.length,l=t[0].length,p=l>0,f=[];if(n)i=\"kmrand\"==n?Qa(t,e):\"kmpp\"==n?$a(t,e):n;else for(var g={};i.length<e;){var d=Math.floor(Math.random()*h);g[d]||(g[d]=!0,i.push(t[d]))}do{Ar(e,0,f);for(var y=0;y<h;y++){for(var _=1/0,m=0,v=0;v<e;v++)(a=p?Ka(t[y],i[v]):Math.abs(t[y]-i[v]))<=_&&(_=a,m=v);s[y]=m,f[m]++}for(var x=[],E=(o=[],0);E<e;E++)x[E]=p?Ar(l,0,x[E]):0,o[E]=i[E];if(p){for(var w=0;w<e;w++)i[w]=[];for(var b=0;b<h;b++)for(var I=x[s[b]],N=t[b],C=0;C<l;C++)I[C]+=N[C];u=!0;for(var S=0;S<e;S++){for(var M=i[S],L=x[S],P=o[S],O=f[S],R=0;R<l;R++)M[R]=L[R]/O||0;if(u)for(var T=0;T<l;T++)if(P[T]!=M[T]){u=!1;break}}}else{for(var A=0;A<h;A++)x[s[A]]+=t[A];for(var D=0;D<e;D++)i[D]=x[D]/f[D]||0;u=!0;for(var F=0;F<e;F++)if(o[F]!=i[F]){u=!1;break}}u=u||--c<=0}while(!u);return{it:tu-c,k:e,idxs:s,centroids:i}},nu={search:function(t,e,n,r){t.cleanDirty();var i=(r=r||{}).heuristic||nu.heuristics.manhattan,o=r.closest||!1,s=new Br(function(t){return t.f}),a=e;for(e.h=i(e,n),s.push(e);s.size()>0;){var u=s.pop();if(u===n)return Fr(u);u.closed=!0;for(var c=t.neighbors(u),h=0,l=c.length;h<l;++h){var p=c[h];if(!p.closed&&!p.isWall()){var f=u.g+p.getCost(u),g=p.visited;(!g||f<p.g)&&(p.visited=!0,p.parent=u,p.h=p.h||i(p,n),p.g=f,p.f=p.g+p.h,t.markDirty(p),o&&(p.h<a.h||p.h===a.h&&p.g<a.g)&&(a=p),g?s.rescoreElement(p):s.push(p))}}}return o?Fr(a):[]},heuristics:{manhattan:function(t,e){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)},diagonal:function(t,e){var n=Math.sqrt(2),r=Math.abs(e.x-t.x),i=Math.abs(e.y-t.y);return 1*(r+i)+(n-2)*Math.min(r,i)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};qr.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)nu.cleanNode(this.nodes[t])},qr.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)nu.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},qr.prototype.markDirty=function(t){this.dirtyNodes.push(t)},qr.prototype.neighbors=function(t){var e=[],n=t.x,r=t.y,i=this.grid;return i[n-1]&&i[n-1][r]&&e.push(i[n-1][r]),i[n+1]&&i[n+1][r]&&e.push(i[n+1][r]),i[n]&&i[n][r-1]&&e.push(i[n][r-1]),i[n]&&i[n][r+1]&&e.push(i[n][r+1]),this.diagonal&&(i[n-1]&&i[n-1][r-1]&&e.push(i[n-1][r-1]),i[n+1]&&i[n+1][r-1]&&e.push(i[n+1][r-1]),i[n-1]&&i[n-1][r+1]&&e.push(i[n-1][r+1]),i[n+1]&&i[n+1][r+1]&&e.push(i[n+1][r+1])),e},qr.prototype.toString=function(){for(var t,e,n,r,i=[],o=this.grid,s=0,a=o.length;s<a;s++){for(t=[],n=0,r=(e=o[s]).length;n<r;n++)t.push(e[n].weight);i.push(t.join(\" \"))}return i.join(\"\\n\")},Gr.prototype.toString=function(){return\"[\"+this.x+\" \"+this.y+\"]\"},Gr.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?1.41421*this.weight:this.weight},Gr.prototype.isWall=function(){return 0===this.weight},Br.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t},remove:function(t){var e=this.content.indexOf(t),n=this.content.pop();e!==this.content.length-1&&(this.content[e]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var e=this.content[t];t>0;){var n=(t+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(e)<this.scoreFunction(r)))break;this.content[n]=e,this.content[t]=r,t=n}},bubbleUp:function(t){for(var e=this.content.length,n=this.content[t],r=this.scoreFunction(n);;){var i,o=t+1<<1,s=o-1,a=null;if(s<e){var u=this.content[s];(i=this.scoreFunction(u))<r&&(a=s)}if(o<e){var c=this.content[o];this.scoreFunction(c)<(null===a?r:i)&&(a=o)}if(null===a)break;this.content[t]=this.content[a],this.content[a]=n,t=a}}};var ru=function(t){return function(){return t}};jr.prototype={constructor:jr,insert:function(t,e){var n,r,i;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=Vr(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(i=r.R)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.R&&(Ur(this,n),n=(t=n).U),n.C=!1,r.C=!0,Yr(this,r)):(i=r.L)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.L&&(Yr(this,n),n=(t=n).U),n.C=!1,r.C=!0,Ur(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,i=t.U,o=t.L,s=t.R;if(n=o?s?Vr(s):o:s,i?i.L===t?i.L=n:i.R=n:this._=n,o&&s?(r=n.C,n.C=t.C,n.L=o,o.U=n,n!==s?(i=n.U,n.U=t.U,t=n.R,i.L=t,n.R=s,s.U=n):(n.U=i,i=n,t=n.R)):(r=t.C,t=n),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((e=i.R).C&&(e.C=!1,i.C=!0,Ur(this,i),e=i.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,Yr(this,e),e=i.R),e.C=i.C,i.C=e.R.C=!1,Ur(this,i),t=this._;break}}else if((e=i.L).C&&(e.C=!1,i.C=!0,Yr(this,i),e=i.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,Ur(this,e),e=i.L),e.C=i.C,i.C=e.L.C=!1,Yr(this,i),t=this._;break}e.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var iu,ou,su,au,uu,cu=[],hu=[],lu=1e-6,pu=1e-12;hi.prototype={constructor:hi,polygons:function(){var t=this.edges;return this.cells.map(function(e){var n=e.halfedges.map(function(n){return $r(e,t[n])});return n.data=e.site.data,n})},triangles:function(){var t=[],e=this.edges;return this.cells.forEach(function(n,r){if(o=(i=n.halfedges).length)for(var i,o,s,a=n.site,u=-1,c=e[i[o-1]],h=c.left===a?c.right:c.left;++u<o;)s=h,h=(c=e[i[u]]).left===a?c.right:c.left,s&&h&&r<s.index&&r<h.index&&ui(a,s,h)<0&&t.push([a.data,s.data,h.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,e,n){for(var r,i,o=this,s=o._found||0,a=o.cells.length;!(i=o.cells[s]);)if(++s>=a)return null;var u=t-i.site[0],c=e-i.site[1],h=u*u+c*c;do{i=o.cells[r=s],s=null,i.halfedges.forEach(function(n){var r=o.edges[n],a=r.left;if(a!==i.site&&a||(a=r.right)){var u=t-a[0],c=e-a[1],l=u*u+c*c;l<h&&(h=l,s=a.index)}})}while(null!==s);return o._found=r,null==n||h<=n*n?i.site:null}};var fu=function(){function t(t){return new hi(t.map(function(r,i){var o=[Math.round(e(r,i,t)/lu)*lu,Math.round(n(r,i,t)/lu)*lu];return o.index=i,o.data=r,o}),r)}var e=kr,n=zr,r=null;return t.polygons=function(e){return t(e).polygons()},t.links=function(e){return t(e).links()},t.triangles=function(e){return t(e).triangles()},t.x=function(n){return arguments.length?(e=\"function\"==typeof n?n:ru(+n),t):e},t.y=function(e){return arguments.length?(n=\"function\"==typeof e?e:ru(+e),t):n},t.extent=function(e){return arguments.length?(r=null==e?null:[[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]],t):r&&[[r[0][0],r[0][1]],[r[1][0],r[1][1]]]},t.size=function(e){return arguments.length?(r=null==e?null:[[0,0],[+e[0],+e[1]]],t):r&&[r[1][0]-r[0][0],r[1][1]-r[0][1]]},t},gu=Object.freeze({randomPosition:_i,randomPoint:mi,randomPolygon:vi,randomLineString:xi}),du=Object.freeze({getCluster:wi,clusterEach:bi,clusterReduce:Ii,createBins:Ni,applyFilter:Ci,propertiesContainsFilter:Si,filterProperties:Mi});\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,r=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;r=r<0?Math.max(n+r,0):Math.min(r,n);var i=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(i=i<0?Math.max(n+arguments[2],0):Math.min(i,n);r<i;)e[r]=t,++r;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var yu=function(){};yu.prototype.interfaces_=function(){return[]},yu.prototype.getClass=function(){return yu},yu.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var _u=function(){},mu=function(){},vu={MAX_VALUE:{configurable:!0}};mu.isNaN=function(t){return Number.isNaN(t)},mu.doubleToLongBits=function(t){return t},mu.longBitsToDouble=function(t){return t},mu.isInfinite=function(t){return!Number.isFinite(t)},vu.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(mu,vu);var xu=function(){},Eu=function(){},wu=function(){},bu=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},Iu={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};bu.prototype.setOrdinate=function(t,e){switch(t){case bu.X:this.x=e;break;case bu.Y:this.y=e;break;case bu.Z:this.z=e;break;default:throw new _u(\"Invalid ordinate index: \"+t)}},bu.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!yu.equalsWithTolerance(this.x,e.x,n)&&!!yu.equalsWithTolerance(this.y,e.y,n)}},bu.prototype.getOrdinate=function(t){switch(t){case bu.X:return this.x;case bu.Y:return this.y;case bu.Z:return this.z}throw new _u(\"Invalid ordinate index: \"+t)},bu.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||mu.isNaN(this.z))&&mu.isNaN(t.z)},bu.prototype.equals=function(t){return t instanceof bu&&this.equals2D(t)},bu.prototype.equalInZ=function(t,e){return yu.equalsWithTolerance(this.z,t.z,e)},bu.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},bu.prototype.clone=function(){},bu.prototype.copy=function(){return new bu(this)},bu.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},bu.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return Math.sqrt(e*e+n*n+r*r)},bu.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},bu.prototype.hashCode=function(){var t=17;return t=37*t+bu.hashCode(this.x),t=37*t+bu.hashCode(this.y)},bu.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},bu.prototype.interfaces_=function(){return[xu,Eu,Li]},bu.prototype.getClass=function(){return bu},bu.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=mu.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},Iu.DimensionalComparator.get=function(){return Nu},Iu.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},Iu.NULL_ORDINATE.get=function(){return mu.NaN},Iu.X.get=function(){return 0},Iu.Y.get=function(){return 1},Iu.Z.get=function(){return 2},Object.defineProperties(bu,Iu);var Nu=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new _u(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=e}};Nu.prototype.compare=function(t,e){var n=t,r=e,i=Nu.compare(n.x,r.x);if(0!==i)return i;var o=Nu.compare(n.y,r.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return Nu.compare(n.z,r.z)},Nu.prototype.interfaces_=function(){return[wu]},Nu.prototype.getClass=function(){return Nu},Nu.compare=function(t,e){return t<e?-1:t>e?1:mu.isNaN(t)?mu.isNaN(e)?0:-1:mu.isNaN(e)?1:0};var Cu=function(){};Cu.prototype.create=function(){},Cu.prototype.interfaces_=function(){return[]},Cu.prototype.getClass=function(){return Cu};var Su=function(){},Mu={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};Su.prototype.interfaces_=function(){return[]},Su.prototype.getClass=function(){return Su},Su.toLocationSymbol=function(t){switch(t){case Su.EXTERIOR:return\"e\";case Su.BOUNDARY:return\"b\";case Su.INTERIOR:return\"i\";case Su.NONE:return\"-\"}throw new _u(\"Unknown location value: \"+t)},Mu.INTERIOR.get=function(){return 0},Mu.BOUNDARY.get=function(){return 1},Mu.EXTERIOR.get=function(){return 2},Mu.NONE.get=function(){return-1},Object.defineProperties(Su,Mu);var Lu=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},Pu=function(){},Ou={LOG_10:{configurable:!0}};Pu.prototype.interfaces_=function(){return[]},Pu.prototype.getClass=function(){return Pu},Pu.log10=function(t){var e=Math.log(t);return mu.isInfinite(e)?e:mu.isNaN(e)?e:e/Pu.LOG_10},Pu.min=function(t,e,n,r){var i=t;return e<i&&(i=e),n<i&&(i=n),r<i&&(i=r),i},Pu.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],i=arguments[1],o=arguments[2];return r<i?i:r>o?o:r}},Pu.wrap=function(t,e){return t<0?e- -t%e:t%e},Pu.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=t;return e>r&&(r=e),n>r&&(r=n),r}if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=i;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},Pu.average=function(t,e){return(t+e)/2},Ou.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(Pu,Ou);var Ru=function(t){this.str=t};Ru.prototype.append=function(t){this.str+=t},Ru.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},Ru.prototype.toString=function(t){return this.str};var Tu=function(t){this.value=t};Tu.prototype.intValue=function(){return this.value},Tu.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},Tu.isNaN=function(t){return Number.isNaN(t)};var Au=function(){};Au.isWhitespace=function(t){return t<=32&&t>=0||127===t},Au.toUpperCase=function(t){return t.toUpperCase()};var Du=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var r=arguments[0];t.call(this,t.parse(r))}}else if(2===arguments.length){var i=arguments[0],o=arguments[1];this.init(i,o)}},Fu={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};Du.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},Du.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),r=Du.magnitude(n._hi),i=Du.TEN.pow(r);(n=n.divide(i)).gt(Du.TEN)?(n=n.divide(Du.TEN),r+=1):n.lt(Du.ONE)&&(n=n.multiply(Du.TEN),r-=1);for(var o=r+1,s=new Ru,a=Du.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(\".\");var c=Math.trunc(n._hi);if(c<0)break;var h=!1,l=0;c>9?(h=!0,l=\"9\"):l=\"0\"+c,s.append(l),n=n.subtract(Du.valueOf(c)).multiply(Du.TEN),h&&n.selfAdd(Du.TEN);var p=!0,f=Du.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(p=!1),!p)break}return e[0]=r,s.toString()},Du.prototype.sqr=function(){return this.multiply(this)},Du.prototype.doubleValue=function(){return this._hi+this._lo},Du.prototype.subtract=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},Du.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},Du.prototype.isZero=function(){return 0===this._hi&&0===this._lo},Du.prototype.selfSubtract=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},Du.prototype.getSpecialNumberString=function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},Du.prototype.min=function(t){return this.le(t)?this:t},Du.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,c=null,h=null,l=null;return u=this._hi/n,c=Du.SPLIT*u,i=c-u,l=Du.SPLIT*n,i=c-i,o=u-i,s=l-n,h=u*n,s=l-s,a=n-s,l=i*s-h+i*a+o*s+o*a,c=(this._hi-h-l+this._lo-u*r)/n,l=u+c,this._hi=l,this._lo=u-l+c,this}},Du.prototype.dump=function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"},Du.prototype.divide=function(){if(arguments[0]instanceof Du){var t=arguments[0],e=null,n=null,r=null,i=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=Du.SPLIT*o)-(e=s-o)),u=e*(r=(u=Du.SPLIT*t._hi)-(r=u-t._hi))-(a=o*t._hi)+e*(i=t._hi-r)+n*r+n*i,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new Du(u=o+s,o-u+s)}if(\"number\"==typeof arguments[0]){var c=arguments[0];return mu.isNaN(c)?Du.createNaN():Du.copy(this).selfDivide(c,0)}},Du.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},Du.prototype.pow=function(t){if(0===t)return Du.valueOf(1);var e=new Du(this),n=Du.valueOf(1),r=Math.abs(t);if(r>1)for(;r>0;)r%2==1&&n.selfMultiply(e),(r/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},Du.prototype.ceil=function(){if(this.isNaN())return Du.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new Du(t,e)},Du.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},Du.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},Du.prototype.setValue=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},Du.prototype.max=function(t){return this.ge(t)?this:t},Du.prototype.sqrt=function(){if(this.isZero())return Du.valueOf(0);if(this.isNegative())return Du.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=Du.valueOf(e),r=this.subtract(n.sqr())._hi*(.5*t);return n.add(r)},Du.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,r=null,i=null,o=null,s=null,a=null;return i=this._hi+e,s=i-this._hi,o=i-s,o=e-s+(this._hi-o),a=o+this._lo,n=i+a,r=a+(i-n),this._hi=n+r,this._lo=r+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],c=arguments[1],h=null,l=null,p=null,f=null,g=null,d=null,y=null;f=this._hi+u,l=this._lo+c,g=f-(d=f-this._hi),p=l-(y=l-this._lo);var _=(h=f+(d=(g=u-d+(this._hi-g))+l))+(d=(p=c-y+(this._lo-p))+(d+(f-h))),m=d+(h-_);return this._hi=_,this._lo=m,this}},Du.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,c=null;i=(u=Du.SPLIT*this._hi)-this._hi,c=Du.SPLIT*n,i=u-i,o=this._hi-i,s=c-n;var h=(u=this._hi*n)+(c=i*(s=c-s)-u+i*(a=n-s)+o*s+o*a+(this._hi*r+this._lo*n)),l=c+(i=u-h);return this._hi=h,this._lo=l,this}},Du.prototype.selfSqr=function(){return this.selfMultiply(this)},Du.prototype.floor=function(){if(this.isNaN())return Du.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new Du(t,e)},Du.prototype.negate=function(){return this.isNaN()?this:new Du(-this._hi,-this._lo)},Du.prototype.clone=function(){},Du.prototype.multiply=function(){if(arguments[0]instanceof Du){var t=arguments[0];return t.isNaN()?Du.createNaN():Du.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return mu.isNaN(e)?Du.createNaN():Du.copy(this).selfMultiply(e,0)}},Du.prototype.isNaN=function(){return mu.isNaN(this._hi)},Du.prototype.intValue=function(){return Math.trunc(this._hi)},Du.prototype.toString=function(){var t=Du.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},Du.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),r=e[0]+1,i=n;if(\".\"===n.charAt(0))i=\"0\"+n;else if(r<0)i=\"0.\"+Du.stringOfChar(\"0\",-r)+n;else if(-1===n.indexOf(\".\")){var o=r-n.length;i=n+Du.stringOfChar(\"0\",o)+\".0\"}return this.isNegative()?\"-\"+i:i},Du.prototype.reciprocal=function(){var t=null,e=null,n=null,r=null,i=null,o=null,s=null,a=null;e=(i=1/this._hi)-(t=(o=Du.SPLIT*i)-(t=o-i)),n=(a=Du.SPLIT*this._hi)-this._hi;var u=i+(o=(1-(s=i*this._hi)-(a=t*(n=a-n)-s+t*(r=this._hi-n)+e*n+e*r)-i*this._lo)/this._hi);return new Du(u,i-u+o)},Du.prototype.toSciNotation=function(){if(this.isZero())return Du.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),r=Du.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new Error(\"Found leading zero: \"+n);var i=\"\";n.length>1&&(i=n.substring(1));var o=n.charAt(0)+\".\"+i;return this.isNegative()?\"-\"+o+r:o+r},Du.prototype.abs=function(){return this.isNaN()?Du.NaN:this.isNegative()?this.negate():new Du(this)},Du.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},Du.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},Du.prototype.add=function(){if(arguments[0]instanceof Du){var t=arguments[0];return Du.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return Du.copy(this).selfAdd(e)}},Du.prototype.init=function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof Du){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._hi=n,this._lo=r}},Du.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},Du.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},Du.prototype.trunc=function(){return this.isNaN()?Du.NaN:this.isPositive()?this.floor():this.ceil()},Du.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},Du.prototype.interfaces_=function(){return[Li,xu,Eu]},Du.prototype.getClass=function(){return Du},Du.sqr=function(t){return Du.valueOf(t).selfMultiply(t)},Du.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return Du.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new Du(e)}},Du.sqrt=function(t){return Du.valueOf(t).sqrt()},Du.parse=function(t){for(var e=0,n=t.length;Au.isWhitespace(t.charAt(e));)e++;var r=!1;if(e<n){var i=t.charAt(e);\"-\"!==i&&\"+\"!==i||(e++,\"-\"===i&&(r=!0))}for(var o=new Du,s=0,a=0,u=0;!(e>=n);){var c=t.charAt(e);if(e++,Au.isDigit(c)){var h=c-\"0\";o.selfMultiply(Du.TEN),o.selfAdd(h),s++}else{if(\".\"!==c){if(\"e\"===c||\"E\"===c){var l=t.substring(e);try{u=Tu.parseInt(l)}catch(e){throw e instanceof Error?new Error(\"Invalid exponent \"+l+\" in string \"+t):e}break}throw new Error(\"Unexpected character '\"+c+\"' at position \"+e+\" in string \"+t)}a=s}}var p=o,f=s-a-u;if(0===f)p=o;else if(f>0){var g=Du.TEN.pow(f);p=o.divide(g)}else if(f<0){var d=Du.TEN.pow(-f);p=o.multiply(d)}return r?p.negate():p},Du.createNaN=function(){return new Du(mu.NaN,mu.NaN)},Du.copy=function(t){return new Du(t)},Du.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),r=Math.trunc(Math.floor(n));return 10*Math.pow(10,r)<=e&&(r+=1),r},Du.stringOfChar=function(t,e){for(var n=new Ru,r=0;r<e;r++)n.append(t);return n.toString()},Fu.PI.get=function(){return new Du(3.141592653589793,1.2246467991473532e-16)},Fu.TWO_PI.get=function(){return new Du(6.283185307179586,2.4492935982947064e-16)},Fu.PI_2.get=function(){return new Du(1.5707963267948966,6.123233995736766e-17)},Fu.E.get=function(){return new Du(2.718281828459045,1.4456468917292502e-16)},Fu.NaN.get=function(){return new Du(mu.NaN,mu.NaN)},Fu.EPS.get=function(){return 1.23259516440783e-32},Fu.SPLIT.get=function(){return 134217729},Fu.MAX_PRINT_DIGITS.get=function(){return 32},Fu.TEN.get=function(){return Du.valueOf(10)},Fu.ONE.get=function(){return Du.valueOf(1)},Fu.SCI_NOT_EXPONENT_CHAR.get=function(){return\"E\"},Fu.SCI_NOT_ZERO.get=function(){return\"0.0E0\"},Object.defineProperties(Du,Fu);var qu=function(){},Gu={DP_SAFE_EPSILON:{configurable:!0}};qu.prototype.interfaces_=function(){return[]},qu.prototype.getClass=function(){return qu},qu.orientationIndex=function(t,e,n){var r=qu.orientationIndexFilter(t,e,n);if(r<=1)return r;var i=Du.valueOf(e.x).selfAdd(-t.x),o=Du.valueOf(e.y).selfAdd(-t.y),s=Du.valueOf(n.x).selfAdd(-e.x),a=Du.valueOf(n.y).selfAdd(-e.y);return i.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},qu.signOfDet2x2=function(t,e,n,r){return t.multiply(r).selfSubtract(e.multiply(n)).signum()},qu.intersection=function(t,e,n,r){var i=Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(Du.valueOf(e.x).selfSubtract(t.x)),o=Du.valueOf(r.x).selfSubtract(n.x).selfMultiply(Du.valueOf(e.y).selfSubtract(t.y)),s=i.subtract(o),a=Du.valueOf(r.x).selfSubtract(n.x).selfMultiply(Du.valueOf(t.y).selfSubtract(n.y)),u=Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(Du.valueOf(t.x).selfSubtract(n.x)),c=a.subtract(u).selfDivide(s).doubleValue(),h=Du.valueOf(t.x).selfAdd(Du.valueOf(e.x).selfSubtract(t.x).selfMultiply(c)).doubleValue(),l=Du.valueOf(e.x).selfSubtract(t.x).selfMultiply(Du.valueOf(t.y).selfSubtract(n.y)),p=Du.valueOf(e.y).selfSubtract(t.y).selfMultiply(Du.valueOf(t.x).selfSubtract(n.x)),f=l.subtract(p).selfDivide(s).doubleValue(),g=Du.valueOf(n.y).selfAdd(Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new bu(h,g)},qu.orientationIndexFilter=function(t,e,n){var r=null,i=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=i-o;if(i>0){if(o<=0)return qu.signum(s);r=i+o}else{if(!(i<0))return qu.signum(s);if(o>=0)return qu.signum(s);r=-i-o}var a=qu.DP_SAFE_EPSILON*r;return s>=a||-s>=a?qu.signum(s):2},qu.signum=function(t){return t>0?1:t<0?-1:0},Gu.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(qu,Gu);var Bu=function(){},ku={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};ku.X.get=function(){return 0},ku.Y.get=function(){return 1},ku.Z.get=function(){return 2},ku.M.get=function(){return 3},Bu.prototype.setOrdinate=function(t,e,n){},Bu.prototype.size=function(){},Bu.prototype.getOrdinate=function(t,e){},Bu.prototype.getCoordinate=function(){},Bu.prototype.getCoordinateCopy=function(t){},Bu.prototype.getDimension=function(){},Bu.prototype.getX=function(t){},Bu.prototype.clone=function(){},Bu.prototype.expandEnvelope=function(t){},Bu.prototype.copy=function(){},Bu.prototype.getY=function(t){},Bu.prototype.toCoordinateArray=function(){},Bu.prototype.interfaces_=function(){return[Eu]},Bu.prototype.getClass=function(){return Bu},Object.defineProperties(Bu,ku);var zu=function(){},ju=function(t){function e(){t.call(this,\"Projective point not representable on the Cartesian plane.\")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(zu),Xu=function(){};Xu.arraycopy=function(t,e,n,r,i){for(var o=0,s=e;s<e+i;s++)n[r+o]=t[s],o++},Xu.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]};var Uu=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],r=arguments[1];this.x=n,this.y=r,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var i=arguments[0],o=arguments[1];this.x=i.y*o.w-o.y*i.w,this.y=o.x*i.w-i.x*o.w,this.w=i.x*o.y-o.x*i.y}else if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],c=arguments[1],h=arguments[2];this.x=u,this.y=c,this.w=h}else if(4===arguments.length){var l=arguments[0],p=arguments[1],f=arguments[2],g=arguments[3],d=l.y-p.y,y=p.x-l.x,_=l.x*p.y-p.x*l.y,m=f.y-g.y,v=g.x-f.x,x=f.x*g.y-g.x*f.y;this.x=y*x-v*_,this.y=m*_-d*x,this.w=d*v-m*y}};Uu.prototype.getY=function(){var t=this.y/this.w;if(mu.isNaN(t)||mu.isInfinite(t))throw new ju;return t},Uu.prototype.getX=function(){var t=this.x/this.w;if(mu.isNaN(t)||mu.isInfinite(t))throw new ju;return t},Uu.prototype.getCoordinate=function(){var t=new bu;return t.x=this.getX(),t.y=this.getY(),t},Uu.prototype.interfaces_=function(){return[]},Uu.prototype.getClass=function(){return Uu},Uu.intersection=function(t,e,n,r){var i=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-r.y,u=r.x-n.x,c=n.x*r.y-r.x*n.y,h=i*u-a*o,l=(o*c-u*s)/h,p=(a*s-i*c)/h;if(mu.isNaN(l)||mu.isInfinite(l)||mu.isNaN(p)||mu.isInfinite(p))throw new ju;return new bu(l,p)};var Yu=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof bu){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.init(r.x,i.x,r.y,i.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},Vu={serialVersionUID:{configurable:!0}};Yu.prototype.getArea=function(){return this.getWidth()*this.getHeight()},Yu.prototype.equals=function(t){if(!(t instanceof Yu))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},Yu.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new Yu;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,r=this._maxx<t._maxx?this._maxx:t._maxx,i=this._maxy<t._maxy?this._maxy:t._maxy;return new Yu(e,r,n,i)},Yu.prototype.isNull=function(){return this._maxx<this._minx},Yu.prototype.getMaxX=function(){return this._maxx},Yu.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof Yu){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&r>=this._miny&&r<=this._maxy)}},Yu.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof Yu){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof bu){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||r>this._maxy||r<this._miny)}},Yu.prototype.getMinY=function(){return this._miny},Yu.prototype.getMinX=function(){return this._minx},Yu.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof Yu){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=r,this._maxy=r):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}},Yu.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},Yu.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},Yu.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},Yu.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},Yu.prototype.toString=function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"},Yu.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},Yu.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},Yu.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},Yu.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},Yu.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof Yu){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof bu){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.covers(n,r)}},Yu.prototype.centre=function(){return this.isNull()?null:new bu((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},Yu.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Yu){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.init(n.x,r.x,n.y,r.y)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];i<o?(this._minx=i,this._maxx=o):(this._minx=o,this._maxx=i),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},Yu.prototype.getMaxY=function(){return this._maxy},Yu.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},Yu.prototype.hashCode=function(){var t=17;return t=37*t+bu.hashCode(this._minx),t=37*t+bu.hashCode(this._maxx),t=37*t+bu.hashCode(this._miny),t=37*t+bu.hashCode(this._maxy)},Yu.prototype.interfaces_=function(){return[xu,Li]},Yu.prototype.getClass=function(){return Yu},Yu.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),c=Math.min(r.x,i.x),h=Math.max(r.x,i.x);return!(c>u)&&(!(h<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),c=Math.min(r.y,i.y),h=Math.max(r.y,i.y),!(c>u)&&!(h<a)))}},Vu.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(Yu,Vu);var Hu={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/},Wu=function(t){this.geometryFactory=t||new _h};Wu.prototype.read=function(t){var e,n,r;t=t.replace(/[\\n\\r]/g,\" \");var i=Hu.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&((i=Hu.emptyTypeStr.exec(t))[2]=void 0),i&&(n=i[1].toLowerCase(),r=i[2],Zu[n]&&(e=Zu[n].apply(this,[r]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},Wu.prototype.write=function(t){return this.extractGeometry(t)},Wu.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!Ju[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+\" EMPTY\":n+\"(\"+Ju[e].apply(this,[t])+\")\"};var Ju={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return Ju.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(\"(\"+Ju.point.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Ju.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Ju.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(\"(\"+Ju.linestring.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+Ju.linestring.apply(this,[t._shell])+\")\");for(var n=0,r=t._holes.length;n<r;++n)e.push(\"(\"+Ju.linestring.apply(this,[t._holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(\"(\"+Ju.polygon.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(\",\")}},Zu={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(Hu.spaces);return this.geometryFactory.createPoint(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,\"$1\"),r.push(Zu.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(r)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Hu.spaces),r.push(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(r)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Hu.spaces),r.push(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(r)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(Hu.parenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,\"$1\"),r.push(Zu.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(r)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,r,i,o=t.trim().split(Hu.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(Hu.trimParens,\"$1\"),n=Zu.linestring.apply(this,[e]),r=this.geometryFactory.createLinearRing(n._points),0===a?i=r:s.push(r);return this.geometryFactory.createPolygon(i,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(Hu.doubleParenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,\"$1\"),r.push(Zu.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(r)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\")).trim().split(\"|\"),n=[],r=0,i=e.length;r<i;++r)n.push(this.read(e[r]));return this.geometryFactory.createGeometryCollection(n)}},Ku=function(t){this.parser=new Wu(t)};Ku.prototype.write=function(t){return this.parser.write(t)},Ku.toLineString=function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"};var Qu=function(t){function e(e){t.call(this,e),this.name=\"RuntimeException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),$u=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qu),tc=function(){};tc.prototype.interfaces_=function(){return[]},tc.prototype.getClass=function(){return tc},tc.shouldNeverReachHere=function(){if(0===arguments.length)tc.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new $u(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},tc.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],tc.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new $u:new $u(e)},tc.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],tc.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new $u(\"Expected \"+t+\" but encountered \"+e+(null!==n?\": \"+n:\"\"))};var ec=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new bu,this._intPt[1]=new bu,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},nc={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};ec.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},ec.prototype.getTopologySummary=function(){var t=new Ru;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},ec.prototype.computeIntersection=function(t,e,n,r){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=r,this._result=this.computeIntersect(t,e,n,r)},ec.prototype.getIntersectionNum=function(){return this._result},ec.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},ec.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},ec.prototype.setPrecisionModel=function(t){this._precisionModel=t},ec.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},ec.prototype.getIntersection=function(t){return this._intPt[t]},ec.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},ec.prototype.hasIntersection=function(){return this._result!==ec.NO_INTERSECTION},ec.prototype.getEdgeDistance=function(t,e){return ec.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},ec.prototype.isCollinear=function(){return this._result===ec.COLLINEAR_INTERSECTION},ec.prototype.toString=function(){return Ku.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Ku.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},ec.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},ec.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},ec.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},ec.prototype.interfaces_=function(){return[]},ec.prototype.getClass=function(){return ec},ec.computeEdgeDistance=function(t,e,n){var r=Math.abs(n.x-e.x),i=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=r>i?r:i;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=r>i?s:a)||t.equals(e)||(o=Math.max(s,a))}return tc.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o},ec.nonRobustComputeEdgeDistance=function(t,e,n){var r=t.x-e.x,i=t.y-e.y,o=Math.sqrt(r*r+i*i);return tc.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o},nc.DONT_INTERSECT.get=function(){return 0},nc.DO_INTERSECT.get=function(){return 1},nc.COLLINEAR.get=function(){return 2},nc.NO_INTERSECTION.get=function(){return 0},nc.POINT_INTERSECTION.get=function(){return 1},nc.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(ec,nc);var rc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new Yu(this._inputLines[0][0],this._inputLines[0][1]),n=new Yu(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2];if(this._isProper=!1,Yu.intersects(n,r,e)&&0===sc.orientationIndex(n,r,e)&&0===sc.orientationIndex(r,n,e))return this._isProper=!0,(e.equals(n)||e.equals(r))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,r,i){i.x=this.smallestInAbsValue(t.x,e.x,n.x,r.x),i.y=this.smallestInAbsValue(t.y,e.y,n.y,r.y),t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.safeHCoordinateIntersection=function(t,n,r,i){var o=null;try{o=Uu.intersection(t,n,r,i)}catch(s){if(!(s instanceof ju))throw s;o=e.nearestEndpoint(t,n,r,i)}return o},e.prototype.intersection=function(t,n,r,i){var o=this.intersectionWithNormalization(t,n,r,i);return this.isInSegmentEnvelopes(o)||(o=new bu(e.nearestEndpoint(t,n,r,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,r){var i=t,o=Math.abs(i);return Math.abs(e)<o&&(i=e,o=Math.abs(e)),Math.abs(n)<o&&(i=n,o=Math.abs(n)),Math.abs(r)<o&&(i=r),i},e.prototype.checkDD=function(t,e,n,r,i){var o=qu.intersection(t,e,n,r),s=this.isInSegmentEnvelopes(o);Xu.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),i.distance(o)>1e-4&&Xu.out.println(\"Distance = \"+i.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,r){var i=new bu(t),o=new bu(e),s=new bu(n),a=new bu(r),u=new bu;this.normalizeToEnvCentre(i,o,s,a,u);var c=this.safeHCoordinateIntersection(i,o,s,a);return c.x+=u.x,c.y+=u.y,c},e.prototype.computeCollinearIntersection=function(e,n,r,i){var o=Yu.intersects(e,n,r),s=Yu.intersects(e,n,i),a=Yu.intersects(r,i,e),u=Yu.intersects(r,i,n);return o&&s?(this._intPt[0]=r,this._intPt[1]=i,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,r,i){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,c=n.x<r.x?n.x:r.x,h=n.y<r.y?n.y:r.y,l=n.x>r.x?n.x:r.x,p=n.y>r.y?n.y:r.y,f=((o>c?o:c)+(a<l?a:l))/2,g=((s>h?s:h)+(u<p?u:p))/2;i.x=f,i.y=g,t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.computeIntersect=function(e,n,r,i){if(this._isProper=!1,!Yu.intersects(e,n,r,i))return t.NO_INTERSECTION;var o=sc.orientationIndex(e,n,r),s=sc.orientationIndex(e,n,i);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=sc.orientationIndex(r,i,e),u=sc.orientationIndex(r,i,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,r,i):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(r)||e.equals2D(i)?this._intPt[0]=e:n.equals2D(r)||n.equals2D(i)?this._intPt[0]=n:0===o?this._intPt[0]=new bu(r):0===s?this._intPt[0]=new bu(i):0===a?this._intPt[0]=new bu(e):0===u&&(this._intPt[0]=new bu(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,r,i)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,r){var i=t,o=sc.distancePointLine(t,n,r),s=sc.distancePointLine(e,n,r);return s<o&&(o=s,i=e),(s=sc.distancePointLine(n,t,e))<o&&(o=s,i=n),(s=sc.distancePointLine(r,t,e))<o&&(o=s,i=r),i},e}(ec),ic=function(){};ic.prototype.interfaces_=function(){return[]},ic.prototype.getClass=function(){return ic},ic.orientationIndex=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ic.signOfDet2x2(r,i,o,s)},ic.signOfDet2x2=function(t,e,n,r){var i=null,o=null,s=null;if(i=1,0===t||0===r)return 0===e||0===n?0:e>0?n>0?-i:i:n>0?i:-i;if(0===e||0===n)return r>0?t>0?i:-i:t>0?-i:i;if(e>0?r>0?e<=r||(i=-i,o=t,t=n,n=o,o=e,e=r,r=o):e<=-r?(i=-i,n=-n,r=-r):(o=t,t=-n,n=o,o=e,e=-r,r=o):r>0?-e<=r?(i=-i,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=r,r=o):e>=r?(t=-t,e=-e,n=-n,r=-r):(i=-i,o=-t,t=-n,n=o,o=-e,e=-r,r=o),t>0){if(!(n>0))return i;if(!(t<=n))return i}else{if(n>0)return-i;if(!(t>=n))return-i;i=-i,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(r-=s*e)<0)return-i;if(r>e)return i;if(t>n+n){if(e<r+r)return i}else{if(e>r+r)return-i;n=t-n,r=e-r,i=-i}if(0===r)return 0===n?0:-i;if(0===n)return i;if(s=Math.floor(t/n),t-=s*n,(e-=s*r)<0)return i;if(e>r)return-i;if(n>t+t){if(r<e+e)return-i}else{if(r>e+e)return i;t=n-t,e=r-e,i=-i}if(0===e)return 0===t?0:i;if(0===t)return-i}};var oc=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};oc.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,r=e.x;return n>r&&(n=e.x,r=t.x),this._p.x>=n&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var i=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ic.signOfDet2x2(i,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},oc.prototype.isPointInPolygon=function(){return this.getLocation()!==Su.EXTERIOR},oc.prototype.getLocation=function(){return this._isPointOnSegment?Su.BOUNDARY:this._crossingCount%2==1?Su.INTERIOR:Su.EXTERIOR},oc.prototype.isOnSegment=function(){return this._isPointOnSegment},oc.prototype.interfaces_=function(){return[]},oc.prototype.getClass=function(){return oc},oc.locatePointInRing=function(){if(arguments[0]instanceof bu&&Lu(arguments[1],Bu)){for(var t=arguments[0],e=arguments[1],n=new oc(t),r=new bu,i=new bu,o=1;o<e.size();o++)if(e.getCoordinate(o,r),e.getCoordinate(o-1,i),n.countSegment(r,i),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof bu&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new oc(s),c=1;c<a.length;c++){var h=a[c],l=a[c-1];if(u.countSegment(h,l),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var sc=function(){},ac={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};sc.prototype.interfaces_=function(){return[]},sc.prototype.getClass=function(){return sc},sc.orientationIndex=function(t,e,n){return qu.orientationIndex(t,e,n)},sc.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,r=1;r<t.length-1;r++){var i=t[r].x-n,o=t[r+1].y;e+=i*(t[r-1].y-o)}return e/2}if(Lu(arguments[0],Bu)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new bu,c=new bu,h=new bu;s.getCoordinate(0,c),s.getCoordinate(1,h);var l=c.x;h.x-=l;for(var p=0,f=1;f<a-1;f++)u.y=c.y,c.x=h.x,c.y=h.y,s.getCoordinate(f+1,h),h.x-=l,p+=c.x*(u.y-h.y);return p/2}},sc.distanceLineLine=function(t,e,n,r){if(t.equals(e))return sc.distancePointLine(t,n,r);if(n.equals(r))return sc.distancePointLine(r,t,e);var i=!1;if(Yu.intersects(t,e,n,r)){var o=(e.x-t.x)*(r.y-n.y)-(e.y-t.y)*(r.x-n.x);if(0===o)i=!0;else{var s=(t.y-n.y)*(r.x-n.x)-(t.x-n.x)*(r.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(i=!0)}}else i=!0;return i?Pu.min(sc.distancePointLine(t,n,r),sc.distancePointLine(e,n,r),sc.distancePointLine(n,t,e),sc.distancePointLine(r,t,e)):0},sc.isPointInRing=function(t,e){return sc.locatePointInRing(t,e)!==Su.EXTERIOR},sc.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,r=new bu;t.getCoordinate(0,r);for(var i=r.x,o=r.y,s=1;s<e;s++){t.getCoordinate(s,r);var a=r.x,u=r.y,c=a-i,h=u-o;n+=Math.sqrt(c*c+h*h),i=a,o=u}return n},sc.isCCW=function(t){var e=t.length-1;if(e<3)throw new _u(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],r=0,i=1;i<=e;i++){var o=t[i];o.y>n.y&&(n=o,r=i)}var s=r;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==r);var a=r;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==r);var u=t[s],c=t[a];if(u.equals2D(n)||c.equals2D(n)||u.equals2D(c))return!1;var h=sc.computeOrientation(u,n,c),l=!1;return l=0===h?u.x>c.x:h>0,l},sc.locatePointInRing=function(t,e){return oc.locatePointInRing(t,e)},sc.distancePointLinePerpendicular=function(t,e,n){var r=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),i=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/r;return Math.abs(i)*Math.sqrt(r)},sc.computeOrientation=function(t,e,n){return sc.orientationIndex(t,e,n)},sc.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new _u(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),r=0;r<e.length-1;r++){var i=sc.distancePointLine(t,e[r],e[r+1]);i<n&&(n=i)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),c=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(c<=0)return o.distance(s);if(c>=1)return o.distance(a);var h=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(h)*Math.sqrt(u)}},sc.isOnLine=function(t,e){for(var n=new rc,r=1;r<e.length;r++){var i=e[r-1],o=e[r];if(n.computeIntersection(t,i,o),n.hasIntersection())return!0}return!1},ac.CLOCKWISE.get=function(){return-1},ac.RIGHT.get=function(){return sc.CLOCKWISE},ac.COUNTERCLOCKWISE.get=function(){return 1},ac.LEFT.get=function(){return sc.COUNTERCLOCKWISE},ac.COLLINEAR.get=function(){return 0},ac.STRAIGHT.get=function(){return sc.COLLINEAR},Object.defineProperties(sc,ac);var uc=function(){};uc.prototype.filter=function(t){},uc.prototype.interfaces_=function(){return[]},uc.prototype.getClass=function(){return uc};var cc=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},hc={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};cc.prototype.isGeometryCollection=function(){return this.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION},cc.prototype.getFactory=function(){return this._factory},cc.prototype.getGeometryN=function(t){return this},cc.prototype.getArea=function(){return 0},cc.prototype.isRectangle=function(){return!1},cc.prototype.equals=function(){if(arguments[0]instanceof cc){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof cc))return!1;var n=e;return this.equalsExact(n)}},cc.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},cc.prototype.geometryChanged=function(){this.apply(cc.geometryChangedFilter)},cc.prototype.geometryChangedAction=function(){this._envelope=null},cc.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},cc.prototype.getLength=function(){return 0},cc.prototype.getNumGeometries=function(){return 1},cc.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,r)}},cc.prototype.getUserData=function(){return this._userData},cc.prototype.getSRID=function(){return this._SRID},cc.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},cc.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION)throw new _u(\"This method does not support GeometryCollection arguments\")},cc.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},cc.prototype.norm=function(){var t=this.copy();return t.normalize(),t},cc.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},cc.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new Yu(this._envelope)},cc.prototype.setSRID=function(t){this._SRID=t},cc.prototype.setUserData=function(t){this._userData=t},cc.prototype.compare=function(t,e){for(var n=t.iterator(),r=e.iterator();n.hasNext()&&r.hasNext();){var i=n.next(),o=r.next(),s=i.compareTo(o);if(0!==s)return s}return n.hasNext()?1:r.hasNext()?-1:0},cc.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},cc.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===cc.SORTINDEX_MULTIPOINT||this.getSortIndex()===cc.SORTINDEX_MULTILINESTRING||this.getSortIndex()===cc.SORTINDEX_MULTIPOLYGON},cc.prototype.interfaces_=function(){return[Eu,xu,Li]},cc.prototype.getClass=function(){return cc},cc.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},cc.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},hc.serialVersionUID.get=function(){return 0x799ea46522854c00},hc.SORTINDEX_POINT.get=function(){return 0},hc.SORTINDEX_MULTIPOINT.get=function(){return 1},hc.SORTINDEX_LINESTRING.get=function(){return 2},hc.SORTINDEX_LINEARRING.get=function(){return 3},hc.SORTINDEX_MULTILINESTRING.get=function(){return 4},hc.SORTINDEX_POLYGON.get=function(){return 5},hc.SORTINDEX_MULTIPOLYGON.get=function(){return 6},hc.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},hc.geometryChangedFilter.get=function(){return lc},Object.defineProperties(cc,hc);var lc=function(){};lc.interfaces_=function(){return[uc]},lc.filter=function(t){t.geometryChangedAction()};var pc=function(){};pc.prototype.filter=function(t){},pc.prototype.interfaces_=function(){return[]},pc.prototype.getClass=function(){return pc};var fc=function(){},gc={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};fc.prototype.isInBoundary=function(t){},fc.prototype.interfaces_=function(){return[]},fc.prototype.getClass=function(){return fc},gc.Mod2BoundaryNodeRule.get=function(){return dc},gc.EndPointBoundaryNodeRule.get=function(){return yc},gc.MultiValentEndPointBoundaryNodeRule.get=function(){return _c},gc.MonoValentEndPointBoundaryNodeRule.get=function(){return mc},gc.MOD2_BOUNDARY_RULE.get=function(){return new dc},gc.ENDPOINT_BOUNDARY_RULE.get=function(){return new yc},gc.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new _c},gc.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mc},gc.OGC_SFS_BOUNDARY_RULE.get=function(){return fc.MOD2_BOUNDARY_RULE},Object.defineProperties(fc,gc);var dc=function(){};dc.prototype.isInBoundary=function(t){return t%2==1},dc.prototype.interfaces_=function(){return[fc]},dc.prototype.getClass=function(){return dc};var yc=function(){};yc.prototype.isInBoundary=function(t){return t>0},yc.prototype.interfaces_=function(){return[fc]},yc.prototype.getClass=function(){return yc};var _c=function(){};_c.prototype.isInBoundary=function(t){return t>1},_c.prototype.interfaces_=function(){return[fc]},_c.prototype.getClass=function(){return _c};var mc=function(){};mc.prototype.isInBoundary=function(t){return 1===t},mc.prototype.interfaces_=function(){return[fc]},mc.prototype.getClass=function(){return mc};var vc=function(){};vc.prototype.add=function(){},vc.prototype.addAll=function(){},vc.prototype.isEmpty=function(){},vc.prototype.iterator=function(){},vc.prototype.size=function(){},vc.prototype.toArray=function(){},vc.prototype.remove=function(){};var xc=function(t){function e(e){t.call(this),this.message=e||\"\"}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={name:{configurable:!0}};return n.name.get=function(){return\"IndexOutOfBoundsException\"},Object.defineProperties(e,n),e}(Error),Ec=function(){};Ec.prototype.hasNext=function(){},Ec.prototype.next=function(){},Ec.prototype.remove=function(){};var wc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(vc);(Pi.prototype=new Error).name=\"NoSuchElementException\";var bc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,vc]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ic(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new xc;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,r=this.array_.length;n<r;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(wc),Ic=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new Pi;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Ec),Nc=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.ensureCapacity(n.length),this.add(n,r)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],r=!1,i=e.iterator();i.hasNext();)this.add(i.next(),n),r=!0;return r}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var n=arguments[0],r=arguments[1];return this.add(n,r,!0),!0}if(arguments[0]instanceof bu&&\"boolean\"==typeof arguments[1]){var i=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(i))return null}t.prototype.add.call(this,i)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var c=0;c<a.length;c++)this.add(a[c],u);else for(var h=a.length-1;h>=0;h--)this.add(a[h],u);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(l>0){if(this.get(l-1).equals2D(p))return null}if(l<f){if(this.get(l).equals2D(p))return null}}}t.prototype.add.call(this,l,p)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new bu(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(bc),Cc=function(){},Sc={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};Sc.ForwardComparator.get=function(){return Mc},Sc.BidirectionalComparator.get=function(){return Lc},Sc.coordArrayType.get=function(){return new Array(0).fill(null)},Cc.prototype.interfaces_=function(){return[]},Cc.prototype.getClass=function(){return Cc},Cc.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Cc.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(Cc.indexOf(r,e)<0)return r}return null},Cc.scroll=function(t,e){var n=Cc.indexOf(e,t);if(n<0)return null;var r=new Array(t.length).fill(null);Xu.arraycopy(t,n,r,0,t.length-n),Xu.arraycopy(t,0,r,t.length-n,n),Xu.arraycopy(r,0,t,0,t.length)},Cc.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(r===i)return!0;if(null===r||null===i)return!1;if(r.length!==i.length)return!1;for(var s=0;s<r.length;s++)if(0!==o.compare(r[s],i[s]))return!1;return!0}},Cc.intersection=function(t,e){for(var n=new Nc,r=0;r<t.length;r++)e.intersects(t[r])&&n.add(t[r],!0);return n.toCoordinateArray()},Cc.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Cc.removeRepeatedPoints=function(t){if(!Cc.hasRepeatedPoints(t))return t;return new Nc(t,!1).toCoordinateArray()},Cc.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),r=0;r<=n;r++){var i=t[r];t[r]=t[e-r],t[e-r]=i}},Cc.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var r=new Array(e).fill(null);if(0===e)return r;for(var i=0,o=0;o<t.length;o++)null!==t[o]&&(r[i++]=t[o]);return r},Cc.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new bu(t[n]);return e}if(5===arguments.length)for(var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new bu(r[i+u])},Cc.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[t.length-n-1];if(0!==r.compareTo(i))return!1}return!0},Cc.envelope=function(t){for(var e=new Yu,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Cc.toCoordinateArray=function(t){return t.toArray(Cc.coordArrayType)},Cc.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Cc.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Cc.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,r=t[e].compareTo(t[n]);if(0!==r)return r}return 1},Cc.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var r=t[n].compareTo(e[n]);if(0!==r)return r;n++}return n<e.length?-1:n<t.length?1:0},Cc.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Cc.extract=function(t,e,n){e=Pu.clamp(e,0,t.length);var r=(n=Pu.clamp(n,-1,t.length))-e+1;n<0&&(r=0),e>=t.length&&(r=0),n<e&&(r=0);var i=new Array(r).fill(null);if(0===r)return i;for(var o=0,s=e;s<=n;s++)i[o++]=t[s];return i},Object.defineProperties(Cc,Sc);var Mc=function(){};Mc.prototype.compare=function(t,e){return Cc.compare(t,e)},Mc.prototype.interfaces_=function(){return[wu]},Mc.prototype.getClass=function(){return Mc};var Lc=function(){};Lc.prototype.compare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;var i=Cc.compare(n,r);return Cc.isEqualReversed(n,r)?0:i},Lc.prototype.OLDcompare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;for(var i=Cc.increasingDirection(n),o=Cc.increasingDirection(r),s=i>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var c=n[s].compareTo(r[a]);if(0!==c)return c;s+=i,a+=o}return 0},Lc.prototype.interfaces_=function(){return[wu]},Lc.prototype.getClass=function(){return Lc};var Pc=function(){};Pc.prototype.get=function(){},Pc.prototype.put=function(){},Pc.prototype.size=function(){},Pc.prototype.values=function(){},Pc.prototype.entrySet=function(){};var Oc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Pc);(Oi.prototype=new Error).name=\"OperationNotSupported\",(Ri.prototype=new vc).contains=function(){};var Rc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Tc(this)},e}(Ri),Tc=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new Pi;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new Oi},e}(Ec),Ac=0;(Gi.prototype=new Oc).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},Gi.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Ac,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,r,i=this.root_;do{if(n=i,(r=t.compareTo(i.key))<0)i=i.left;else{if(!(r>0)){var o=i.value;return i.value=e,o}i=i.right}}while(null!==i);var s={key:t,left:null,right:null,value:e,parent:n,color:Ac,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},Gi.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(Ai(t)===Fi(Ai(Ai(t)))){var e=qi(Ai(Ai(t)));1===Ti(e)?(Di(Ai(t),Ac),Di(e,Ac),Di(Ai(Ai(t)),1),t=Ai(Ai(t))):(t===qi(Ai(t))&&(t=Ai(t),this.rotateLeft(t)),Di(Ai(t),Ac),Di(Ai(Ai(t)),1),this.rotateRight(Ai(Ai(t))))}else{var n=Fi(Ai(Ai(t)));1===Ti(n)?(Di(Ai(t),Ac),Di(n,Ac),Di(Ai(Ai(t)),1),t=Ai(Ai(t))):(t===Fi(Ai(t))&&(t=Ai(t),this.rotateRight(t)),Di(Ai(t),Ac),Di(Ai(Ai(t)),1),this.rotateLeft(Ai(Ai(t))))}this.root_.color=Ac},Gi.prototype.values=function(){var t=new bc,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=Gi.successor(e));)t.add(e.value);return t},Gi.prototype.entrySet=function(){var t=new Rc,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=Gi.successor(e));)t.add(e);return t},Gi.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},Gi.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},Gi.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},Gi.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,r=t;null!==n&&r===n.right;)r=n,n=n.parent;return n},Gi.prototype.size=function(){return this.size_};var Dc=function(){};Dc.prototype.interfaces_=function(){return[]},Dc.prototype.getClass=function(){return Dc},Bi.prototype=new Ri,(ki.prototype=new Bi).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},ki.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},ki.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},ki.prototype.remove=function(t){throw new Oi},ki.prototype.size=function(){return this.array_.length},ki.prototype.isEmpty=function(){return 0===this.array_.length},ki.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},ki.prototype.iterator=function(){return new Fc(this)};var Fc=function(t){this.treeSet_=t,this.position_=0};Fc.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new Pi;return this.treeSet_.array_[this.position_++]},Fc.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Fc.prototype.remove=function(){throw new Oi};var qc=function(){};qc.sort=function(){var t,e,n,r,i=arguments[0];if(1===arguments.length)r=function(t,e){return t.compareTo(e)},i.sort(r);else if(2===arguments.length)n=arguments[1],r=function(t,e){return n.compare(t,e)},i.sort(r);else if(3===arguments.length){(e=i.slice(arguments[1],arguments[2])).sort();var o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length));for(i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])}else if(4===arguments.length)for(e=i.slice(arguments[1],arguments[2]),n=arguments[3],r=function(t,e){return n.compare(t,e)},e.sort(r),o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length)),i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])},qc.asList=function(t){for(var e=new bc,n=0,r=t.length;n<r;n++)e.add(t[n]);return e};var Gc=function(){},Bc={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bc.P.get=function(){return 0},Bc.L.get=function(){return 1},Bc.A.get=function(){return 2},Bc.FALSE.get=function(){return-1},Bc.TRUE.get=function(){return-2},Bc.DONTCARE.get=function(){return-3},Bc.SYM_FALSE.get=function(){return\"F\"},Bc.SYM_TRUE.get=function(){return\"T\"},Bc.SYM_DONTCARE.get=function(){return\"*\"},Bc.SYM_P.get=function(){return\"0\"},Bc.SYM_L.get=function(){return\"1\"},Bc.SYM_A.get=function(){return\"2\"},Gc.prototype.interfaces_=function(){return[]},Gc.prototype.getClass=function(){return Gc},Gc.toDimensionSymbol=function(t){switch(t){case Gc.FALSE:return Gc.SYM_FALSE;case Gc.TRUE:return Gc.SYM_TRUE;case Gc.DONTCARE:return Gc.SYM_DONTCARE;case Gc.P:return Gc.SYM_P;case Gc.L:return Gc.SYM_L;case Gc.A:return Gc.SYM_A}throw new _u(\"Unknown dimension value: \"+t)},Gc.toDimensionValue=function(t){switch(Au.toUpperCase(t)){case Gc.SYM_FALSE:return Gc.FALSE;case Gc.SYM_TRUE:return Gc.TRUE;case Gc.SYM_DONTCARE:return Gc.DONTCARE;case Gc.SYM_P:return Gc.P;case Gc.SYM_L:return Gc.L;case Gc.SYM_A:return Gc.A}throw new _u(\"Unknown dimension symbol: \"+t)},Object.defineProperties(Gc,Bc);var kc=function(){};kc.prototype.filter=function(t){},kc.prototype.interfaces_=function(){return[]},kc.prototype.getClass=function(){return kc};var zc=function(){};zc.prototype.filter=function(t,e){},zc.prototype.isDone=function(){},zc.prototype.isGeometryChanged=function(){},zc.prototype.interfaces_=function(){return[]},zc.prototype.getClass=function(){return zc};var jc=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new _u(\"geometries must not contain null elements\")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new Yu,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var r=this._geometries[n].getCoordinates(),i=0;i<r.length;i++)t[++e]=r[i];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e;if(this._geometries.length!==r._geometries.length)return!1;for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].equalsExact(r._geometries[i],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();qc.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=Gc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=Gc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new ki(qc.asList(this._geometries)),n=new ki(qc.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var r=arguments[0],i=arguments[1],o=r,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var c=this.getGeometryN(u),h=o.getGeometryN(u),l=c.compareToSameClass(h,i);if(0!==l)return l;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(Lu(arguments[0],pc))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(Lu(arguments[0],zc)){var n=arguments[0];if(0===this._geometries.length)return null;for(var r=0;r<this._geometries.length&&(this._geometries[r].apply(n),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){var i=arguments[0];i.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(i)}else if(Lu(arguments[0],uc)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),tc.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return\"GeometryCollection\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(cc),Xc=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Gc.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Uc(this).getBoundary()},e.prototype.getGeometryType=function(){return\"MultiLineString\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Dc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(jc),Uc=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=fc.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=r}};Uc.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Uc.prototype.getBoundary=function(){return this._geom instanceof Jc?this.boundaryLineString(this._geom):this._geom instanceof Xc?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Uc.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Uc.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Uc.prototype.computeBoundaryCoordinates=function(t){var e=new bc;this._endpointMap=new Gi;for(var n=0;n<t.getNumGeometries();n++){var r=t.getGeometryN(n);0!==r.getNumPoints()&&(this.addEndpoint(r.getCoordinateN(0)),this.addEndpoint(r.getCoordinateN(r.getNumPoints()-1)))}for(var i=this._endpointMap.entrySet().iterator();i.hasNext();){var o=i.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Cc.toCoordinateArray(e)},Uc.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new Yc,this._endpointMap.put(t,e)),e.count++},Uc.prototype.interfaces_=function(){return[]},Uc.prototype.getClass=function(){return Uc},Uc.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Uc(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Uc(e,n).getBoundary()}};var Yc=function(){this.count=null};Yc.prototype.interfaces_=function(){return[]},Yc.prototype.getClass=function(){return Yc};var Vc=function(){},Hc={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};Vc.prototype.interfaces_=function(){return[]},Vc.prototype.getClass=function(){return Vc},Vc.chars=function(t,e){for(var n=new Array(e).fill(null),r=0;r<e;r++)n[r]=t;return String(n)},Vc.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var r=arguments[0],i=arguments[1],o=\"\",s=new function(){}(new function(){}(Vc.getStackTrace(r))),a=0;a<i;a++)try{o+=s.readLine()+Vc.NEWLINE}catch(t){if(!(t instanceof zi))throw t;tc.shouldNeverReachHere()}return o}},Vc.split=function(t,e){for(var n=e.length,r=new bc,i=\"\"+t,o=i.indexOf(e);o>=0;){var s=i.substring(0,o);r.add(s),o=(i=i.substring(o+n)).indexOf(e)}i.length>0&&r.add(i);for(var a=new Array(r.size()).fill(null),u=0;u<a.length;u++)a[u]=r.get(u);return a},Vc.toString=function(){if(1===arguments.length){var t=arguments[0];return Vc.SIMPLE_ORDINATE_FORMAT.format(t)}},Vc.spaces=function(t){return Vc.chars(\" \",t)},Hc.NEWLINE.get=function(){return Xu.getProperty(\"line.separator\")},Hc.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}(\"0.#\")},Object.defineProperties(Vc,Hc);var Wc=function(){};Wc.prototype.interfaces_=function(){return[]},Wc.prototype.getClass=function(){return Wc},Wc.copyCoord=function(t,e,n,r){for(var i=Math.min(t.getDimension(),n.getDimension()),o=0;o<i;o++)n.setOrdinate(r,o,t.getOrdinate(e,o))},Wc.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,Bu.X)===t.getOrdinate(e-1,Bu.X)&&t.getOrdinate(0,Bu.Y)===t.getOrdinate(e-1,Bu.Y))},Wc.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var r=Math.min(t.getDimension(),e.getDimension()),i=0;i<n;i++)for(var o=0;o<r;o++){var s=t.getOrdinate(i,o),a=e.getOrdinate(i,o);if(t.getOrdinate(i,o)!==e.getOrdinate(i,o)&&(!mu.isNaN(s)||!mu.isNaN(a)))return!1}return!0},Wc.extend=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();if(Wc.copy(e,0,r,0,i),i>0)for(var o=i;o<n;o++)Wc.copy(e,i-1,r,o,1);return r},Wc.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),r=0;r<=n;r++)Wc.swap(t,r,e-r)},Wc.swap=function(t,e,n){if(e===n)return null;for(var r=0;r<t.getDimension();r++){var i=t.getOrdinate(e,r);t.setOrdinate(e,r,t.getOrdinate(n,r)),t.setOrdinate(n,r,i)}},Wc.copy=function(t,e,n,r,i){for(var o=0;o<i;o++)Wc.copyCoord(t,e+o,n,r+o)},Wc.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),r=new Ru;r.append(\"(\");for(var i=0;i<e;i++){i>0&&r.append(\" \");for(var o=0;o<n;o++)o>0&&r.append(\",\"),r.append(Vc.toString(t.getOrdinate(i,o)))}return r.append(\")\"),r.toString()}},Wc.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wc.createClosedRing(t,e,4);return e.getOrdinate(0,Bu.X)===e.getOrdinate(n-1,Bu.X)&&e.getOrdinate(0,Bu.Y)===e.getOrdinate(n-1,Bu.Y)?e:Wc.createClosedRing(t,e,n+1)},Wc.createClosedRing=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();Wc.copy(e,0,r,0,i);for(var o=i;o<n;o++)Wc.copy(e,0,r,o,1);return r};var Jc=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new Yu:this._points.expandEnvelope(new Yu)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e;if(this._points.size()!==r._points.size())return!1;for(var i=0;i<this._points.size();i++)if(!this.equal(this._points.getCoordinate(i),r._points.getCoordinate(i),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wc.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Gc.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return sc.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wc.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var r=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==r)return r;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var i=arguments[0];return arguments[1].compare(this._points,i._points)}},e.prototype.apply=function(){if(Lu(arguments[0],pc))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(Lu(arguments[0],zc)){var n=arguments[0];if(0===this._points.size())return null;for(var r=0;r<this._points.size()&&(n.filter(this._points,r),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){arguments[0].filter(this)}else if(Lu(arguments[0],uc)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Uc(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return\"LineString\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new _u(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[Dc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(cc),Zc=function(){};Zc.prototype.interfaces_=function(){return[]},Zc.prototype.getClass=function(){return Zc};var Kc=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new Yu;var t=new Yu;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error(\"getX called on empty Point\");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(Lu(arguments[0],pc)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(Lu(arguments[0],zc)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){arguments[0].filter(this)}else if(Lu(arguments[0],uc)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return\"Point\"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error(\"getY called on empty Point\");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),tc.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Zc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(cc),Qc=function(){};Qc.prototype.interfaces_=function(){return[]},Qc.prototype.getClass=function(){return Qc};var $c=function(t){function e(e,n,r){if(t.call(this,r),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new _u(\"holes must not contain null elements\");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new _u(\"shell is empty but holes are not\");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),r=0;r<n.length;r++)t[++e]=n[r];for(var i=0;i<this._holes.length;i++)for(var o=this._holes[i].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(sc.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(sc.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var r=t.getX(n);if(r!==e.getMinX()&&r!==e.getMaxX())return!1;var i=t.getY(n);if(i!==e.getMinY()&&i!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),c=t.getY(a);if(u!==o===(c!==s))return!1;o=u,s=c}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e,i=this._shell,o=r._shell;if(!i.equalsExact(o,n))return!1;if(this._holes.length!==r._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(r._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);qc.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var r=new Array(e.getCoordinates().length-1).fill(null);Xu.arraycopy(e.getCoordinates(),0,r,0,r.length);var i=Cc.minCoordinate(e.getCoordinates());Cc.scroll(r,i),Xu.arraycopy(r,0,e.getCoordinates(),0,r.length),e.getCoordinates()[r.length]=r[0],sc.isCCW(e.getCoordinates())===n&&Cc.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var r=arguments[0],i=arguments[1],o=r,s=this._shell,a=o._shell,u=s.compareToSameClass(a,i);if(0!==u)return u;for(var c=this.getNumInteriorRing(),h=o.getNumInteriorRing(),l=0;l<c&&l<h;){var p=this.getInteriorRingN(l),f=o.getInteriorRingN(l),g=p.compareToSameClass(f,i);if(0!==g)return g;l++}return l<c?1:l<h?-1:0}},e.prototype.apply=function(t){if(Lu(t,pc)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(Lu(t,zc)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(Lu(t,kc))t.filter(this);else if(Lu(t,uc)){t.filter(this),this._shell.apply(t);for(var r=0;r<this._holes.length;r++)this._holes[r].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return\"Polygon\"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),r=0;r<n.length;r++)n[r]=this._holes[r].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Qc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(cc),th=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return\"MultiPoint\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(jc),eh=function(t){function e(e,n){e instanceof bu&&n instanceof _h&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wc.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new _u(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new _u(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},e.prototype.getGeometryType=function(){return\"LinearRing\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Jc),nh=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new bc,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),r=0;r<n.getNumGeometries();r++)t.add(n.getGeometryN(r));var i=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(i))},e.prototype.getGeometryType=function(){return\"MultiPolygon\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Qc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(jc),rh=function(t){this._factory=t||null,this._isUserDataCopied=!1},ih={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};rh.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},rh.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},rh.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof jc?this.editGeometryCollection(t,e):t instanceof $c?this.editPolygon(t,e):t instanceof Kc?e.edit(t,this._factory):t instanceof Jc?e.edit(t,this._factory):(tc.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},rh.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),r=new bc,i=0;i<n.getNumGeometries();i++){var o=this.edit(n.getGeometryN(i),e);null===o||o.isEmpty()||r.add(o)}return n.getClass()===th?this._factory.createMultiPoint(r.toArray([])):n.getClass()===Xc?this._factory.createMultiLineString(r.toArray([])):n.getClass()===nh?this._factory.createMultiPolygon(r.toArray([])):this._factory.createGeometryCollection(r.toArray([]))},rh.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var r=this.edit(n.getExteriorRing(),e);if(null===r||r.isEmpty())return this._factory.createPolygon();for(var i=new bc,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||i.add(s)}return this._factory.createPolygon(r,i.toArray([]))},rh.prototype.interfaces_=function(){return[]},rh.prototype.getClass=function(){return rh},rh.GeometryEditorOperation=function(){},ih.NoOpGeometryOperation.get=function(){return oh},ih.CoordinateOperation.get=function(){return sh},ih.CoordinateSequenceOperation.get=function(){return ah},Object.defineProperties(rh,ih);var oh=function(){};oh.prototype.edit=function(t,e){return t},oh.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},oh.prototype.getClass=function(){return oh};var sh=function(){};sh.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof eh?e.createLinearRing(n):t instanceof Jc?e.createLineString(n):t instanceof Kc?n.length>0?e.createPoint(n[0]):e.createPoint():t},sh.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},sh.prototype.getClass=function(){return sh};var ah=function(){};ah.prototype.edit=function(t,e){return t instanceof eh?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Jc?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Kc?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ah.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},ah.prototype.getClass=function(){return ah};var uh=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new bu}else if(Lu(arguments[0],Bu)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var r=0;r<this._coordinates.length;r++)this._coordinates[r]=n.getCoordinateCopy(r)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var i=arguments[0],o=arguments[1];this._coordinates=i,this._dimension=o,null===i&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new bu}},ch={serialVersionUID:{configurable:!0}};uh.prototype.setOrdinate=function(t,e,n){switch(e){case Bu.X:this._coordinates[t].x=n;break;case Bu.Y:this._coordinates[t].y=n;break;case Bu.Z:this._coordinates[t].z=n;break;default:throw new _u(\"invalid ordinateIndex\")}},uh.prototype.size=function(){return this._coordinates.length},uh.prototype.getOrdinate=function(t,e){switch(e){case Bu.X:return this._coordinates[t].x;case Bu.Y:return this._coordinates[t].y;case Bu.Z:return this._coordinates[t].z}return mu.NaN},uh.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},uh.prototype.getCoordinateCopy=function(t){return new bu(this._coordinates[t])},uh.prototype.getDimension=function(){return this._dimension},uh.prototype.getX=function(t){return this._coordinates[t].x},uh.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new uh(t,this._dimension)},uh.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},uh.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new uh(t,this._dimension)},uh.prototype.toString=function(){if(this._coordinates.length>0){var t=new Ru(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},uh.prototype.getY=function(t){return this._coordinates[t].y},uh.prototype.toCoordinateArray=function(){return this._coordinates},uh.prototype.interfaces_=function(){return[Bu,Li]},uh.prototype.getClass=function(){return uh},ch.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(uh,ch);var hh=function(){},lh={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};hh.prototype.readResolve=function(){return hh.instance()},hh.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new uh(t)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new uh(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return r>3&&(r=3),r<2?new uh(n):new uh(n,r)}},hh.prototype.interfaces_=function(){return[Cu,Li]},hh.prototype.getClass=function(){return hh},hh.instance=function(){return hh.instanceObject},lh.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},lh.instanceObject.get=function(){return new hh},Object.defineProperties(hh,lh);var ph=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new bc,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Rc;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Pc),fh=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof dh){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var r=arguments[0];this._modelType=r._modelType,this._scale=r._scale}},gh={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fh.prototype.equals=function(t){if(!(t instanceof fh))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fh.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),r=e.getMaximumSignificantDigits();return new Tu(n).compareTo(new Tu(r))},fh.prototype.getScale=function(){return this._scale},fh.prototype.isFloating=function(){return this._modelType===fh.FLOATING||this._modelType===fh.FLOATING_SINGLE},fh.prototype.getType=function(){return this._modelType},fh.prototype.toString=function(){var t=\"UNKNOWN\";return this._modelType===fh.FLOATING?t=\"Floating\":this._modelType===fh.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===fh.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},fh.prototype.makePrecise=function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(mu.isNaN(t))return t;if(this._modelType===fh.FLOATING_SINGLE){return t}return this._modelType===fh.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof bu){var e=arguments[0];if(this._modelType===fh.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fh.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fh.FLOATING?t=16:this._modelType===fh.FLOATING_SINGLE?t=6:this._modelType===fh.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fh.prototype.setScale=function(t){this._scale=Math.abs(t)},fh.prototype.interfaces_=function(){return[Li,xu]},fh.prototype.getClass=function(){return fh},fh.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},gh.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},gh.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fh,gh);var dh=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},yh={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};dh.prototype.readResolve=function(){return dh.nameToTypeMap.get(this._name)},dh.prototype.toString=function(){return this._name},dh.prototype.interfaces_=function(){return[Li]},dh.prototype.getClass=function(){return dh},yh.serialVersionUID.get=function(){return-552860263173159e4},yh.nameToTypeMap.get=function(){return new ph},Object.defineProperties(dh,yh),fh.Type=dh,fh.FIXED=new dh(\"FIXED\"),fh.FLOATING=new dh(\"FLOATING\"),fh.FLOATING_SINGLE=new dh(\"FLOATING SINGLE\");var _h=function t(){this._precisionModel=new fh,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?Lu(arguments[0],Cu)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fh&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},mh={serialVersionUID:{configurable:!0}};_h.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new bu(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new bu(t.getMinX(),t.getMinY()),new bu(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new bu(t.getMinX(),t.getMinY()),new bu(t.getMinX(),t.getMaxY()),new bu(t.getMaxX(),t.getMaxY()),new bu(t.getMaxX(),t.getMinY()),new bu(t.getMinX(),t.getMinY())]),null)},_h.prototype.createLineString=function(t){return t?t instanceof Array?new Jc(this.getCoordinateSequenceFactory().create(t),this):Lu(t,Bu)?new Jc(t,this):void 0:new Jc(this.getCoordinateSequenceFactory().create([]),this)},_h.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xc(null,this);if(1===arguments.length){var t=arguments[0];return new Xc(t,this)}},_h.prototype.buildGeometry=function(t){for(var e=null,n=!1,r=!1,i=t.iterator();i.hasNext();){var o=i.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(r=!0)}if(null===e)return this.createGeometryCollection();if(n||r)return this.createGeometryCollection(_h.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $c)return this.createMultiPolygon(_h.toPolygonArray(t));if(a instanceof Jc)return this.createMultiLineString(_h.toLineStringArray(t));if(a instanceof Kc)return this.createMultiPoint(_h.toPointArray(t));tc.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},_h.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_h.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new Kc(e,this)}}},_h.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_h.prototype.createPolygon=function(){if(0===arguments.length)return new $c(null,null,this);if(1===arguments.length){if(Lu(arguments[0],Bu)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof eh){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];return new $c(r,i,this)}},_h.prototype.getSRID=function(){return this._SRID},_h.prototype.createGeometryCollection=function(){if(0===arguments.length)return new jc(null,this);if(1===arguments.length){var t=arguments[0];return new jc(t,this)}},_h.prototype.createGeometry=function(t){return new rh(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_h.prototype.getPrecisionModel=function(){return this._precisionModel},_h.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new eh(e,this)}}},_h.prototype.createMultiPolygon=function(){if(0===arguments.length)return new nh(null,this);if(1===arguments.length){var t=arguments[0];return new nh(t,this)}},_h.prototype.createMultiPoint=function(){if(0===arguments.length)return new th(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new th(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(Lu(arguments[0],Bu)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var r=new Array(n.size()).fill(null),i=0;i<n.size();i++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wc.copy(n,i,o,0,1),r[i]=this.createPoint(o)}return this.createMultiPoint(r)}}},_h.prototype.interfaces_=function(){return[Li]},_h.prototype.getClass=function(){return _h},_h.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.getDefaultCoordinateSequenceFactory=function(){return hh.instance()},_h.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},mh.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_h,mh);var vh=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],xh=function(t){this.geometryFactory=t||new _h};xh.prototype.read=function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!Eh[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==vh.indexOf(n)?Eh[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Eh[n].apply(this,[e.geometries]):Eh[n].apply(this,[e])},xh.prototype.write=function(t){var e=t.getGeometryType();if(!wh[e])throw new Error(\"Geometry is not supported\");return wh[e].apply(this,[t])};var Eh={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var r=t.geometry.type;if(!Eh[r])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Eh.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(new bu(r[0],r[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new bu(t[0],t[1]),new bu(t[2],t[1]),new bu(t[2],t[3]),new bu(t[0],t[3]),new bu(t[0],t[1])])},Point:function(t){var e=new bu(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eh.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Eh.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eh.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Eh.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),r=[],i=1;i<t.length;++i){var o=t[i],s=Eh.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);r.push(a)}return this.geometryFactory.createPolygon(n,r)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(Eh.Polygon.apply(this,[r]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(this.read(r))}return this.geometryFactory.createGeometryCollection(e)}},wh={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:\"Point\",coordinates:wh.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Point.apply(this,[r]);e.push(i.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),r=0;r<n.length;++r){var i=n[r];e.push(wh.coordinate.apply(this,[i]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.LineString.apply(this,[r]);e.push(i.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=wh.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var r=0;r<t._holes.length;++r){var i=t._holes[r],o=wh.LineString.apply(this,[i]);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Polygon.apply(this,[r]);e.push(i.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=r.getGeometryType();e.push(wh[i].apply(this,[r]))}return{type:\"GeometryCollection\",geometries:e}}},bh=function(t){this.geometryFactory=t||new _h,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new xh(this.geometryFactory)};bh.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fh.FIXED&&this.reducePrecision(e),e},bh.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ih=function(){this.parser=new xh(this.geometryFactory)};Ih.prototype.write=function(t){return this.parser.write(t)};var Nh=function(){},Ch={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Nh.prototype.interfaces_=function(){return[]},Nh.prototype.getClass=function(){return Nh},Nh.opposite=function(t){return t===Nh.LEFT?Nh.RIGHT:t===Nh.RIGHT?Nh.LEFT:t},Ch.ON.get=function(){return 0},Ch.LEFT.get=function(){return 1},Ch.RIGHT.get=function(){return 2},Object.defineProperties(Nh,Ch),(ji.prototype=new Error).name=\"EmptyStackException\",(Xi.prototype=new wc).add=function(t){return this.array_.push(t),!0},Xi.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},Xi.prototype.push=function(t){return this.array_.push(t),t},Xi.prototype.pop=function(t){if(0===this.array_.length)throw new ji;return this.array_.pop()},Xi.prototype.peek=function(){if(0===this.array_.length)throw new ji;return this.array_[this.array_.length-1]},Xi.prototype.empty=function(){return 0===this.array_.length},Xi.prototype.isEmpty=function(){return this.empty()},Xi.prototype.search=function(t){return this.array_.indexOf(t)},Xi.prototype.size=function(){return this.array_.length},Xi.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var Sh=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};Sh.prototype.getCoordinate=function(){return this._minCoord},Sh.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},Sh.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();tc.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],r=sc.computeOrientation(this._minCoord,n,e),i=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&r===sc.COUNTERCLOCKWISE?i=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&r===sc.CLOCKWISE&&(i=!0),i&&(this._minIndex=this._minIndex-1)},Sh.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var r=Nh.LEFT;return n[e].y<n[e+1].y&&(r=Nh.RIGHT),r},Sh.prototype.getEdge=function(){return this._orientedDe},Sh.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},Sh.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},Sh.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}tc.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Nh.LEFT&&(this._orientedDe=this._minDe.getSym())},Sh.prototype.interfaces_=function(){return[]},Sh.prototype.getClass=function(){return Sh};var Mh=function(t){function e(n,r){t.call(this,e.msgWithCoord(n,r)),this.pt=r?new bu(r):null,this.name=\"TopologyException\"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+\" [ \"+e+\" ]\"},e}(Qu),Lh=function(){this.array_=[]};Lh.prototype.addLast=function(t){this.array_.push(t)},Lh.prototype.removeFirst=function(){return this.array_.shift()},Lh.prototype.isEmpty=function(){return 0===this.array_.length};var Ph=function(){this._finder=null,this._dirEdgeList=new bc,this._nodes=new bc,this._rightMostCoord=null,this._env=null,this._finder=new Sh};Ph.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Ph.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Ph.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var r=n.next();if(r.isVisited()||r.getSym().isVisited()){e=r;break}}if(null===e)throw new Mh(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var i=t.getEdges().iterator();i.hasNext();){var o=i.next();o.setVisited(!0),this.copySymDepths(o)}},Ph.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Nh.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Ph.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Ph.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Nh.RIGHT)>=1&&e.getDepth(Nh.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Ph.prototype.computeDepths=function(t){var e=new Rc,n=new Lh,r=t.getNode();for(n.addLast(r),e.add(r),t.setVisited(!0);!n.isEmpty();){var i=n.removeFirst();e.add(i),this.computeNodeDepth(i);for(var o=i.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Ph.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Ph.prototype.getEnvelope=function(){if(null===this._env){for(var t=new Yu,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),r=0;r<n.length-1;r++)t.expandToInclude(n[r]);this._env=t}return this._env},Ph.prototype.addReachable=function(t){var e=new Xi;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Ph.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Nh.LEFT,t.getDepth(Nh.RIGHT)),e.setDepth(Nh.RIGHT,t.getDepth(Nh.LEFT))},Ph.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var r=n.next();this._dirEdgeList.add(r);var i=r.getSym().getNode();i.isVisited()||e.push(i)}},Ph.prototype.getNodes=function(){return this._nodes},Ph.prototype.getDirectedEdges=function(){return this._dirEdgeList},Ph.prototype.interfaces_=function(){return[xu]},Ph.prototype.getClass=function(){return Ph};var Oh=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Nh.ON]=n}else if(arguments[0]instanceof t){var r=arguments[0];if(this.init(r.location.length),null!==r)for(var i=0;i<this.location.length;i++)this.location[i]=r.location[i]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Nh.ON]=o,this.location[Nh.LEFT]=s,this.location[Nh.RIGHT]=a}};Oh.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Oh.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==Su.NONE)return!1;return!0},Oh.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===Su.NONE&&(this.location[e]=t)},Oh.prototype.isLine=function(){return 1===this.location.length},Oh.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Nh.ON]=this.location[Nh.ON],e[Nh.LEFT]=Su.NONE,e[Nh.RIGHT]=Su.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===Su.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Oh.prototype.getLocations=function(){return this.location},Oh.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Nh.LEFT];this.location[Nh.LEFT]=this.location[Nh.RIGHT],this.location[Nh.RIGHT]=t},Oh.prototype.toString=function(){var t=new Ru;return this.location.length>1&&t.append(Su.toLocationSymbol(this.location[Nh.LEFT])),t.append(Su.toLocationSymbol(this.location[Nh.ON])),this.location.length>1&&t.append(Su.toLocationSymbol(this.location[Nh.RIGHT])),t.toString()},Oh.prototype.setLocations=function(t,e,n){this.location[Nh.ON]=t,this.location[Nh.LEFT]=e,this.location[Nh.RIGHT]=n},Oh.prototype.get=function(t){return t<this.location.length?this.location[t]:Su.NONE},Oh.prototype.isArea=function(){return this.location.length>1},Oh.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===Su.NONE)return!0;return!1},Oh.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Nh.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Oh.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(Su.NONE)},Oh.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Oh.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Oh.prototype.interfaces_=function(){return[]},Oh.prototype.getClass=function(){return Oh};var Rh=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Oh(e),this.elt[1]=new Oh(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Oh(n.elt[0]),this.elt[1]=new Oh(n.elt[1])}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.elt[0]=new Oh(Su.NONE),this.elt[1]=new Oh(Su.NONE),this.elt[r].setLocation(i)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Oh(o,s,a),this.elt[1]=new Oh(o,s,a)}else if(4===arguments.length){var u=arguments[0],c=arguments[1],h=arguments[2],l=arguments[3];this.elt[0]=new Oh(Su.NONE,Su.NONE,Su.NONE),this.elt[1]=new Oh(Su.NONE,Su.NONE,Su.NONE),this.elt[u].setLocations(c,h,l)}};Rh.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Rh.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Rh.prototype.isNull=function(t){return this.elt[t].isNull()},Rh.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Rh.prototype.isLine=function(t){return this.elt[t].isLine()},Rh.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Oh(t.elt[e]):this.elt[e].merge(t.elt[e])},Rh.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Rh.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Nh.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Rh.prototype.toString=function(){var t=new Ru;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},Rh.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Rh.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Rh.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Nh.ON,e)}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this.elt[n].setLocation(r,i)}},Rh.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Rh.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Rh.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Oh(this.elt[t].location[0]))},Rh.prototype.interfaces_=function(){return[]},Rh.prototype.getClass=function(){return Rh},Rh.toLineLabel=function(t){for(var e=new Rh(Su.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var Th=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new bc,this._pts=new bc,this._label=new Rh(Su.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new bc,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};Th.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=sc.isCCW(this._ring.getCoordinates())},Th.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},Th.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new Mh(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new Mh(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var r=e.getLabel();tc.isTrue(r.isArea()),this.mergeLabel(r),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},Th.prototype.getLinearRing=function(){return this._ring},Th.prototype.getCoordinate=function(t){return this._pts.get(t)},Th.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},Th.prototype.addPoints=function(t,e,n){var r=t.getCoordinates();if(e){var i=1;n&&(i=0);for(var o=i;o<r.length;o++)this._pts.add(r[o])}else{var s=r.length-2;n&&(s=r.length-1);for(var a=s;a>=0;a--)this._pts.add(r[a])}},Th.prototype.isHole=function(){return this._isHole},Th.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},Th.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!sc.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},Th.prototype.addHole=function(t){this._holes.add(t)},Th.prototype.isShell=function(){return null===this._shell},Th.prototype.getLabel=function(){return this._label},Th.prototype.getEdges=function(){return this._edges},Th.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},Th.prototype.getShell=function(){return this._shell},Th.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=e.getLocation(n,Nh.RIGHT);if(r===Su.NONE)return null;if(this._label.getLocation(n)===Su.NONE)return this._label.setLocation(n,r),null}},Th.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},Th.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},Th.prototype.interfaces_=function(){return[]},Th.prototype.getClass=function(){return Th};var Ah=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Th),Dh=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new bc,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Ah(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Th),Fh=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fh.prototype.setVisited=function(t){this._isVisited=t},Fh.prototype.setInResult=function(t){this._isInResult=t},Fh.prototype.isCovered=function(){return this._isCovered},Fh.prototype.isCoveredSet=function(){return this._isCoveredSet},Fh.prototype.setLabel=function(t){this._label=t},Fh.prototype.getLabel=function(){return this._label},Fh.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fh.prototype.updateIM=function(t){tc.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},Fh.prototype.isInResult=function(){return this._isInResult},Fh.prototype.isVisited=function(){return this._isVisited},Fh.prototype.interfaces_=function(){return[]},Fh.prototype.getClass=function(){return Fh};var qh=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Rh(0,Su.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=Su.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var r=t.getLocation(e);n!==Su.BOUNDARY&&(n=r)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Rh(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Rh)for(var n=arguments[0],r=0;r<2;r++){var i=this.computeMergedLocation(n,r);this._label.getLocation(r)===Su.NONE&&this._label.setLocation(r,i)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=Su.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case Su.BOUNDARY:n=Su.INTERIOR;break;case Su.INTERIOR:default:n=Su.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fh),Gh=function(){this.nodeMap=new Gi,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};Gh.prototype.find=function(t){return this.nodeMap.get(t)},Gh.prototype.addNode=function(){if(arguments[0]instanceof bu){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof qh){var n=arguments[0],r=this.nodeMap.get(n.getCoordinate());return null===r?(this.nodeMap.put(n.getCoordinate(),n),n):(r.mergeLabel(n),r)}},Gh.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Gh.prototype.iterator=function(){return this.nodeMap.values().iterator()},Gh.prototype.values=function(){return this.nodeMap.values()},Gh.prototype.getBoundaryNodes=function(t){for(var e=new bc,n=this.iterator();n.hasNext();){var r=n.next();r.getLabel().getLocation(t)===Su.BOUNDARY&&e.add(r)}return e},Gh.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},Gh.prototype.interfaces_=function(){return[]},Gh.prototype.getClass=function(){return Gh};var Bh=function(){},kh={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Bh.prototype.interfaces_=function(){return[]},Bh.prototype.getClass=function(){return Bh},Bh.isNorthern=function(t){return t===Bh.NE||t===Bh.NW},Bh.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Bh.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Bh.isInHalfPlane=function(t,e){return e===Bh.SE?t===Bh.SE||t===Bh.SW:t===e||t===e+1},Bh.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new _u(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Bh.NE:Bh.SE:e>=0?Bh.NW:Bh.SW}if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new _u(\"Cannot compute the quadrant for two identical points \"+n);return r.x>=n.x?r.y>=n.y?Bh.NE:Bh.SE:r.y>=n.y?Bh.NW:Bh.SW}},kh.NE.get=function(){return 0},kh.NW.get=function(){return 1},kh.SW.get=function(){return 2},kh.SE.get=function(){return 3},Object.defineProperties(Bh,kh);var zh=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2];this._edge=e,this.init(n,r),this._label=null}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=i,this.init(o,s),this._label=a}};zh.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:sc.computeOrientation(t._p0,t._p1,this._p1)},zh.prototype.getDy=function(){return this._dy},zh.prototype.getCoordinate=function(){return this._p0},zh.prototype.setNode=function(t){this._node=t},zh.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),r=n.lastIndexOf(\".\"),i=n.substring(r+1);t.print(\"  \"+i+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)},zh.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},zh.prototype.getDirectedCoordinate=function(){return this._p1},zh.prototype.getDx=function(){return this._dx},zh.prototype.getLabel=function(){return this._label},zh.prototype.getEdge=function(){return this._edge},zh.prototype.getQuadrant=function(){return this._quadrant},zh.prototype.getNode=function(){return this._node},zh.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label},zh.prototype.computeLabel=function(t){},zh.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Bh.quadrant(this._dx,this._dy),tc.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")},zh.prototype.interfaces_=function(){return[xu]},zh.prototype.getClass=function(){return zh};var jh=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var r=e.getNumPoints()-1;this.init(e.getCoordinate(r),e.getCoordinate(r-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Rh(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new Mh(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Nh.LEFT)===Su.INTERIOR&&this._label.getLocation(e,Nh.RIGHT)===Su.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(\" \"+this._depth[Nh.LEFT]+\"/\"+this._depth[Nh.RIGHT]),e.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&e.print(\" inResult\")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,Su.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,Su.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var r=1;t===Nh.LEFT&&(r=-1);var i=Nh.opposite(t),o=e+n*r;this.setDepth(t,e),this.setDepth(i,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===Su.EXTERIOR&&e===Su.INTERIOR?1:t===Su.INTERIOR&&e===Su.EXTERIOR?-1:0},e}(zh),Xh=function(){};Xh.prototype.createNode=function(t){return new qh(t,null)},Xh.prototype.interfaces_=function(){return[]},Xh.prototype.getClass=function(){return Xh};var Uh=function(){if(this._edges=new bc,this._nodes=null,this._edgeEndList=new bc,0===arguments.length)this._nodes=new Gh(new Xh);else if(1===arguments.length){var t=arguments[0];this._nodes=new Gh(t)}};Uh.prototype.printEdges=function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Uh.prototype.find=function(t){return this._nodes.find(t)},Uh.prototype.addNode=function(){if(arguments[0]instanceof qh){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof bu){var e=arguments[0];return this._nodes.addNode(e)}},Uh.prototype.getNodeIterator=function(){return this._nodes.iterator()},Uh.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Uh.prototype.debugPrintln=function(t){Xu.out.println(t)},Uh.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var r=n.getLabel();return null!==r&&r.getLocation(t)===Su.BOUNDARY},Uh.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Uh.prototype.matchInSameDirection=function(t,e,n,r){return!!t.equals(n)&&(sc.computeOrientation(t,e,r)===sc.COLLINEAR&&Bh.quadrant(t,e)===Bh.quadrant(n,r))},Uh.prototype.getEdgeEnds=function(){return this._edgeEndList},Uh.prototype.debugPrint=function(t){Xu.out.print(t)},Uh.prototype.getEdgeIterator=function(){return this._edges.iterator()},Uh.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(this.matchInSameDirection(t,e,i[0],i[1]))return r;if(this.matchInSameDirection(t,e,i[i.length-1],i[i.length-2]))return r}return null},Uh.prototype.insertEdge=function(t){this._edges.add(t)},Uh.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Uh.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var r=new jh(n,!0),i=new jh(n,!1);r.setSym(i),i.setSym(r),this.add(r),this.add(i)}},Uh.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Uh.prototype.getNodes=function(){return this._nodes.values()},Uh.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(t.equals(i[0])&&e.equals(i[1]))return r}return null},Uh.prototype.interfaces_=function(){return[]},Uh.prototype.getClass=function(){return Uh},Uh.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var Yh=function(){this._geometryFactory=null,this._shellList=new bc;var t=arguments[0];this._geometryFactory=t};Yh.prototype.sortShellsAndHoles=function(t,e,n){for(var r=t.iterator();r.hasNext();){var i=r.next();i.isHole()?n.add(i):e.add(i)}},Yh.prototype.computePolygons=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next().toPolygon(this._geometryFactory);e.add(r)}return e},Yh.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(null===r.getShell()){var i=this.findEdgeRingContaining(r,t);if(null===i)throw new Mh(\"unable to assign hole to a shell\",r.getCoordinate(0));r.setShell(i)}}},Yh.prototype.buildMinimalEdgeRings=function(t,e,n){for(var r=new bc,i=t.iterator();i.hasNext();){var o=i.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else r.add(o)}return r},Yh.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},Yh.prototype.buildMaximalEdgeRings=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next();if(r.isInResult()&&r.getLabel().isArea()&&null===r.getEdgeRing()){var i=new Dh(r,this._geometryFactory);e.add(i),i.setInResult()}}return e},Yh.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();r.isHole()&&r.setShell(t)}},Yh.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},Yh.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),r=n.getEnvelopeInternal(),i=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),c=u.getLinearRing(),h=c.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var l=!1;h.contains(r)&&sc.isPointInRing(i,c.getCoordinates())&&(l=!0),l&&(null===o||s.contains(h))&&(o=u)}return o},Yh.prototype.findShell=function(t){for(var e=0,n=null,r=t.iterator();r.hasNext();){var i=r.next();i.isHole()||(n=i,e++)}return tc.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},Yh.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Uh.linkResultDirectedEdges(n);var r=this.buildMaximalEdgeRings(e),i=new bc,o=this.buildMinimalEdgeRings(r,this._shellList,i);this.sortShellsAndHoles(o,this._shellList,i),this.placeFreeHoles(this._shellList,i)}},Yh.prototype.interfaces_=function(){return[]},Yh.prototype.getClass=function(){return Yh};var Vh=function(){};Vh.prototype.getBounds=function(){},Vh.prototype.interfaces_=function(){return[]},Vh.prototype.getClass=function(){return Vh};var Hh=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};Hh.prototype.getItem=function(){return this._item},Hh.prototype.getBounds=function(){return this._bounds},Hh.prototype.interfaces_=function(){return[Vh,Li]},Hh.prototype.getClass=function(){return Hh};var Wh=function(){this._size=null,this._items=null,this._size=0,this._items=new bc,this._items.add(null)};Wh.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},Wh.prototype.size=function(){return this._size},Wh.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},Wh.prototype.clear=function(){this._size=0,this._items.clear()},Wh.prototype.isEmpty=function(){return 0===this._size},Wh.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},Wh.prototype.interfaces_=function(){return[]},Wh.prototype.getClass=function(){return Wh};var Jh=function(){};Jh.prototype.visitItem=function(t){},Jh.prototype.interfaces_=function(){return[]},Jh.prototype.getClass=function(){return Jh};var Zh=function(){};Zh.prototype.insert=function(t,e){},Zh.prototype.remove=function(t,e){},Zh.prototype.query=function(){},Zh.prototype.interfaces_=function(){return[]},Zh.prototype.getClass=function(){return Zh};var Kh=function(){if(this._childBoundables=new bc,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Qh={serialVersionUID:{configurable:!0}};Kh.prototype.getLevel=function(){return this._level},Kh.prototype.size=function(){return this._childBoundables.size()},Kh.prototype.getChildBoundables=function(){return this._childBoundables},Kh.prototype.addChildBoundable=function(t){tc.isTrue(null===this._bounds),this._childBoundables.add(t)},Kh.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Kh.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Kh.prototype.interfaces_=function(){return[Vh,Li]},Kh.prototype.getClass=function(){return Kh},Qh.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Kh,Qh);var $h=function(){};$h.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$h.min=function(t){return $h.sort(t),t.get(0)},$h.sort=function(t,e){var n=t.toArray();e?qc.sort(n,e):qc.sort(n);for(var r=t.iterator(),i=0,o=n.length;i<o;i++)r.next(),r.set(n[i])},$h.singletonList=function(t){var e=new bc;return e.add(t),e};var tl=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tl.prototype.expandToQueue=function(t,e){var n=tl.isComposite(this._boundable1),r=tl.isComposite(this._boundable2);if(n&&r)return tl.area(this._boundable1)>tl.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(r)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new _u(\"neither boundable is composite\")},tl.prototype.isLeaves=function(){return!(tl.isComposite(this._boundable1)||tl.isComposite(this._boundable2))},tl.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tl.prototype.expand=function(t,e,n,r){for(var i=t.getChildBoundables().iterator();i.hasNext();){var o=i.next(),s=new tl(o,e,this._itemDistance);s.getDistance()<r&&n.add(s)}},tl.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tl.prototype.getDistance=function(){return this._distance},tl.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tl.prototype.interfaces_=function(){return[xu]},tl.prototype.getClass=function(){return tl},tl.area=function(t){return t.getBounds().getArea()},tl.isComposite=function(t){return t instanceof Kh};var el=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new bc,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];tc.isTrue(n>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=n}},nl={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};el.prototype.getNodeCapacity=function(){return this._nodeCapacity},el.prototype.lastNode=function(t){return t.get(t.size()-1)},el.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Kh?t+=this.size(n):n instanceof Hh&&(t+=1)}return t}},el.prototype.removeItem=function(t,e){for(var n=null,r=t.getChildBoundables().iterator();r.hasNext();){var i=r.next();i instanceof Hh&&i.getItem()===e&&(n=i)}return null!==n&&(t.getChildBoundables().remove(n),!0)},el.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new bc:t}if(1===arguments.length){for(var e=arguments[0],n=new bc,r=e.getChildBoundables().iterator();r.hasNext();){var i=r.next();if(i instanceof Kh){var o=this.itemsTree(i);null!==o&&n.add(o)}else i instanceof Hh?n.add(i.getItem()):tc.shouldNeverReachHere()}return n.size()<=0?null:n}},el.prototype.insert=function(t,e){tc.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new Hh(t,e))},el.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new bc;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];if(tc.isTrue(n>-2),r.getLevel()===n)return i.add(r),null;for(var o=r.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Kh?this.boundablesAtLevel(n,s,i):(tc.isTrue(s instanceof Hh),-1===n&&i.add(s))}return null}},el.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new bc;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,r)}else if(3===arguments.length)if(Lu(arguments[2],Jh)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh)for(var i=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var c=a.get(u);this.getIntersectsOp().intersects(c.getBounds(),i)&&(c instanceof Kh?this.query(i,c,s):c instanceof Hh?s.visitItem(c.getItem()):tc.shouldNeverReachHere())}else if(Lu(arguments[2],wc)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh)for(var h=arguments[0],l=arguments[1],p=arguments[2],f=l.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),h)&&(d instanceof Kh?this.query(h,d,p):d instanceof Hh?p.add(d.getItem()):tc.shouldNeverReachHere())}},el.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},el.prototype.getRoot=function(){return this.build(),this._root},el.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=this.removeItem(r,i);if(o)return!0;for(var s=null,a=r.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Kh&&(o=this.remove(n,u,i)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&r.getChildBoundables().remove(s),o}},el.prototype.createHigherLevels=function(t,e){tc.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},el.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Kh){var r=this.depth(n);r>t&&(t=r)}}return t+1}},el.prototype.createParentBoundables=function(t,e){tc.isTrue(!t.isEmpty());var n=new bc;n.add(this.createNode(e));var r=new bc(t);$h.sort(r,this.getComparator());for(var i=r.iterator();i.hasNext();){var o=i.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},el.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},el.prototype.interfaces_=function(){return[Li]},el.prototype.getClass=function(){return el},el.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nl.IntersectsOp.get=function(){return rl},nl.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nl.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(el,nl);var rl=function(){},il=function(){};il.prototype.distance=function(t,e){},il.prototype.interfaces_=function(){return[]},il.prototype.getClass=function(){return il};var ol=function(t){function e(n){n=n||e.DEFAULT_NODE_CAPACITY,t.call(this,n)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return e.prototype.createParentBoundablesFromVerticalSlices=function(t,e){tc.isTrue(t.length>0);for(var n=new bc,r=0;r<t.length;r++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[r],e));return n},e.prototype.createNode=function(t){return new sl(t)},e.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},e.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},e.prototype.getIntersectsOp=function(){return e.intersectsOp},e.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),r=new Array(e).fill(null),i=t.iterator(),o=0;o<e;o++){r[o]=new bc;for(var s=0;i.hasNext()&&s<n;){var a=i.next();r[o].add(a),s++}}return r},e.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];t.prototype.query.call(this,n,r)}else if(3===arguments.length)if(Lu(arguments[2],Jh)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh){var i=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,i,o,s)}else if(Lu(arguments[2],wc)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh){var a=arguments[0],u=arguments[1],c=arguments[2];t.prototype.query.call(this,a,u,c)}},e.prototype.getComparator=function(){return e.yComparator},e.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},e.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},e.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},e.prototype.createParentBoundables=function(t,n){tc.isTrue(!t.isEmpty());var r=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new bc(t);$h.sort(i,e.xComparator);var o=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(r))));return this.createParentBoundablesFromVerticalSlices(o,n)},e.prototype.nearestNeighbour=function(){if(1===arguments.length){if(Lu(arguments[0],il)){var t=arguments[0],n=new tl(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(n)}if(arguments[0]instanceof tl){var r=arguments[0];return this.nearestNeighbour(r,mu.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof e&&Lu(arguments[1],il)){var i=arguments[0],o=arguments[1],s=new tl(this.getRoot(),i.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tl&&\"number\"==typeof arguments[1]){var a=arguments[0],u=arguments[1],c=null,h=new Wh;for(h.add(a);!h.isEmpty()&&u>0;){var l=h.poll(),p=l.getDistance();if(p>=u)break;l.isLeaves()?(u=p,c=l):l.expandToQueue(h,u)}return[c.getBoundable(0).getItem(),c.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new Hh(f,g),_=new tl(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},e.prototype.interfaces_=function(){return[Zh,Li]},e.prototype.getClass=function(){return e},e.centreX=function(t){return e.avg(t.getMinX(),t.getMaxX())},e.avg=function(t,e){return(t+e)/2},e.centreY=function(t){return e.avg(t.getMinY(),t.getMaxY())},n.STRtreeNode.get=function(){return sl},n.serialVersionUID.get=function(){return 0x39920f7d5f261e0},n.xComparator.get=function(){return{interfaces_:function(){return[wu]},compare:function(n,r){return t.compareDoubles(e.centreX(n.getBounds()),e.centreX(r.getBounds()))}}},n.yComparator.get=function(){return{interfaces_:function(){return[wu]},compare:function(n,r){return t.compareDoubles(e.centreY(n.getBounds()),e.centreY(r.getBounds()))}}},n.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},n.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(e,n),e}(el),sl=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new Yu(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Kh),al=function(){};al.prototype.interfaces_=function(){return[]},al.prototype.getClass=function(){return al},al.relativeSign=function(t,e){return t<e?-1:t>e?1:0},al.compare=function(t,e,n){if(e.equals2D(n))return 0;var r=al.relativeSign(e.x,n.x),i=al.relativeSign(e.y,n.y);switch(t){case 0:return al.compareValue(r,i);case 1:return al.compareValue(i,r);case 2:return al.compareValue(i,-r);case 3:return al.compareValue(-r,i);case 4:return al.compareValue(-r,-i);case 5:return al.compareValue(-i,-r);case 6:return al.compareValue(-i,r);case 7:return al.compareValue(r,-i)}return tc.shouldNeverReachHere(\"invalid octant value\"),0},al.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ul=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._segString=t,this.coord=new bu(e),this.segmentIndex=n,this._segmentOctant=r,this._isInterior=!e.equals2D(t.getCoordinate(n))};ul.prototype.getCoordinate=function(){return this.coord},ul.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},ul.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:al.compare(this._segmentOctant,this.coord,e.coord)},ul.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ul.prototype.isInterior=function(){return this._isInterior},ul.prototype.interfaces_=function(){return[xu]},ul.prototype.getClass=function(){return ul};var cl=function(){this._nodeMap=new Gi,this._edge=null;var t=arguments[0];this._edge=t};cl.prototype.getSplitCoordinates=function(){var t=new Nc;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next();this.addEdgeCoordinates(n,r,t),n=r}return t.toCoordinateArray()},cl.prototype.addCollapsedNodes=function(){var t=new bc;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cl.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cl.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),r=this._edge.getCoordinate(e+2);n.equals2D(r)&&t.add(new Tu(e+1))}},cl.prototype.addEdgeCoordinates=function(t,e,n){var r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);n.add(new bu(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));i&&n.add(new bu(e.coord))},cl.prototype.iterator=function(){return this._nodeMap.values().iterator()},cl.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},cl.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var r=e.segmentIndex-t.segmentIndex;return e.isInterior()||r--,1===r&&(n[0]=t.segmentIndex+1,!0)},cl.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),r=n.next();n.hasNext();){var i=n.next();this.findCollapseIndex(r,i,e)&&t.add(new Tu(e[0])),r=i}},cl.prototype.getEdge=function(){return this._edge},cl.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cl.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new bu(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return i&&(o[s]=new bu(e.coord)),new fl(o,this._edge.getData())},cl.prototype.add=function(t,e){var n=new ul(this._edge,t,e,this._edge.getSegmentOctant(e)),r=this._nodeMap.get(n);return null!==r?(tc.isTrue(r.coord.equals2D(t),\"Found equal nodes with different coordinates\"),r):(this._nodeMap.put(n,n),n)},cl.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new Qu(\"bad split edge start point at \"+n);var r=t.get(t.size()-1).getCoordinates(),i=r[r.length-1];if(!i.equals2D(e[e.length-1]))throw new Qu(\"bad split edge end point at \"+i)},cl.prototype.interfaces_=function(){return[]},cl.prototype.getClass=function(){return cl};var hl=function(){};hl.prototype.interfaces_=function(){return[]},hl.prototype.getClass=function(){return hl},hl.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new _u(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),r=Math.abs(e);return t>=0?e>=0?n>=r?0:1:n>=r?7:6:e>=0?n>=r?3:2:n>=r?4:5}if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var i=arguments[0],o=arguments[1],s=o.x-i.x,a=o.y-i.y;if(0===s&&0===a)throw new _u(\"Cannot compute the octant for two identical points \"+i);return hl.octant(s,a)}};var ll=function(){};ll.prototype.getCoordinates=function(){},ll.prototype.size=function(){},ll.prototype.getCoordinate=function(t){},ll.prototype.isClosed=function(){},ll.prototype.setData=function(t){},ll.prototype.getData=function(){},ll.prototype.interfaces_=function(){return[]},ll.prototype.getClass=function(){return ll};var pl=function(){};pl.prototype.addIntersection=function(t,e){},pl.prototype.interfaces_=function(){return[ll]},pl.prototype.getClass=function(){return pl};var fl=function(){this._nodeList=new cl(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};fl.prototype.getCoordinates=function(){return this._pts},fl.prototype.size=function(){return this._pts.length},fl.prototype.getCoordinate=function(t){return this._pts[t]},fl.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},fl.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},fl.prototype.setData=function(t){this._data=t},fl.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:hl.octant(t,e)},fl.prototype.getData=function(){return this._data},fl.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[3],o=new bu(n.getIntersection(i));this.addIntersection(o,r)}},fl.prototype.toString=function(){return Ku.toLineString(new uh(this._pts))},fl.prototype.getNodeList=function(){return this._nodeList},fl.prototype.addIntersectionNode=function(t,e){var n=e,r=n+1;if(r<this._pts.length){var i=this._pts[r];t.equals2D(i)&&(n=r)}return this._nodeList.add(t,n)},fl.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},fl.prototype.interfaces_=function(){return[pl]},fl.prototype.getClass=function(){return fl},fl.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new bc;return fl.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],r=arguments[1],i=n.iterator();i.hasNext();){i.next().getNodeList().addSplitEdges(r)}};var gl=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new bu,this.p1=new bu;else if(1===arguments.length){var t=arguments[0];this.p0=new bu(t.p0),this.p1=new bu(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3];this.p0=new bu(e,n),this.p1=new bu(r,i)}},dl={serialVersionUID:{configurable:!0}};gl.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},gl.prototype.orientationIndex=function(){if(arguments[0]instanceof gl){var t=arguments[0],e=sc.orientationIndex(this.p0,this.p1,t.p0),n=sc.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof bu){var r=arguments[0];return sc.orientationIndex(this.p0,this.p1,r)}},gl.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},gl.prototype.isVertical=function(){return this.p0.x===this.p1.x},gl.prototype.equals=function(t){if(!(t instanceof gl))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},gl.prototype.intersection=function(t){var e=new rc;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},gl.prototype.project=function(){if(arguments[0]instanceof bu){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new bu(t);var e=this.projectionFactor(t),n=new bu;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof gl){var r=arguments[0],i=this.projectionFactor(r.p0),o=this.projectionFactor(r.p1);if(i>=1&&o>=1)return null;if(i<=0&&o<=0)return null;var s=this.project(r.p0);i<0&&(s=this.p0),i>1&&(s=this.p1);var a=this.project(r.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new gl(s,a)}},gl.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},gl.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},gl.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},gl.prototype.distancePerpendicular=function(t){return sc.distancePointLinePerpendicular(t,this.p0,this.p1)},gl.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},gl.prototype.midPoint=function(){return gl.midPoint(this.p0,this.p1)},gl.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,r=e*e+n*n;if(r<=0)return mu.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/r},gl.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),r=mu.MAX_VALUE,i=null,o=this.closestPoint(t.p0);r=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(i=s.distance(t.p1))<r&&(r=i,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(i=a.distance(this.p0))<r&&(r=i,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(i=u.distance(this.p1))<r&&(r=i,n[0]=this.p1,n[1]=u),n},gl.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},gl.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},gl.prototype.getLength=function(){return this.p0.distance(this.p1)},gl.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},gl.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},gl.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},gl.prototype.lineIntersection=function(t){try{return Uu.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof ju))throw t}return null},gl.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},gl.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),r=this.p0.y+t*(this.p1.y-this.p0.y),i=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(i*i+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error(\"Cannot compute offset from zero-length line segment\");a=e*i/s,u=e*o/s}return new bu(n-u,r+a)},gl.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},gl.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||mu.isNaN(e))&&(e=1),e},gl.prototype.toString=function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},gl.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},gl.prototype.distance=function(){if(arguments[0]instanceof gl){var t=arguments[0];return sc.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof bu){var e=arguments[0];return sc.distancePointLine(e,this.p0,this.p1)}},gl.prototype.pointAlong=function(t){var e=new bu;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},gl.prototype.hashCode=function(){var t=mu.doubleToLongBits(this.p0.x);t^=31*mu.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=mu.doubleToLongBits(this.p1.x);n^=31*mu.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},gl.prototype.interfaces_=function(){return[xu,Li]},gl.prototype.getClass=function(){return gl},gl.midPoint=function(t,e){return new bu((t.x+e.x)/2,(t.y+e.y)/2)},dl.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(gl,dl);var yl=function(){this.tempEnv1=new Yu,this.tempEnv2=new Yu,this._overlapSeg1=new gl,this._overlapSeg2=new gl};yl.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(r,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},yl.prototype.interfaces_=function(){return[]},yl.prototype.getClass=function(){return yl};var _l=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=r};_l.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},_l.prototype.computeSelect=function(t,e,n,r){var i=this._pts[e],o=this._pts[n];if(r.tempEnv1.init(i,o),n-e==1)return r.select(this,e),null;if(!t.intersects(r.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,r),s<n&&this.computeSelect(t,s,n,r)},_l.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},_l.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},_l.prototype.setId=function(t){this._id=t},_l.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},_l.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new Yu(t,e)}return this._env},_l.prototype.getEndIndex=function(){return this._end},_l.prototype.getStartIndex=function(){return this._start},_l.prototype.getContext=function(){return this._context},_l.prototype.getId=function(){return this._id},_l.prototype.computeOverlapsInternal=function(t,e,n,r,i,o){var s=this._pts[t],a=this._pts[e],u=n._pts[r],c=n._pts[i];if(e-t==1&&i-r==1)return o.overlap(this,t,n,r),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,c),!o.tempEnv1.intersects(o.tempEnv2))return null;var h=Math.trunc((t+e)/2),l=Math.trunc((r+i)/2);t<h&&(r<l&&this.computeOverlapsInternal(t,h,n,r,l,o),l<i&&this.computeOverlapsInternal(t,h,n,l,i,o)),h<e&&(r<l&&this.computeOverlapsInternal(h,e,n,r,l,o),l<i&&this.computeOverlapsInternal(h,e,n,l,i,o))},_l.prototype.interfaces_=function(){return[]},_l.prototype.getClass=function(){return _l};var ml=function(){};ml.prototype.interfaces_=function(){return[]},ml.prototype.getClass=function(){return ml},ml.getChainStartIndices=function(t){var e=0,n=new bc;n.add(new Tu(e));do{var r=ml.findChainEnd(t,e);n.add(new Tu(r)),e=r}while(e<t.length-1);return ml.toIntArray(n)},ml.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var r=Bh.quadrant(t[n],t[n+1]),i=e+1;i<t.length;){if(!t[i-1].equals2D(t[i])){if(Bh.quadrant(t[i-1],t[i])!==r)break}i++}return i-1},ml.getChains=function(){if(1===arguments.length){var t=arguments[0];return ml.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],r=new bc,i=ml.getChainStartIndices(e),o=0;o<i.length-1;o++){var s=new _l(e,i[o],i[o+1],n);r.add(s)}return r}},ml.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var vl=function(){};vl.prototype.computeNodes=function(t){},vl.prototype.getNodedSubstrings=function(){},vl.prototype.interfaces_=function(){return[]},vl.prototype.getClass=function(){return vl};var xl=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};xl.prototype.setSegmentIntersector=function(t){this._segInt=t},xl.prototype.interfaces_=function(){return[vl]},xl.prototype.getClass=function(){return xl};var El=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new bc,this._index=new ol,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return fl.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=ml.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new wl(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),r=this._index.query(n.getEnvelope()).iterator();r.hasNext();){var i=r.next();if(i.getId()>n.getId()&&(n.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return wl},Object.defineProperties(e,n),e}(xl),wl=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3],o=e.getContext(),s=r.getContext();this._si.processIntersections(o,n,s,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(yl),bl=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(r)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Il={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};bl.prototype.getEndCapStyle=function(){return this._endCapStyle},bl.prototype.isSingleSided=function(){return this._isSingleSided},bl.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=bl.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=bl.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==bl.JOIN_ROUND&&(this._quadrantSegments=bl.DEFAULT_QUADRANT_SEGMENTS)},bl.prototype.getJoinStyle=function(){return this._joinStyle},bl.prototype.setJoinStyle=function(t){this._joinStyle=t},bl.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},bl.prototype.getSimplifyFactor=function(){return this._simplifyFactor},bl.prototype.getQuadrantSegments=function(){return this._quadrantSegments},bl.prototype.setEndCapStyle=function(t){this._endCapStyle=t},bl.prototype.getMitreLimit=function(){return this._mitreLimit},bl.prototype.setMitreLimit=function(t){this._mitreLimit=t},bl.prototype.setSingleSided=function(t){this._isSingleSided=t},bl.prototype.interfaces_=function(){return[]},bl.prototype.getClass=function(){return bl},bl.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Il.CAP_ROUND.get=function(){return 1},Il.CAP_FLAT.get=function(){return 2},Il.CAP_SQUARE.get=function(){return 3},Il.JOIN_ROUND.get=function(){return 1},Il.JOIN_MITRE.get=function(){return 2},Il.JOIN_BEVEL.get=function(){return 3},Il.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Il.DEFAULT_MITRE_LIMIT.get=function(){return 5},Il.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(bl,Il);var Nl=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=sc.COUNTERCLOCKWISE,this._inputLine=t||null},Cl={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Nl.prototype.isDeletable=function(t,e,n,r){var i=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(i,o,s)&&(!!this.isShallow(i,o,s,r)&&this.isShallowSampled(i,o,t,n,r))},Nl.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),r=!1;n<this._inputLine.length;){var i=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Nl.DELETE,i=!0,r=!0),t=i?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return r},Nl.prototype.isShallowConcavity=function(t,e,n,r){if(!(sc.computeOrientation(t,e,n)===this._angleOrientation))return!1;return sc.distancePointLine(e,t,n)<r},Nl.prototype.isShallowSampled=function(t,e,n,r,i){var o=Math.trunc((r-n)/Nl.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<r;s+=o)if(!this.isShallow(t,e,this._inputLine[s],i))return!1;return!0},Nl.prototype.isConcave=function(t,e,n){var r=sc.computeOrientation(t,e,n)===this._angleOrientation;return r},Nl.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=sc.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Nl.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Nl.DELETE;)e++;return e},Nl.prototype.isShallow=function(t,e,n,r){return sc.distancePointLine(e,t,n)<r},Nl.prototype.collapseLine=function(){for(var t=new Nc,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Nl.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Nl.prototype.interfaces_=function(){return[]},Nl.prototype.getClass=function(){return Nl},Nl.simplify=function(t,e){return new Nl(t).simplify(e)},Cl.INIT.get=function(){return 0},Cl.DELETE.get=function(){return 1},Cl.KEEP.get=function(){return 1},Cl.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Nl,Cl);var Sl=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new bc},Ml={COORDINATE_ARRAY_TYPE:{configurable:!0}};Sl.prototype.getCoordinates=function(){return this._ptList.toArray(Sl.COORDINATE_ARRAY_TYPE)},Sl.prototype.setPrecisionModel=function(t){this._precisionModel=t},Sl.prototype.addPt=function(t){var e=new bu(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},Sl.prototype.revere=function(){},Sl.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var r=t.length-1;r>=0;r--)this.addPt(t[r])},Sl.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},Sl.prototype.toString=function(){return(new _h).createLineString(this.getCoordinates()).toString()},Sl.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new bu(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},Sl.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},Sl.prototype.interfaces_=function(){return[]},Sl.prototype.getClass=function(){return Sl},Ml.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(Sl,Ml);var Ll=function(){},Pl={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Ll.prototype.interfaces_=function(){return[]},Ll.prototype.getClass=function(){return Ll},Ll.toDegrees=function(t){return 180*t/Math.PI},Ll.normalize=function(t){for(;t>Math.PI;)t-=Ll.PI_TIMES_2;for(;t<=-Math.PI;)t+=Ll.PI_TIMES_2;return t},Ll.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],r=n.x-e.x,i=n.y-e.y;return Math.atan2(i,r)}},Ll.isAcute=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)>0},Ll.isObtuse=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)<0},Ll.interiorAngle=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n);return Math.abs(i-r)},Ll.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Ll.PI_TIMES_2;t>=Ll.PI_TIMES_2&&(t=0)}else{for(;t>=Ll.PI_TIMES_2;)t-=Ll.PI_TIMES_2;t<0&&(t=0)}return t},Ll.angleBetween=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n);return Ll.diff(r,i)},Ll.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Ll.toRadians=function(t){return t*Math.PI/180},Ll.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Ll.COUNTERCLOCKWISE:n<0?Ll.CLOCKWISE:Ll.NONE},Ll.angleBetweenOriented=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n)-r;return i<=-Math.PI?i+Ll.PI_TIMES_2:i>Math.PI?i-Ll.PI_TIMES_2:i},Pl.PI_TIMES_2.get=function(){return 2*Math.PI},Pl.PI_OVER_2.get=function(){return Math.PI/2},Pl.PI_OVER_4.get=function(){return Math.PI/4},Pl.COUNTERCLOCKWISE.get=function(){return sc.COUNTERCLOCKWISE},Pl.CLOCKWISE.get=function(){return sc.CLOCKWISE},Pl.NONE.get=function(){return sc.COLLINEAR},Object.defineProperties(Ll,Pl);var Ol=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new gl,this._seg1=new gl,this._offset0=new gl,this._offset1=new gl,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rc,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===bl.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(r)},Rl={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Ol.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=sc.computeOrientation(this._s0,this._s1,this._s2),r=n===sc.CLOCKWISE&&this._side===Nh.LEFT||n===sc.COUNTERCLOCKWISE&&this._side===Nh.RIGHT;0===n?this.addCollinear(e):r?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Ol.prototype.addLineEndCap=function(t,e){var n=new gl(t,e),r=new gl;this.computeOffsetSegment(n,Nh.LEFT,this._distance,r);var i=new gl;this.computeOffsetSegment(n,Nh.RIGHT,this._distance,i);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case bl.CAP_ROUND:this._segList.addPt(r.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,sc.CLOCKWISE,this._distance),this._segList.addPt(i.p1);break;case bl.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(i.p1);break;case bl.CAP_SQUARE:var u=new bu;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var c=new bu(r.p1.x+u.x,r.p1.y+u.y),h=new bu(i.p1.x+u.x,i.p1.y+u.y);this._segList.addPt(c),this._segList.addPt(h)}},Ol.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Ol.prototype.addMitreJoin=function(t,e,n,r){var i=!0,o=null;try{o=Uu.intersection(e.p0,e.p1,n.p0,n.p1);(r<=0?1:o.distance(t)/Math.abs(r))>this._bufParams.getMitreLimit()&&(i=!1)}catch(t){if(!(t instanceof ju))throw t;o=new bu(0,0),i=!1}i?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,r,this._bufParams.getMitreLimit())},Ol.prototype.addFilletCorner=function(t,e,n,r,i){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,c=n.y-t.y,h=Math.atan2(c,u);r===sc.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,h,r,i),this._segList.addPt(n)},Ol.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Ol.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===bl.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===bl.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Ol.prototype.createSquare=function(t){this._segList.addPt(new bu(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new bu(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new bu(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new bu(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Ol.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Ol.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Ol.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Ol.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Ol.prototype.addLimitedMitreJoin=function(t,e,n,r){var i=this._seg0.p1,o=Ll.angle(i,this._seg0.p0),s=Ll.angleBetweenOriented(this._seg0.p0,i,this._seg1.p1)/2,a=Ll.normalize(o+s),u=Ll.normalize(a+Math.PI),c=r*n,h=n-c*Math.abs(Math.sin(s)),l=i.x+c*Math.cos(u),p=i.y+c*Math.sin(u),f=new bu(l,p),g=new gl(i,f),d=g.pointAlongOffset(1,h),y=g.pointAlongOffset(1,-h);this._side===Nh.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Ol.prototype.computeOffsetSegment=function(t,e,n,r){var i=e===Nh.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=i*n*o/a,c=i*n*s/a;r.p0.x=t.p0.x-c,r.p0.y=t.p0.y+u,r.p1.x=t.p1.x-c,r.p1.y=t.p1.y+u},Ol.prototype.addFilletArc=function(t,e,n,r,i){var o=r===sc.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,c=0,h=new bu;c<s;){var l=e+o*c;h.x=t.x+i*Math.cos(l),h.y=t.y+i*Math.sin(l),this._segList.addPt(h),c+=u}},Ol.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Ol.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new bu((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var r=new bu((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Ol.prototype.createCircle=function(t){var e=new bu(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Ol.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Ol.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new Sl,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Ol.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Ol.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===bl.JOIN_BEVEL||this._bufParams.getJoinStyle()===bl.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,sc.CLOCKWISE,this._distance))},Ol.prototype.closeRing=function(){this._segList.closeRing()},Ol.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Ol.prototype.interfaces_=function(){return[]},Ol.prototype.getClass=function(){return Ol},Rl.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Rl.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Rl.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Rl.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Ol,Rl);var Tl=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Tl.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,r=Math.abs(e),i=this.getSegGen(r);t.length<=1?this.computePointCurve(t[0],i):this.computeOffsetCurve(t,n,i);var o=i.getCoordinates();return n&&Cc.reverse(o),o},Tl.prototype.computeSingleSidedBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var i=Nl.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Nh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{n.addSegments(t,!1);var a=Nl.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Nh.LEFT),n.addFirstSegment();for(var c=2;c<=u;c++)n.addNextSegment(a[c],!0)}n.addLastSegment(),n.closeRing()},Tl.prototype.computeRingBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);e===Nh.RIGHT&&(r=-r);var i=Nl.simplify(t,r),o=i.length-1;n.initSideSegments(i[o-1],i[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(i[s],a)}n.closeRing()},Tl.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),r=Nl.simplify(t,n),i=r.length-1;e.initSideSegments(r[0],r[1],Nh.LEFT);for(var o=2;o<=i;o++)e.addNextSegment(r[o],!0);e.addLastSegment(),e.addLineEndCap(r[i-1],r[i]);var s=Nl.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Nh.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Tl.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case bl.CAP_ROUND:e.createCircle(t);break;case bl.CAP_SQUARE:e.createSquare(t)}},Tl.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),r=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],r);else if(this._bufParams.isSingleSided()){var i=e<0;this.computeSingleSidedBufferCurve(t,i,r)}else this.computeLineBufferCurve(t,r);return r.getCoordinates()},Tl.prototype.getBufferParameters=function(){return this._bufParams},Tl.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Tl.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Tl.copyCoordinates(t);var r=this.getSegGen(n);return this.computeRingBufferCurve(t,e,r),r.getCoordinates()},Tl.prototype.computeOffsetCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){var i=Nl.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Nh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{var a=Nl.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Nh.LEFT),n.addFirstSegment();for(var c=2;c<=u;c++)n.addNextSegment(a[c],!0)}n.addLastSegment()},Tl.prototype.getSegGen=function(t){return new Ol(this._precisionModel,this._bufParams,t)},Tl.prototype.interfaces_=function(){return[]},Tl.prototype.getClass=function(){return Tl},Tl.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new bu(t[n]);return e};var Al=function(){this._subgraphs=null,this._seg=new gl,this._cga=new sc;var t=arguments[0];this._subgraphs=t},Dl={DepthSegment:{configurable:!0}};Al.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new bc,n=this._subgraphs.iterator();n.hasNext();){var r=n.next(),i=r.getEnvelope();t.y<i.getMinY()||t.y>i.getMaxY()||this.findStabbedSegments(t,r.getDirectedEdges(),e)}return e}if(3===arguments.length)if(Lu(arguments[2],wc)&&arguments[0]instanceof bu&&arguments[1]instanceof jh)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),c=0;c<u.length-1;c++){this._seg.p0=u[c],this._seg.p1=u[c+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||sc.computeOrientation(this._seg.p0,this._seg.p1,o)===sc.RIGHT)){var h=s.getDepth(Nh.LEFT);this._seg.p0.equals(u[c])||(h=s.getDepth(Nh.RIGHT));var l=new Fl(this._seg,h);a.add(l)}}else if(Lu(arguments[2],wc)&&arguments[0]instanceof bu&&Lu(arguments[1],wc))for(var p=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(p,y,g)}},Al.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $h.min(e)._leftDepth},Al.prototype.interfaces_=function(){return[]},Al.prototype.getClass=function(){return Al},Dl.DepthSegment.get=function(){return Fl},Object.defineProperties(Al,Dl);var Fl=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new gl(t),this._leftDepth=e};Fl.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Fl.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Fl.prototype.toString=function(){return this._upwardSeg.toString()},Fl.prototype.interfaces_=function(){return[xu]},Fl.prototype.getClass=function(){return Fl};var ql=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};ql.prototype.area=function(){return ql.area(this.p0,this.p1,this.p2)},ql.prototype.signedArea=function(){return ql.signedArea(this.p0,this.p1,this.p2)},ql.prototype.interpolateZ=function(t){if(null===t)throw new _u(\"Supplied point is null.\");return ql.interpolateZ(t,this.p0,this.p1,this.p2)},ql.prototype.longestSideLength=function(){return ql.longestSideLength(this.p0,this.p1,this.p2)},ql.prototype.isAcute=function(){return ql.isAcute(this.p0,this.p1,this.p2)},ql.prototype.circumcentre=function(){return ql.circumcentre(this.p0,this.p1,this.p2)},ql.prototype.area3D=function(){return ql.area3D(this.p0,this.p1,this.p2)},ql.prototype.centroid=function(){return ql.centroid(this.p0,this.p1,this.p2)},ql.prototype.inCentre=function(){return ql.inCentre(this.p0,this.p1,this.p2)},ql.prototype.interfaces_=function(){return[]},ql.prototype.getClass=function(){return ql},ql.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},ql.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},ql.det=function(t,e,n,r){return t*r-e*n},ql.interpolateZ=function(t,e,n,r){var i=e.x,o=e.y,s=n.x-i,a=r.x-i,u=n.y-o,c=r.y-o,h=s*c-a*u,l=t.x-i,p=t.y-o,f=(c*l-a*p)/h,g=(-u*l+s*p)/h;return e.z+f*(n.z-e.z)+g*(r.z-e.z)},ql.longestSideLength=function(t,e,n){var r=t.distance(e),i=e.distance(n),o=n.distance(t),s=r;return i>s&&(s=i),o>s&&(s=o),s},ql.isAcute=function(t,e,n){return!!Ll.isAcute(t,e,n)&&(!!Ll.isAcute(e,n,t)&&!!Ll.isAcute(n,t,e))},ql.circumcentre=function(t,e,n){var r=n.x,i=n.y,o=t.x-r,s=t.y-i,a=e.x-r,u=e.y-i,c=2*ql.det(o,s,a,u),h=ql.det(s,o*o+s*s,u,a*a+u*u),l=ql.det(o,o*o+s*s,a,a*a+u*u);return new bu(r-h/c,i+l/c)},ql.perpendicularBisector=function(t,e){var n=e.x-t.x,r=e.y-t.y,i=new Uu(t.x+n/2,t.y+r/2,1),o=new Uu(t.x-r+n/2,t.y+n+r/2,1);return new Uu(i,o)},ql.angleBisector=function(t,e,n){var r=e.distance(t),i=r/(r+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new bu(t.x+i*o,t.y+i*s)},ql.area3D=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,c=i*u-o*a,h=o*s-r*u,l=r*a-i*s,p=c*c+h*h+l*l,f=Math.sqrt(p)/2;return f},ql.centroid=function(t,e,n){var r=(t.x+e.x+n.x)/3,i=(t.y+e.y+n.y)/3;return new bu(r,i)},ql.inCentre=function(t,e,n){var r=e.distance(n),i=t.distance(n),o=t.distance(e),s=r+i+o,a=(r*t.x+i*e.x+o*n.x)/s,u=(r*t.y+i*e.y+o*n.y)/s;return new bu(a,u)};var Gl=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new bc;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Gl.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Su.EXTERIOR,Su.INTERIOR)},Gl.prototype.addPolygon=function(t){var e=this._distance,n=Nh.LEFT;this._distance<0&&(e=-this._distance,n=Nh.RIGHT);var r=t.getExteriorRing(),i=Cc.removeRepeatedPoints(r.getCoordinates());if(this._distance<0&&this.isErodedCompletely(r,this._distance))return null;if(this._distance<=0&&i.length<3)return null;this.addPolygonRing(i,e,n,Su.EXTERIOR,Su.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Cc.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Nh.opposite(n),Su.INTERIOR,Su.EXTERIOR)}},Gl.prototype.isTriangleErodedCompletely=function(t,e){var n=new ql(t[0],t[1],t[2]),r=n.inCentre();return sc.distancePointLine(r,n.p0,n.p1)<Math.abs(e)},Gl.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Cc.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Su.EXTERIOR,Su.INTERIOR)},Gl.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var r=new fl(t,new Rh(0,Su.BOUNDARY,e,n));this._curveList.add(r)},Gl.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Gl.prototype.addPolygonRing=function(t,e,n,r,i){if(0===e&&t.length<eh.MINIMUM_VALID_SIZE)return null;var o=r,s=i;t.length>=eh.MINIMUM_VALID_SIZE&&sc.isCCW(t)&&(o=i,s=r,n=Nh.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Gl.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $c?this.addPolygon(t):t instanceof Jc?this.addLineString(t):t instanceof Kc?this.addPoint(t):t instanceof th?this.addCollection(t):t instanceof Xc?this.addCollection(t):t instanceof nh?this.addCollection(t):t instanceof jc&&this.addCollection(t)},Gl.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var r=t.getEnvelopeInternal(),i=Math.min(r.getHeight(),r.getWidth());return e<0&&2*Math.abs(e)>i},Gl.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Gl.prototype.interfaces_=function(){return[]},Gl.prototype.getClass=function(){return Gl};var Bl=function(){};Bl.prototype.locate=function(t){},Bl.prototype.interfaces_=function(){return[]},Bl.prototype.getClass=function(){return Bl};var kl=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};kl.prototype.next=function(){if(this._atStart)return this._atStart=!1,kl.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new Pi;var t=this._parent.getGeometryN(this._index++);return t instanceof jc?(this._subcollectionIterator=new kl(t),this._subcollectionIterator.next()):t},kl.prototype.remove=function(){throw new Error(this.getClass().getName())},kl.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},kl.prototype.interfaces_=function(){return[Ec]},kl.prototype.getClass=function(){return kl},kl.isAtomic=function(t){return!(t instanceof jc)};var zl=function(){this._geom=null;var t=arguments[0];this._geom=t};zl.prototype.locate=function(t){return zl.locate(t,this._geom)},zl.prototype.interfaces_=function(){return[Bl]},zl.prototype.getClass=function(){return zl},zl.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&sc.isPointInRing(t,e.getCoordinates())},zl.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zl.isPointInRing(t,n))return!1;for(var r=0;r<e.getNumInteriorRing();r++){var i=e.getInteriorRingN(r);if(zl.isPointInRing(t,i))return!1}return!0},zl.containsPoint=function(t,e){if(e instanceof $c)return zl.containsPointInPolygon(t,e);if(e instanceof jc)for(var n=new kl(e);n.hasNext();){var r=n.next();if(r!==e&&zl.containsPoint(t,r))return!0}return!1},zl.locate=function(t,e){return e.isEmpty()?Su.EXTERIOR:zl.containsPoint(t,e)?Su.INTERIOR:Su.EXTERIOR};var jl=function(){this._edgeMap=new Gi,this._edgeList=null,this._ptInAreaLocation=[Su.NONE,Su.NONE]};jl.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},jl.prototype.propagateSideLabels=function(t){for(var e=Su.NONE,n=this.iterator();n.hasNext();){var r=n.next().getLabel();r.isArea(t)&&r.getLocation(t,Nh.LEFT)!==Su.NONE&&(e=r.getLocation(t,Nh.LEFT))}if(e===Su.NONE)return null;for(var i=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Nh.ON)===Su.NONE&&a.setLocation(t,Nh.ON,i),a.isArea(t)){var u=a.getLocation(t,Nh.LEFT),c=a.getLocation(t,Nh.RIGHT);if(c!==Su.NONE){if(c!==i)throw new Mh(\"side location conflict\",s.getCoordinate());u===Su.NONE&&tc.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),i=u}else tc.isTrue(a.getLocation(t,Nh.LEFT)===Su.NONE,\"found single null side\"),a.setLocation(t,Nh.RIGHT,i),a.setLocation(t,Nh.LEFT,i)}}},jl.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},jl.prototype.print=function(t){Xu.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},jl.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},jl.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,r=e.get(n).getLabel().getLocation(t,Nh.LEFT);tc.isTrue(r!==Su.NONE,\"Found unlabelled area edge\");for(var i=r,o=this.iterator();o.hasNext();){var s=o.next().getLabel();tc.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,Nh.LEFT),u=s.getLocation(t,Nh.RIGHT);if(a===u)return!1;if(u!==i)return!1;i=a}return!0},jl.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},jl.prototype.iterator=function(){return this.getEdges().iterator()},jl.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new bc(this._edgeMap.values())),this._edgeList},jl.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===Su.NONE&&(this._ptInAreaLocation[t]=zl.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},jl.prototype.toString=function(){var t=new Ru;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},jl.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},jl.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var r=n.next().getLabel(),i=0;i<2;i++)r.isLine(i)&&r.getLocation(i)===Su.BOUNDARY&&(e[i]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var c=Su.NONE;if(e[u])c=Su.EXTERIOR;else{var h=s.getCoordinate();c=this.getLocation(u,h,t)}a.setAllLocationsIfNull(u,c)}},jl.prototype.getDegree=function(){return this._edgeMap.size()},jl.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},jl.prototype.interfaces_=function(){return[]},jl.prototype.getClass=function(){return jl};var Xl=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,r=0;r<this._resultAreaEdgeList.size();r++){var i=this._resultAreaEdgeList.get(r),o=i.getSym();if(i.getLabel().isArea())switch(null===t&&i.isInResult()&&(t=i),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!i.isInResult())continue;e.setNext(i),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new Mh(\"no outgoing dirEdge found\",this.getCoordinate());tc.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var r=t.get(e-1),i=n.getQuadrant(),o=r.getQuadrant();return Bh.isNorthern(i)&&Bh.isNorthern(o)?n:Bh.isNorthern(i)||Bh.isNorthern(o)?0!==n.getDy()?n:0!==r.getDy()?r:(tc.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):r},e.prototype.print=function(t){Xu.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new bc;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var r=this._edgeList.get(n),i=r.getSym();null===e&&(e=i),null!==t&&i.setNext(t),t=r}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Nh.LEFT),r=t.getDepth(Nh.RIGHT),i=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,i)!==r)throw new Mh(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var c=this._edgeList.get(u);c.setEdgeDepths(Nh.RIGHT,a),a=c.getDepth(Nh.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,r=this._SCANNING_FOR_INCOMING,i=this._resultAreaEdgeList.size()-1;i>=0;i--){var o=this._resultAreaEdgeList.get(i),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),r){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,r=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),r=this._SCANNING_FOR_INCOMING}}r===this._LINKING_TO_OUTGOING&&(tc.isTrue(null!==e,\"found null for first outgoing dirEdge\"),tc.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],r=0,i=this.iterator();i.hasNext();){i.next().getEdgeRing()===n&&r++}return r}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=Su.NONE,e=this.iterator();e.hasNext();){var n=e.next(),r=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=Su.INTERIOR;break}if(r.isInResult()){t=Su.EXTERIOR;break}}}if(t===Su.NONE)return null;for(var i=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(i===Su.INTERIOR):(s.isInResult()&&(i=Su.EXTERIOR),a.isInResult()&&(i=Su.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Rh(Su.NONE);for(var n=this.iterator();n.hasNext();)for(var r=n.next().getEdge().getLabel(),i=0;i<2;i++){var o=r.getLocation(i);o!==Su.INTERIOR&&o!==Su.BOUNDARY||this._label.setLocation(i,Su.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(jl),Ul=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new qh(t,new Xl)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xh),Yl=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};Yl.prototype.compareTo=function(t){var e=t;return Yl.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},Yl.prototype.interfaces_=function(){return[xu]},Yl.prototype.getClass=function(){return Yl},Yl.orientation=function(t){return 1===Cc.increasingDirection(t)},Yl.compareOriented=function(t,e,n,r){for(var i=e?1:-1,o=r?1:-1,s=e?t.length:-1,a=r?n.length:-1,u=e?0:t.length-1,c=r?0:n.length-1;;){var h=t[u].compareTo(n[c]);if(0!==h)return h;var l=(u+=i)===s,p=(c+=o)===a;if(l&&!p)return-1;if(!l&&p)return 1;if(l&&p)return 0}};var Vl=function(){this._edges=new bc,this._ocaMap=new Gi};Vl.prototype.print=function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var r=n.getCoordinates(),i=0;i<r.length;i++)i>0&&t.print(\",\"),t.print(r[i].x+\" \"+r[i].y);t.println(\")\")}t.print(\")  \")},Vl.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Vl.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Vl.prototype.iterator=function(){return this._edges.iterator()},Vl.prototype.getEdges=function(){return this._edges},Vl.prototype.get=function(t){return this._edges.get(t)},Vl.prototype.findEqualEdge=function(t){var e=new Yl(t.getCoordinates());return this._ocaMap.get(e)},Vl.prototype.add=function(t){this._edges.add(t);var e=new Yl(t.getCoordinates());this._ocaMap.put(e,t)},Vl.prototype.interfaces_=function(){return[]},Vl.prototype.getClass=function(){return Vl};var Hl=function(){};Hl.prototype.processIntersections=function(t,e,n,r){},Hl.prototype.isDone=function(){},Hl.prototype.interfaces_=function(){return[]},Hl.prototype.getClass=function(){return Hl};var Wl=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Wl.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(Wl.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.size()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},Wl.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Wl.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Wl.prototype.getLineIntersector=function(){return this._li},Wl.prototype.hasProperIntersection=function(){return this._hasProper},Wl.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Wl.prototype.hasIntersection=function(){return this._hasIntersection},Wl.prototype.isDone=function(){return!1},Wl.prototype.hasInteriorIntersection=function(){return this._hasInterior},Wl.prototype.interfaces_=function(){return[Hl]},Wl.prototype.getClass=function(){return Wl},Wl.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jl=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new bu(t),this.segmentIndex=e,this.dist=n};Jl.prototype.getSegmentIndex=function(){return this.segmentIndex},Jl.prototype.getCoordinate=function(){return this.coord},Jl.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},Jl.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jl.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jl.prototype.toString=function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},Jl.prototype.getDistance=function(){return this.dist},Jl.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jl.prototype.interfaces_=function(){return[xu]},Jl.prototype.getClass=function(){return Jl};var Zl=function(){this._nodeMap=new Gi,this.edge=null;var t=arguments[0];this.edge=t};Zl.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Zl.prototype.iterator=function(){return this._nodeMap.values().iterator()},Zl.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},Zl.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Zl.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this.edge.pts[e.segmentIndex],i=e.dist>0||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new bu(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return i&&(o[s]=e.coord),new ep(o,new Rh(this.edge._label))},Zl.prototype.add=function(t,e,n){var r=new Jl(t,e,n),i=this._nodeMap.get(r);return null!==i?i:(this._nodeMap.put(r,r),r)},Zl.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Zl.prototype.interfaces_=function(){return[]},Zl.prototype.getClass=function(){return Zl};var Kl=function(){};Kl.prototype.getChainStartIndices=function(t){var e=0,n=new bc;n.add(new Tu(e));do{var r=this.findChainEnd(t,e);n.add(new Tu(r)),e=r}while(e<t.length-1);return Kl.toIntArray(n)},Kl.prototype.findChainEnd=function(t,e){for(var n=Bh.quadrant(t[e],t[e+1]),r=e+1;r<t.length;){if(Bh.quadrant(t[r-1],t[r])!==n)break;r++}return r-1},Kl.prototype.interfaces_=function(){return[]},Kl.prototype.getClass=function(){return Kl},Kl.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var Ql=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Yu,this.env2=new Yu;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Kl;this.startIndex=e.getChainStartIndices(this.pts)};Ql.prototype.getCoordinates=function(){return this.pts},Ql.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},Ql.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},Ql.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],r)}else if(6===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],c=arguments[5],h=this.pts[i],l=this.pts[o],p=s.pts[a],f=s.pts[u];if(o-i==1&&u-a==1)return c.addIntersections(this.e,i,s.e,a),null;if(this.env1.init(h,l),this.env2.init(p,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((i+o)/2),d=Math.trunc((a+u)/2);i<g&&(a<d&&this.computeIntersectsForChain(i,g,s,a,d,c),d<u&&this.computeIntersectsForChain(i,g,s,d,u,c)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,c),d<u&&this.computeIntersectsForChain(g,o,s,d,u,c))}},Ql.prototype.getStartIndexes=function(){return this.startIndex},Ql.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var r=0;r<t.startIndex.length-1;r++)this.computeIntersectsForChain(n,t,r,e)},Ql.prototype.interfaces_=function(){return[]},Ql.prototype.getClass=function(){return Ql};var $l=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},tp={NULL_VALUE:{configurable:!0}};$l.prototype.getDepth=function(t,e){return this._depth[t][e]},$l.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},$l.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==$l.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===$l.NULL_VALUE}if(2===arguments.length){var r=arguments[0],i=arguments[1];return this._depth[r][i]===$l.NULL_VALUE}},$l.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var r=0;this._depth[t][n]>e&&(r=1),this._depth[t][n]=r}}},$l.prototype.getDelta=function(t){return this._depth[t][Nh.RIGHT]-this._depth[t][Nh.LEFT]},$l.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?Su.EXTERIOR:Su.INTERIOR},$l.prototype.toString=function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]},$l.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var r=t.getLocation(e,n);r!==Su.EXTERIOR&&r!==Su.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=$l.depthAtLocation(r):this._depth[e][n]+=$l.depthAtLocation(r))}else if(3===arguments.length){var i=arguments[0],o=arguments[1];arguments[2]===Su.INTERIOR&&this._depth[i][o]++}},$l.prototype.interfaces_=function(){return[]},$l.prototype.getClass=function(){return $l},$l.depthAtLocation=function(t){return t===Su.EXTERIOR?0:t===Su.INTERIOR?1:$l.NULL_VALUE},tp.NULL_VALUE.get=function(){return-1},Object.defineProperties($l,tp);var ep=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Zl(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new $l,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.pts=r,this._label=i}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Rh.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var r=!0,i=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(r=!1),this.pts[s].equals2D(n.pts[--o])||(i=!1),!r&&!i)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new Ql(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new Yu;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,r){var i=new bu(t.getIntersection(r)),o=e,s=t.getEdgeDistance(n,r),a=o+1;if(a<this.pts.length){var u=this.pts[a];i.equals2D(u)&&(o=a,s=0)}this.eiList.add(i,o,s)},e.prototype.toString=function(){var t=new Ru;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Nh.ON),e.getLocation(1,Nh.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Nh.LEFT),e.getLocation(1,Nh.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Nh.RIGHT),e.getLocation(1,Nh.RIGHT),2))},e}(Fh),np=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Vl,this._bufParams=t||null};np.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},np.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Rh(t.getLabel())).flip(),n.merge(r);var i=np.depthDelta(r),o=e.getDepthDelta()+i;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(np.depthDelta(t.getLabel()))},np.prototype.buildSubgraphs=function(t,e){for(var n=new bc,r=t.iterator();r.hasNext();){var i=r.next(),o=i.getRightmostCoordinate(),s=new Al(n).getDepth(o);i.computeDepth(s),i.findResultEdges(),n.add(i),e.add(i.getDirectedEdges(),i.getNodes())}},np.prototype.createSubgraphs=function(t){for(var e=new bc,n=t.getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isVisited()){var i=new Ph;i.create(r),e.add(i)}}return $h.sort(e,$h.reverseOrder()),e},np.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},np.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new El,n=new rc;return n.setPrecisionModel(t),e.setSegmentIntersector(new Wl(n)),e},np.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var r=new Tl(n,this._bufParams),i=new Gl(t,e,r).getCurves();if(i.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(i,n),this._graph=new Uh(new Ul),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new Yh(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},np.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var r=n.getNodedSubstrings().iterator();r.hasNext();){var i=r.next(),o=i.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=i.getData(),a=new ep(i.getCoordinates(),new Rh(s));this.insertUniqueEdge(a)}}},np.prototype.setNoder=function(t){this._workingNoder=t},np.prototype.interfaces_=function(){return[]},np.prototype.getClass=function(){return np},np.depthDelta=function(t){var e=t.getLocation(0,Nh.LEFT),n=t.getLocation(0,Nh.RIGHT);return e===Su.INTERIOR&&n===Su.EXTERIOR?1:e===Su.EXTERIOR&&n===Su.INTERIOR?-1:0},np.convertSegStrings=function(t){for(var e=new _h,n=new bc;t.hasNext();){var r=t.next(),i=e.createLineString(r.getCoordinates());n.add(i)}return e.buildGeometry(n)};var rp=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=r,this._offsetX=i,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};rp.prototype.rescale=function(){if(Lu(arguments[0],vc))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],r=0;r<n.length;r++)n[r].x=n[r].x/this._scaleFactor+this._offsetX,n[r].y=n[r].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Xu.out.println(n)}},rp.prototype.scale=function(){if(Lu(arguments[0],vc)){for(var t=arguments[0],e=new bc,n=t.iterator();n.hasNext();){var r=n.next();e.add(new fl(this.scale(r.getCoordinates()),r.getData()))}return e}if(arguments[0]instanceof Array){for(var i=arguments[0],o=new Array(i.length).fill(null),s=0;s<i.length;s++)o[s]=new bu(Math.round((i[s].x-this._offsetX)*this._scaleFactor),Math.round((i[s].y-this._offsetY)*this._scaleFactor),i[s].z);return Cc.removeRepeatedPoints(o)}},rp.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},rp.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},rp.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},rp.prototype.interfaces_=function(){return[vl]},rp.prototype.getClass=function(){return rp};var ip=function(){this._li=new rc,this._segStrings=null;var t=arguments[0];this._segStrings=t},op={fact:{configurable:!0}};ip.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],r=arguments[1].iterator();r.hasNext();)for(var i=r.next().getCoordinates(),o=1;o<i.length-1;o++)if(i[o].equals(n))throw new Qu(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)},ip.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var r=n.next();this.checkInteriorIntersections(e,r)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],s=i.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var c=0;c<a.length-1;c++)this.checkInteriorIntersections(i,u,o,c);else if(4===arguments.length){var h=arguments[0],l=arguments[1],p=arguments[2],f=arguments[3];if(h===p&&l===f)return null;var g=h.getCoordinates()[l],d=h.getCoordinates()[l+1],y=p.getCoordinates()[f],_=p.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new Qu(\"found non-noded intersection at \"+g+\"-\"+d+\" and \"+y+\"-\"+_)}},ip.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},ip.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),r=0;r<n.length-2;r++)this.checkCollapse(n[r],n[r+1],n[r+2])},ip.prototype.hasInteriorIntersection=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++){var i=t.getIntersection(r);if(!i.equals(e)&&!i.equals(n))return!0}return!1},ip.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new Qu(\"found non-noded collapse at \"+ip.fact.createLineString([t,e,n]))},ip.prototype.interfaces_=function(){return[]},ip.prototype.getClass=function(){return ip},op.fact.get=function(){return new _h},Object.defineProperties(ip,op);var sp=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new _u(\"Scale factor must be non-zero\");1!==e&&(this._pt=new bu(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new bu,this._p1Scaled=new bu),this.initCorners(this._pt)},ap={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};sp.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),r=Math.max(t.x,e.x),i=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>r||this._maxy<i||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return tc.isTrue(!(s&&a),\"Found bad envelope test\"),a},sp.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new bu(this._maxx,this._maxy),this._corner[1]=new bu(this._minx,this._maxy),this._corner[2]=new bu(this._minx,this._miny),this._corner[3]=new bu(this._maxx,this._miny)},sp.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},sp.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},sp.prototype.getCoordinate=function(){return this._originalPt},sp.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},sp.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=sp.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Yu(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},sp.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},sp.prototype.intersectsToleranceSquare=function(t,e){var n=!1,r=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!r)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},sp.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),r=t.getCoordinate(e+1);return!!this.intersects(n,r)&&(t.addIntersection(this.getCoordinate(),e),!0)},sp.prototype.interfaces_=function(){return[]},sp.prototype.getClass=function(){return sp},ap.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(sp,ap);var up=function(){this.tempEnv1=new Yu,this.selectedSegment=new gl};up.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},up.prototype.interfaces_=function(){return[]},up.prototype.getClass=function(){return up};var cp=function(){this._index=null;var t=arguments[0];this._index=t},hp={HotPixelSnapAction:{configurable:!0}};cp.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=e.getSafeEnvelope(),o=new lp(e,n,r);return this._index.query(i,{interfaces_:function(){return[Jh]},visitItem:function(t){t.select(i,o)}}),o.isNodeAdded()}},cp.prototype.interfaces_=function(){return[]},cp.prototype.getClass=function(){return cp},hp.HotPixelSnapAction.get=function(){return lp},Object.defineProperties(cp,hp);var lp=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],r=e.getContext();if(null!==this._parentEdge&&r===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(r,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(up),pp=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new bc};pp.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];if(this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)}},pp.prototype.isDone=function(){return!1},pp.prototype.getInteriorIntersections=function(){return this._interiorIntersections},pp.prototype.interfaces_=function(){return[Hl]},pp.prototype.getClass=function(){return pp};var fp=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rc,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};fp.prototype.checkCorrectness=function(t){var e=fl.getNodedSubstrings(t),n=new ip(e);try{n.checkValid()}catch(t){if(!(t instanceof zu))throw t;t.printStackTrace()}},fp.prototype.getNodedSubstrings=function(){return fl.getNodedSubstrings(this._nodedSegStrings)},fp.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},fp.prototype.findInteriorIntersections=function(t,e){var n=new pp(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},fp.prototype.computeVertexSnaps=function(){if(Lu(arguments[0],vc))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof fl)for(var n=arguments[0],r=n.getCoordinates(),i=0;i<r.length;i++){var o=new sp(r[i],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,i)&&n.addIntersection(r[i],i)}},fp.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new El,this._pointSnapper=new cp(this._noder.getIndex()),this.snapRound(t,this._li)},fp.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=new sp(n,this._scaleFactor,this._li);this._pointSnapper.snap(r)}},fp.prototype.interfaces_=function(){return[vl]},fp.prototype.getClass=function(){return fp};var gp=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new bl,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},dp={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};gp.prototype.bufferFixedPrecision=function(t){var e=new rp(new fp(new fh(1)),t.getScale()),n=new np(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},gp.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=gp.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof Mh))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],r=gp.precisionScaleFactor(this._argGeom,this._distance,n),i=new fh(r);this.bufferFixedPrecision(i)}},gp.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fh.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},gp.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},gp.prototype.bufferOriginalPrecision=function(){try{var t=new np(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof Qu))throw t;this._saveException=t}},gp.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},gp.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},gp.prototype.interfaces_=function(){return[]},gp.prototype.getClass=function(){return gp},gp.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new gp(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof cc&&\"number\"==typeof arguments[1]){var n=arguments[0],r=arguments[1],i=arguments[2],o=new gp(n);o.setQuadrantSegments(i);return o.getResultGeometry(r)}if(arguments[2]instanceof bl&&arguments[0]instanceof cc&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new gp(s,u).getResultGeometry(a)}}else if(4===arguments.length){var c=arguments[0],h=arguments[1],l=arguments[2],p=arguments[3],f=new gp(c);f.setQuadrantSegments(l),f.setEndCapStyle(p);return f.getResultGeometry(h)}},gp.precisionScaleFactor=function(t,e,n){var r=t.getEnvelopeInternal(),i=Pu.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(i)/Math.log(10)+1);return Math.pow(10,o)},dp.CAP_ROUND.get=function(){return bl.CAP_ROUND},dp.CAP_BUTT.get=function(){return bl.CAP_FLAT},dp.CAP_FLAT.get=function(){return bl.CAP_FLAT},dp.CAP_SQUARE.get=function(){return bl.CAP_SQUARE},dp.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(gp,dp);var yp=function(){this._pt=[new bu,new bu],this._distance=mu.NaN,this._isNull=!0};yp.prototype.getCoordinates=function(){return this._pt},yp.prototype.getCoordinate=function(t){return this._pt[t]},yp.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},yp.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},yp.prototype.getDistance=function(){return this._distance},yp.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},yp.prototype.interfaces_=function(){return[]},yp.prototype.getClass=function(){return yp};var _p=function(){};_p.prototype.interfaces_=function(){return[]},_p.prototype.getClass=function(){return _p},_p.computeDistance=function(){if(arguments[2]instanceof yp&&arguments[0]instanceof Jc&&arguments[1]instanceof bu)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=t.getCoordinates(),i=new gl,o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof yp&&arguments[0]instanceof $c&&arguments[1]instanceof bu){var a=arguments[0],u=arguments[1],c=arguments[2];_p.computeDistance(a.getExteriorRing(),u,c);for(var h=0;h<a.getNumInteriorRing();h++)_p.computeDistance(a.getInteriorRingN(h),u,c)}else if(arguments[2]instanceof yp&&arguments[0]instanceof cc&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1],f=arguments[2];if(l instanceof Jc)_p.computeDistance(l,p,f);else if(l instanceof $c)_p.computeDistance(l,p,f);else if(l instanceof jc)for(var g=l,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);_p.computeDistance(y,p,f)}else f.setMinimum(l.getCoordinate(),p)}else if(arguments[2]instanceof yp&&arguments[0]instanceof gl&&arguments[1]instanceof bu){var _=arguments[0],m=arguments[1],v=arguments[2],x=_.closestPoint(m);v.setMinimum(x,m)}};var mp=function(t){this._maxPtDist=new yp,this._inputGeom=t||null},vp={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};mp.prototype.computeMaxMidpointDistance=function(t){var e=new Ep(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},mp.prototype.computeMaxVertexDistance=function(t){var e=new xp(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},mp.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},mp.prototype.getDistancePoints=function(){return this._maxPtDist},mp.prototype.interfaces_=function(){return[]},mp.prototype.getClass=function(){return mp},vp.MaxPointDistanceFilter.get=function(){return xp},vp.MaxMidpointDistanceFilter.get=function(){return Ep},Object.defineProperties(mp,vp);var xp=function(t){this._maxPtDist=new yp,this._minPtDist=new yp,this._geom=t||null};xp.prototype.filter=function(t){this._minPtDist.initialize(),_p.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xp.prototype.getMaxPointDistance=function(){return this._maxPtDist},xp.prototype.interfaces_=function(){return[pc]},xp.prototype.getClass=function(){return xp};var Ep=function(t){this._maxPtDist=new yp,this._minPtDist=new yp,this._geom=t||null};Ep.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),r=t.getCoordinate(e),i=new bu((n.x+r.x)/2,(n.y+r.y)/2);this._minPtDist.initialize(),_p.computeDistance(this._geom,i,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ep.prototype.isDone=function(){return!1},Ep.prototype.isGeometryChanged=function(){return!1},Ep.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ep.prototype.interfaces_=function(){return[zc]},Ep.prototype.getClass=function(){return Ep};var wp=function(t){this._comps=t||null};wp.prototype.filter=function(t){t instanceof $c&&this._comps.add(t)},wp.prototype.interfaces_=function(){return[kc]},wp.prototype.getClass=function(){return wp},wp.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return wp.getPolygons(t,new bc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $c?n.add(e):e instanceof jc&&e.apply(new wp(n)),n}};var bp=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};bp.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof eh){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Jc&&this._lines.add(t)},bp.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},bp.prototype.interfaces_=function(){return[uc]},bp.prototype.getClass=function(){return bp},bp.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(bp.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(bp.getLines(e,n))}},bp.getLines=function(){if(1===arguments.length){var t=arguments[0];return bp.getLines(t,!1)}if(2===arguments.length){if(Lu(arguments[0],vc)&&Lu(arguments[1],vc)){for(var e=arguments[0],n=arguments[1],r=e.iterator();r.hasNext();){var i=r.next();bp.getLines(i,n)}return n}if(arguments[0]instanceof cc&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new bc;return o.apply(new bp(a,s)),a}if(arguments[0]instanceof cc&&Lu(arguments[1],vc)){var u=arguments[0],c=arguments[1];return u instanceof Jc?c.add(u):u.apply(new bp(c)),c}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&Lu(arguments[0],vc)&&Lu(arguments[1],vc)){for(var h=arguments[0],l=arguments[1],p=arguments[2],f=h.iterator();f.hasNext();){var g=f.next();bp.getLines(g,l,p)}return l}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof cc&&Lu(arguments[1],vc)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new bp(y,_)),y}}};var Ip=function(){if(this._boundaryRule=fc.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new _u(\"Rule must be non-null\");this._boundaryRule=t}};Ip.prototype.locateInternal=function(){if(arguments[0]instanceof bu&&arguments[1]instanceof $c){var t=arguments[0],e=arguments[1];if(e.isEmpty())return Su.EXTERIOR;var n=e.getExteriorRing(),r=this.locateInPolygonRing(t,n);if(r===Su.EXTERIOR)return Su.EXTERIOR;if(r===Su.BOUNDARY)return Su.BOUNDARY;for(var i=0;i<e.getNumInteriorRing();i++){var o=e.getInteriorRingN(i),s=this.locateInPolygonRing(t,o);if(s===Su.INTERIOR)return Su.EXTERIOR;if(s===Su.BOUNDARY)return Su.BOUNDARY}return Su.INTERIOR}if(arguments[0]instanceof bu&&arguments[1]instanceof Jc){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return Su.EXTERIOR;var c=u.getCoordinates();return u.isClosed()||!a.equals(c[0])&&!a.equals(c[c.length-1])?sc.isOnLine(a,c)?Su.INTERIOR:Su.EXTERIOR:Su.BOUNDARY}if(arguments[0]instanceof bu&&arguments[1]instanceof Kc){var h=arguments[0];return arguments[1].getCoordinate().equals2D(h)?Su.INTERIOR:Su.EXTERIOR}},Ip.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?sc.locatePointInRing(t,e.getCoordinates()):Su.EXTERIOR},Ip.prototype.intersects=function(t,e){return this.locate(t,e)!==Su.EXTERIOR},Ip.prototype.updateLocationInfo=function(t){t===Su.INTERIOR&&(this._isIn=!0),t===Su.BOUNDARY&&this._numBoundaries++},Ip.prototype.computeLocation=function(t,e){if(e instanceof Kc&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Jc)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $c)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xc)for(var n=e,r=0;r<n.getNumGeometries();r++){var i=n.getGeometryN(r);this.updateLocationInfo(this.locateInternal(t,i))}else if(e instanceof nh)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof jc)for(var u=new kl(e);u.hasNext();){var c=u.next();c!==e&&this.computeLocation(t,c)}},Ip.prototype.locate=function(t,e){return e.isEmpty()?Su.EXTERIOR:e instanceof Jc?this.locateInternal(t,e):e instanceof $c?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?Su.BOUNDARY:this._numBoundaries>0||this._isIn?Su.INTERIOR:Su.EXTERIOR)},Ip.prototype.interfaces_=function(){return[]},Ip.prototype.getClass=function(){return Ip};var Np=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._component=r,this._segIndex=i,this._pt=o}},Cp={INSIDE_AREA:{configurable:!0}};Np.prototype.isInsideArea=function(){return this._segIndex===Np.INSIDE_AREA},Np.prototype.getCoordinate=function(){return this._pt},Np.prototype.getGeometryComponent=function(){return this._component},Np.prototype.getSegmentIndex=function(){return this._segIndex},Np.prototype.interfaces_=function(){return[]},Np.prototype.getClass=function(){return Np},Cp.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Np,Cp);var Sp=function(t){this._pts=t||null};Sp.prototype.filter=function(t){t instanceof Kc&&this._pts.add(t)},Sp.prototype.interfaces_=function(){return[kc]},Sp.prototype.getClass=function(){return Sp},Sp.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Kc?$h.singletonList(t):Sp.getPoints(t,new bc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Kc?n.add(e):e instanceof jc&&e.apply(new Sp(n)),n}};var Mp=function(){this._locations=null;var t=arguments[0];this._locations=t};Mp.prototype.filter=function(t){(t instanceof Kc||t instanceof Jc||t instanceof $c)&&this._locations.add(new Np(t,0,t.getCoordinate()))},Mp.prototype.interfaces_=function(){return[kc]},Mp.prototype.getClass=function(){return Mp},Mp.getLocations=function(t){var e=new bc;return t.apply(new Mp(e)),e};var Lp=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Ip,this._minDistanceLocation=null,this._minDistance=mu.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=r,this._terminateDistance=i}};Lp.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=1-e,i=wp.getPolygons(this._geom[e]);if(i.size()>0){var o=Mp.getLocations(this._geom[r]);if(this.computeContainmentDistance(o,i,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[r]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&Lu(arguments[0],wc)&&Lu(arguments[1],wc)){for(var s=arguments[0],a=arguments[1],u=arguments[2],c=0;c<s.size();c++)for(var h=s.get(c),l=0;l<a.size();l++)if(this.computeContainmentDistance(h,a.get(l),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Np&&arguments[1]instanceof $c){var p=arguments[0],f=arguments[1],g=arguments[2],d=p.getCoordinate();if(Su.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=p,g[1]=new Np(f,d),null}},Lp.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(i,s,n),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=bp.getLines(this._geom[0]),n=bp.getLines(this._geom[1]),r=Sp.getPoints(this._geom[0]),i=Sp.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,i,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,r,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(r,i,t),void this.updateMinDistance(t,!1))))},Lp.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Lp.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Lp.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Lp.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Jc&&arguments[1]instanceof Kc){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var r=t.getCoordinates(),i=e.getCoordinate(),o=0;o<r.length-1;o++){var s=sc.distancePointLine(i,r[o],r[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new gl(r[o],r[o+1]).closestPoint(i);n[0]=new Np(t,o,a),n[1]=new Np(e,0,i)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Jc&&arguments[1]instanceof Jc){var u=arguments[0],c=arguments[1],h=arguments[2];if(u.getEnvelopeInternal().distance(c.getEnvelopeInternal())>this._minDistance)return null;for(var l=u.getCoordinates(),p=c.getCoordinates(),f=0;f<l.length-1;f++)for(var g=0;g<p.length-1;g++){var d=sc.distanceLineLine(l[f],l[f+1],p[g],p[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new gl(l[f],l[f+1]),_=new gl(p[g],p[g+1]),m=y.closestPoints(_);h[0]=new Np(u,f,m[0]),h[1]=new Np(c,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Lp.prototype.computeMinDistancePoints=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o),a=i.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Np(i,0,i.getCoordinate()),n[1]=new Np(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new _u(\"null geometries are not supported\");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Lp.prototype.computeMinDistanceLines=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(i,s,n),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.interfaces_=function(){return[]},Lp.prototype.getClass=function(){return Lp},Lp.distance=function(t,e){return new Lp(t,e).distance()},Lp.isWithinDistance=function(t,e,n){return new Lp(t,e,n).distance()<=n},Lp.nearestPoints=function(t,e){return new Lp(t,e).nearestPoints()};var Pp=function(){this._pt=[new bu,new bu],this._distance=mu.NaN,this._isNull=!0};Pp.prototype.getCoordinates=function(){return this._pt},Pp.prototype.getCoordinate=function(t){return this._pt[t]},Pp.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},Pp.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},Pp.prototype.toString=function(){return Ku.toLineString(this._pt[0],this._pt[1])},Pp.prototype.getDistance=function(){return this._distance},Pp.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},Pp.prototype.interfaces_=function(){return[]},Pp.prototype.getClass=function(){return Pp};var Op=function(){};Op.prototype.interfaces_=function(){return[]},Op.prototype.getClass=function(){return Op},Op.computeDistance=function(){if(arguments[2]instanceof Pp&&arguments[0]instanceof Jc&&arguments[1]instanceof bu)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=new gl,i=t.getCoordinates(),o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof $c&&arguments[1]instanceof bu){var a=arguments[0],u=arguments[1],c=arguments[2];Op.computeDistance(a.getExteriorRing(),u,c);for(var h=0;h<a.getNumInteriorRing();h++)Op.computeDistance(a.getInteriorRingN(h),u,c)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof cc&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1],f=arguments[2];if(l instanceof Jc)Op.computeDistance(l,p,f);else if(l instanceof $c)Op.computeDistance(l,p,f);else if(l instanceof jc)for(var g=l,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Op.computeDistance(y,p,f)}else f.setMinimum(l.getCoordinate(),p)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof gl&&arguments[1]instanceof bu){var _=arguments[0],m=arguments[1],v=arguments[2],x=_.closestPoint(m);v.setMinimum(x,m)}};var Rp=function(){this._g0=null,this._g1=null,this._ptDist=new Pp,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Tp={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Rp.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Rp.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new _u(\"Fraction is not in range (0.0 - 1.0]\");this._densifyFrac=t},Rp.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Rp.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Rp.prototype.computeOrientedDistance=function(t,e,n){var r=new Ap(e);if(t.apply(r),n.setMaximum(r.getMaxPointDistance()),this._densifyFrac>0){var i=new Dp(e,this._densifyFrac);t.apply(i),n.setMaximum(i.getMaxPointDistance())}},Rp.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Rp.prototype.interfaces_=function(){return[]},Rp.prototype.getClass=function(){return Rp},Rp.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Rp(t,e).distance()}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=new Rp(n,r);return o.setDensifyFraction(i),o.distance()}},Tp.MaxPointDistanceFilter.get=function(){return Ap},Tp.MaxDensifiedByFractionDistanceFilter.get=function(){return Dp},Object.defineProperties(Rp,Tp);var Ap=function(){this._maxPtDist=new Pp,this._minPtDist=new Pp,this._euclideanDist=new Op,this._geom=null;var t=arguments[0];this._geom=t};Ap.prototype.filter=function(t){this._minPtDist.initialize(),Op.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ap.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ap.prototype.interfaces_=function(){return[pc]},Ap.prototype.getClass=function(){return Ap};var Dp=function(){this._maxPtDist=new Pp,this._minPtDist=new Pp,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Dp.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),r=t.getCoordinate(e),i=(r.x-n.x)/this._numSubSegs,o=(r.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*i,u=n.y+s*o,c=new bu(a,u);this._minPtDist.initialize(),Op.computeDistance(this._geom,c,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Dp.prototype.isDone=function(){return!1},Dp.prototype.isGeometryChanged=function(){return!1},Dp.prototype.getMaxPointDistance=function(){return this._maxPtDist},Dp.prototype.interfaces_=function(){return[zc]},Dp.prototype.getClass=function(){return Dp};var Fp=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qp={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Fp.prototype.checkMaximumDistance=function(t,e,n){var r=new Rp(e,t);if(r.setDensifyFraction(.25),this._maxDistanceFound=r.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var i=r.getCoordinates();this._errorLocation=i[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg=\"Distance between buffer curve and input is too large (\"+this._maxDistanceFound+\" at \"+Ku.toLineString(i[0],i[1])+\")\"}},Fp.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Fp.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Fp.VERBOSE&&Xu.out.println(\"Min Dist= \"+this._minDistanceFound+\"  err= \"+(1-this._minDistanceFound/this._bufDistance)+\"  Max Dist= \"+this._maxDistanceFound+\"  err= \"+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Fp.prototype.checkNegativeValid=function(){if(!(this._input instanceof $c||this._input instanceof nh||this._input instanceof jc))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Fp.prototype.getErrorIndicator=function(){return this._errorIndicator},Fp.prototype.checkMinimumDistance=function(t,e,n){var r=new Lp(t,e,n);if(this._minDistanceFound=r.distance(),this._minDistanceFound<n){this._isValid=!1;var i=r.nearestPoints();this._errorLocation=r.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg=\"Distance between buffer curve and input is too small (\"+this._minDistanceFound+\" at \"+Ku.toLineString(i[0],i[1])+\" )\"}},Fp.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Fp.prototype.getErrorLocation=function(){return this._errorLocation},Fp.prototype.getPolygonLines=function(t){for(var e=new bc,n=new bp(e),r=wp.getPolygons(t).iterator();r.hasNext();){r.next().apply(n)}return t.getFactory().buildGeometry(e)},Fp.prototype.getErrorMessage=function(){return this._errMsg},Fp.prototype.interfaces_=function(){return[]},Fp.prototype.getClass=function(){return Fp},qp.VERBOSE.get=function(){return!1},qp.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Fp,qp);var Gp=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Bp={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Gp.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Gp.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Gp.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new Yu(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new Yu(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg=\"Buffer envelope is incorrect\",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report(\"Envelope\")},Gp.prototype.checkDistance=function(){var t=new Fp(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report(\"Distance\")},Gp.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg=\"Area of positive buffer is smaller than input\",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg=\"Area of negative buffer is larger than input\",this._errorIndicator=this._result),this.report(\"Area\")},Gp.prototype.checkPolygonal=function(){this._result instanceof $c||this._result instanceof nh||(this._isValid=!1),this._errorMsg=\"Result is not polygonal\",this._errorIndicator=this._result,this.report(\"Polygonal\")},Gp.prototype.getErrorIndicator=function(){return this._errorIndicator},Gp.prototype.getErrorLocation=function(){return this._errorLocation},Gp.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg=\"Result is non-empty\",this._errorIndicator=this._result),void this.report(\"ExpectedEmpty\"))},Gp.prototype.report=function(t){if(!Gp.VERBOSE)return null;Xu.out.println(\"Check \"+t+\": \"+(this._isValid?\"passed\":\"FAILED\"))},Gp.prototype.getErrorMessage=function(){return this._errorMsg},Gp.prototype.interfaces_=function(){return[]},Gp.prototype.getClass=function(){return Gp},Gp.isValidMsg=function(t,e,n){var r=new Gp(t,e,n);return r.isValid()?null:r.getErrorMessage()},Gp.isValid=function(t,e,n){return!!new Gp(t,e,n).isValid()},Bp.VERBOSE.get=function(){return!1},Bp.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gp,Bp);var kp=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};kp.prototype.getCoordinates=function(){return this._pts},kp.prototype.size=function(){return this._pts.length},kp.prototype.getCoordinate=function(t){return this._pts[t]},kp.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},kp.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:hl.octant(this.getCoordinate(t),this.getCoordinate(t+1))},kp.prototype.setData=function(t){this._data=t},kp.prototype.getData=function(){return this._data},kp.prototype.toString=function(){return Ku.toLineString(new uh(this._pts))},kp.prototype.interfaces_=function(){return[ll]},kp.prototype.getClass=function(){return kp};var zp=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new bc,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zp.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zp.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zp.prototype.getIntersectionSegments=function(){return this._intSegments},zp.prototype.count=function(){return this._intersectionCount},zp.prototype.getIntersections=function(){return this._intersections},zp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zp.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zp.prototype.processIntersections=function(t,e,n,r){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===r)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,r)))return null}var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=i,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zp.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zp.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zp.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zp.prototype.interfaces_=function(){return[Hl]},zp.prototype.getClass=function(){return zp},zp.createAllIntersectionsFinder=function(t){var e=new zp(t);return e.setFindAllIntersections(!0),e},zp.createAnyIntersectionFinder=function(t){return new zp(t)},zp.createIntersectionCounter=function(t){var e=new zp(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var jp=function(){this._li=new rc,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};jp.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},jp.prototype.getIntersections=function(){return this._segInt.getIntersections()},jp.prototype.isValid=function(){return this.execute(),this._isValid},jp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},jp.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zp(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new El;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},jp.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new Mh(this.getErrorMessage(),this._segInt.getInteriorIntersection())},jp.prototype.getErrorMessage=function(){if(this._isValid)return\"no intersections found\";var t=this._segInt.getIntersectionSegments();return\"found non-noded intersection between \"+Ku.toLineString(t[0],t[1])+\" and \"+Ku.toLineString(t[2],t[3])},jp.prototype.interfaces_=function(){return[]},jp.prototype.getClass=function(){return jp},jp.computeIntersections=function(t){var e=new jp(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Xp=function t(){this._nv=null;var e=arguments[0];this._nv=new jp(t.toSegmentStrings(e))};Xp.prototype.checkValid=function(){this._nv.checkValid()},Xp.prototype.interfaces_=function(){return[]},Xp.prototype.getClass=function(){return Xp},Xp.toSegmentStrings=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next();e.add(new kp(r.getCoordinates(),r))}return e},Xp.checkValid=function(t){new Xp(t).checkValid()};var Up=function(t){this._mapOp=t};Up.prototype.map=function(t){for(var e=new bc,n=0;n<t.getNumGeometries();n++){var r=this._mapOp.map(t.getGeometryN(n));r.isEmpty()||e.add(r)}return t.getFactory().createGeometryCollection(_h.toGeometryArray(e))},Up.prototype.interfaces_=function(){return[]},Up.prototype.getClass=function(){return Up},Up.map=function(t,e){return new Up(e).map(t)};var Yp=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new bc,this._resultLineList=new bc;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};Yp.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},Yp.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},Yp.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},Yp.prototype.collectLineEdge=function(t,e,n){var r=t.getLabel(),i=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Cf.isResultOfOp(r,e)||i.isCovered()||(n.add(i),t.setVisitedEdge(!0)))},Yp.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),r=n.getEdge();if(n.isLineEdge()&&!r.isCoveredSet()){var i=this._op.isCoveredByA(n.getCoordinate());r.setCovered(i)}}},Yp.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=n.getLabel();n.isIsolated()&&(r.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},Yp.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),r=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(r),n.setInResult(!0)}},Yp.prototype.collectBoundaryTouchEdge=function(t,e,n){var r=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(tc.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Cf.isResultOfOp(r,e)&&e===Cf.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},Yp.prototype.interfaces_=function(){return[]},Yp.prototype.getClass=function(){return Yp};var Vp=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new bc;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Vp.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Vp.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Cf.INTERSECTION))){var r=n.getLabel();Cf.isResultOfOp(r,t)&&this.filterCoveredNodeToPoint(n)}}},Vp.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Vp.prototype.interfaces_=function(){return[]},Vp.prototype.getClass=function(){return Vp};var Hp=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Hp.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Hp.prototype.transformPolygon=function(t,e){var n=!0,r=this.transformLinearRing(t.getExteriorRing(),t);null!==r&&r instanceof eh&&!r.isEmpty()||(n=!1);for(var i=new bc,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof eh||(n=!1),i.add(s))}if(n)return this._factory.createPolygon(r,i.toArray([]));var a=new bc;return null!==r&&a.add(r),a.addAll(i),this._factory.buildGeometry(a)},Hp.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Hp.prototype.getInputGeometry=function(){return this._inputGeom},Hp.prototype.transformMultiLineString=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformLineString(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.transformCoordinates=function(t,e){return this.copy(t)},Hp.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Hp.prototype.transformMultiPoint=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformPoint(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.transformMultiPolygon=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformPolygon(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.copy=function(t){return t.copy()},Hp.prototype.transformGeometryCollection=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transform(t.getGeometryN(r));null!==i&&(this._pruneEmptyGeometry&&i.isEmpty()||n.add(i))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_h.toGeometryArray(n)):this._factory.buildGeometry(n)},Hp.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Kc)return this.transformPoint(t,null);if(t instanceof th)return this.transformMultiPoint(t,null);if(t instanceof eh)return this.transformLinearRing(t,null);if(t instanceof Jc)return this.transformLineString(t,null);if(t instanceof Xc)return this.transformMultiLineString(t,null);if(t instanceof $c)return this.transformPolygon(t,null);if(t instanceof nh)return this.transformMultiPolygon(t,null);if(t instanceof jc)return this.transformGeometryCollection(t,null);throw new _u(\"Unknown Geometry subtype: \"+t.getClass().getName())},Hp.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var r=n.size();return r>0&&r<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Hp.prototype.interfaces_=function(){return[]},Hp.prototype.getClass=function(){return Hp};var Wp=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new gl,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Jc&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var r=arguments[0],i=arguments[1];this._srcPts=r,this._isClosed=t.isClosed(r),this._snapTolerance=i}};Wp.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),r=0;r<n;r++){var i=t.get(r),o=this.findSnapForVertex(i,e);null!==o&&(t.set(r,new bu(o)),0===r&&this._isClosed&&t.set(t.size()-1,new bu(o)))}},Wp.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Wp.prototype.snapTo=function(t){var e=new Nc(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Wp.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var r=0;r<n;r++){var i=e[r],o=this.findSegmentIndexToSnap(i,t);o>=0&&t.add(o+1,new bu(i),!1)}},Wp.prototype.findSegmentIndexToSnap=function(t,e){for(var n=mu.MAX_VALUE,r=-1,i=0;i<e.size()-1;i++){if(this._seg.p0=e.get(i),this._seg.p1=e.get(i+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,r=i)}return r},Wp.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Wp.prototype.interfaces_=function(){return[]},Wp.prototype.getClass=function(){return Wp},Wp.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Jp=function(t){this._srcGeom=t||null},Zp={SNAP_PRECISION_FACTOR:{configurable:!0}};Jp.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Kp(e,n).transform(this._srcGeom)},Jp.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),r=new Kp(t,n,!0).transform(this._srcGeom),i=r;return e&&Lu(i,Qc)&&(i=r.buffer(0)),i},Jp.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Jp.prototype.extractTargetCoordinates=function(t){for(var e=new ki,n=t.getCoordinates(),r=0;r<n.length;r++)e.add(n[r]);return e.toArray(new Array(0).fill(null))},Jp.prototype.computeMinimumSegmentLength=function(t){for(var e=mu.MAX_VALUE,n=0;n<t.length-1;n++){var r=t[n].distance(t[n+1]);r<e&&(e=r)}return e},Jp.prototype.interfaces_=function(){return[]},Jp.prototype.getClass=function(){return Jp},Jp.snap=function(t,e,n){var r=new Array(2).fill(null),i=new Jp(t);r[0]=i.snapTo(e,n);var o=new Jp(e);return r[1]=o.snapTo(r[0],n),r},Jp.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Jp.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fh.FIXED){var r=1/n.getScale()*2/1.415;r>e&&(e=r)}return e}if(2===arguments.length){var i=arguments[0],o=arguments[1];return Math.min(Jp.computeOverlaySnapTolerance(i),Jp.computeOverlaySnapTolerance(o))}},Jp.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Jp.SNAP_PRECISION_FACTOR},Jp.snapToSelf=function(t,e,n){return new Jp(t).snapToSelf(e,n)},Zp.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Jp,Zp);var Kp=function(t){function e(e,n,r){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==r&&r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Wp(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),r=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Hp),Qp=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};Qp.prototype.getCommon=function(){return mu.longBitsToDouble(this._commonBits)},Qp.prototype.add=function(t){var e=mu.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=Qp.signExpBits(this._commonBits),this._isFirst=!1,null;if(Qp.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=Qp.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=Qp.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},Qp.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=mu.longBitsToDouble(t),n=\"0000000000000000000000000000000000000000000000000000000000000000\"+mu.toBinaryString(t),r=n.substring(n.length-64);return r.substring(0,1)+\"  \"+r.substring(1,12)+\"(exp) \"+r.substring(12)+\" [ \"+e+\" ]\"}},Qp.prototype.interfaces_=function(){return[]},Qp.prototype.getClass=function(){return Qp},Qp.getBit=function(t,e){return 0!=(t&1<<e)?1:0},Qp.signExpBits=function(t){return t>>52},Qp.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},Qp.numCommonMostSigMantissaBits=function(t,e){for(var n=0,r=52;r>=0;r--){if(Qp.getBit(t,r)!==Qp.getBit(e,r))return n;n++}return 52};var $p=function(){this._commonCoord=null,this._ccFilter=new ef},tf={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};$p.prototype.addCommonBits=function(t){var e=new nf(this._commonCoord);t.apply(e),t.geometryChanged()},$p.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new bu(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new nf(e);return t.apply(n),t.geometryChanged(),t},$p.prototype.getCommonCoordinate=function(){return this._commonCoord},$p.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},$p.prototype.interfaces_=function(){return[]},$p.prototype.getClass=function(){return $p},tf.CommonCoordinateFilter.get=function(){return ef},tf.Translater.get=function(){return nf},Object.defineProperties($p,tf);var ef=function(){this._commonBitsX=new Qp,this._commonBitsY=new Qp};ef.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},ef.prototype.getCommonCoordinate=function(){return new bu(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},ef.prototype.interfaces_=function(){return[pc]},ef.prototype.getClass=function(){return ef};var nf=function(){this.trans=null;var t=arguments[0];this.trans=t};nf.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,r=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,r)},nf.prototype.isDone=function(){return!1},nf.prototype.isGeometryChanged=function(){return!0},nf.prototype.interfaces_=function(){return[zc]},nf.prototype.getClass=function(){return nf};var rf=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rf.prototype.selfSnap=function(t){return new Jp(t).snapTo(t,this._snapTolerance)},rf.prototype.removeCommonBits=function(t){this._cbr=new $p,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rf.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rf.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Cf.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rf.prototype.checkValid=function(t){t.isValid()||Xu.out.println(\"Snapped geometry is invalid\")},rf.prototype.computeSnapTolerance=function(){this._snapTolerance=Jp.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rf.prototype.snap=function(t){var e=this.removeCommonBits(t);return Jp.snap(e[0],e[1],this._snapTolerance)},rf.prototype.interfaces_=function(){return[]},rf.prototype.getClass=function(){return rf},rf.overlayOp=function(t,e,n){return new rf(t,e).getResultGeometry(n)},rf.union=function(t,e){return rf.overlayOp(t,e,Cf.UNION)},rf.intersection=function(t,e){return rf.overlayOp(t,e,Cf.INTERSECTION)},rf.symDifference=function(t,e){return rf.overlayOp(t,e,Cf.SYMDIFFERENCE)},rf.difference=function(t,e){return rf.overlayOp(t,e,Cf.DIFFERENCE)};var of=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};of.prototype.getResultGeometry=function(t){var e=null,n=!1,r=null;try{e=Cf.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof Qu))throw t;r=t}if(!n)try{e=rf.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof Qu?r:t}return e},of.prototype.interfaces_=function(){return[]},of.prototype.getClass=function(){return of},of.overlayOp=function(t,e,n){return new of(t,e).getResultGeometry(n)},of.union=function(t,e){return of.overlayOp(t,e,Cf.UNION)},of.intersection=function(t,e){return of.overlayOp(t,e,Cf.INTERSECTION)},of.symDifference=function(t,e){return of.overlayOp(t,e,Cf.SYMDIFFERENCE)},of.difference=function(t,e){return of.overlayOp(t,e,Cf.DIFFERENCE)};var sf=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sf.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sf.prototype.interfaces_=function(){return[]},sf.prototype.getClass=function(){return sf};var af=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=r,this._xValue=i,this._obj=o}},uf={INSERT:{configurable:!0},DELETE:{configurable:!0}};af.prototype.isDelete=function(){return this._eventType===af.DELETE},af.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},af.prototype.getObject=function(){return this._obj},af.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},af.prototype.getInsertEvent=function(){return this._insertEvent},af.prototype.isInsert=function(){return this._eventType===af.INSERT},af.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},af.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},af.prototype.interfaces_=function(){return[xu]},af.prototype.getClass=function(){return af},uf.INSERT.get=function(){return 1},uf.DELETE.get=function(){return 2},Object.defineProperties(af,uf);var cf=function(){};cf.prototype.interfaces_=function(){return[]},cf.prototype.getClass=function(){return cf};var hf=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};hf.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(hf.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.getNumPoints()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},hf.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},hf.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},hf.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},hf.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next().getCoordinate();if(t.isIntersection(r))return!0}return!1},hf.prototype.hasProperIntersection=function(){return this._hasProper},hf.prototype.hasIntersection=function(){return this._hasIntersection},hf.prototype.isDone=function(){return this._isDone},hf.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},hf.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},hf.prototype.addIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},hf.prototype.interfaces_=function(){return[]},hf.prototype.getClass=function(){return hf},hf.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var lf=function(t){function e(){t.call(this),this.events=new bc,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$h.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof hf&&Lu(arguments[0],wc)&&Lu(arguments[1],wc)){var r=arguments[0],i=arguments[1],o=arguments[2];this.addEdges(r,r),this.addEdges(i,i),this.computeIntersections(o)}else if(\"boolean\"==typeof arguments[2]&&Lu(arguments[0],wc)&&arguments[1]instanceof hf){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),r=n.getStartIndexes(),i=0;i<r.length-1;i++){var o=new sf(n,i),s=new af(e,n.getMinX(i),o);this.events.add(s),this.events.add(new af(n.getMaxX(i),s))}},e.prototype.processOverlaps=function(t,e,n,r){for(var i=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(i.computeIntersections(a,r),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],r=arguments[1],i=n.iterator();i.hasNext();){var o=i.next();this.addEdge(o,r)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(cf),pf=function(){this._min=mu.POSITIVE_INFINITY,this._max=mu.NEGATIVE_INFINITY},ff={NodeComparator:{configurable:!0}};pf.prototype.getMin=function(){return this._min},pf.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},pf.prototype.getMax=function(){return this._max},pf.prototype.toString=function(){return Ku.toLineString(new bu(this._min,0),new bu(this._max,0))},pf.prototype.interfaces_=function(){return[]},pf.prototype.getClass=function(){return pf},ff.NodeComparator.get=function(){return gf},Object.defineProperties(pf,ff);var gf=function(){};gf.prototype.compare=function(t,e){var n=t,r=e,i=(n._min+n._max)/2,o=(r._min+r._max)/2;return i<o?-1:i>o?1:0},gf.prototype.interfaces_=function(){return[wu]},gf.prototype.getClass=function(){return gf};var df=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],r=arguments[2];this._min=e,this._max=n,this._item=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pf),yf=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pf),_f=function(){this._leaves=new bc,this._root=null,this._level=0};_f.prototype.buildTree=function(){$h.sort(this._leaves,new pf.NodeComparator);for(var t=this._leaves,e=null,n=new bc;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_f.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error(\"Index cannot be added to once it has been queried\");this._leaves.add(new df(t,e,n))},_f.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_f.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_f.prototype.printNode=function(t){Xu.out.println(Ku.toLineString(new bu(t._min,this._level),new bu(t._max,this._level)))},_f.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_f.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var r=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(r);else{var i=new yf(t.get(n),t.get(n+1));e.add(i)}}},_f.prototype.interfaces_=function(){return[]},_f.prototype.getClass=function(){return _f};var mf=function(){this._items=new bc};mf.prototype.visitItem=function(t){this._items.add(t)},mf.prototype.getItems=function(){return this._items},mf.prototype.interfaces_=function(){return[Jh]},mf.prototype.getClass=function(){return mf};var vf=function(){this._index=null;var t=arguments[0];if(!Lu(t,Qc))throw new _u(\"Argument must be Polygonal\");this._index=new wf(t)},xf={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vf.prototype.locate=function(t){var e=new oc(t),n=new Ef(e);return this._index.query(t.y,t.y,n),e.getLocation()},vf.prototype.interfaces_=function(){return[Bl]},vf.prototype.getClass=function(){return vf},xf.SegmentVisitor.get=function(){return Ef},xf.IntervalIndexedGeometry.get=function(){return wf},Object.defineProperties(vf,xf);var Ef=function(){this._counter=null;var t=arguments[0];this._counter=t};Ef.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Ef.prototype.interfaces_=function(){return[Jh]},Ef.prototype.getClass=function(){return Ef};var wf=function(){this._index=new _f;var t=arguments[0];this.init(t)};wf.prototype.init=function(t){for(var e=bp.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},wf.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new gl(t[e-1],t[e]),r=Math.min(n.p0.y,n.p1.y),i=Math.max(n.p0.y,n.p1.y);this._index.insert(r,i,n)}},wf.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mf;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._index.query(r,i,o)}},wf.prototype.interfaces_=function(){return[]},wf.prototype.getClass=function(){return wf};var bf=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new ph,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Ip,2===arguments.length){var e=arguments[0],n=arguments[1],r=fc.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=r,null!==n&&this.add(n)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=i,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var r=this._nodes.addNode(n).getLabel(),i=1;Su.NONE;r.getLocation(t,Nh.ON)===Su.BOUNDARY&&i++;var o=e.determineBoundary(this._boundaryNodeRule,i);r.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=new hf(n,!0,!1);o.setIsDoneIfProperInt(i);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof eh||this._parentGeom instanceof $c||this._parentGeom instanceof nh,u=r||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var r=new hf(e,n,!0);r.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,r),r},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Kc){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,Su.INTERIOR)}else if(arguments[0]instanceof bu){var e=arguments[0];this.insertPoint(this._argIndex,e,Su.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),Su.EXTERIOR,Su.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,Su.INTERIOR,Su.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],Su.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],Su.BOUNDARY)},e.prototype.addLineString=function(t){var e=Cc.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ep(e,new Rh(this._argIndex,Su.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),tc.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,r=t.iterator();r.hasNext();){var i=r.next();e[n++]=i.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===Su.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var r=Cc.removeRepeatedPoints(t.getCoordinates());if(r.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=r[0],null;var i=e,o=n;sc.isCCW(r)&&(i=n,o=e);var s=new ep(r,new Rh(this._argIndex,Su.BOUNDARY,i,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,r[0],Su.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var r=this._nodes.addNode(e),i=r.getLabel();null===i?r._label=new Rh(t,n):i.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new lf},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),r=n.getLabel().getLocation(t),i=n.eiList.iterator();i.hasNext();){var o=i.next();this.addSelfIntersectionNode(t,o.coord,r)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof nh&&(this._useBoundaryDeterminationRule=!1),e instanceof $c)this.addPolygon(e);else if(e instanceof Jc)this.addLineString(e);else if(e instanceof Kc)this.addPoint(e);else if(e instanceof th)this.addCollection(e);else if(e instanceof Xc)this.addCollection(e);else if(e instanceof nh)this.addCollection(e);else{if(!(e instanceof jc))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return Lu(this._parentGeom,Qc)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vf(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?Su.BOUNDARY:Su.INTERIOR},e}(Uh),If=function(){if(this._li=new rc,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new bf(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=fc.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new bf(0,e,r),this._arg[1]=new bf(1,n,r)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];i.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(i.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new bf(0,i,s),this._arg[1]=new bf(1,o,s)}};If.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},If.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},If.prototype.interfaces_=function(){return[]},If.prototype.getClass=function(){return If};var Nf=function(){};Nf.prototype.interfaces_=function(){return[]},Nf.prototype.getClass=function(){return Nf},Nf.map=function(){if(arguments[0]instanceof cc&&Lu(arguments[1],Nf.MapOp)){for(var t=arguments[0],e=arguments[1],n=new bc,r=0;r<t.getNumGeometries();r++){var i=e.map(t.getGeometryN(r));null!==i&&n.add(i)}return t.getFactory().buildGeometry(n)}if(Lu(arguments[0],vc)&&Lu(arguments[1],Nf.MapOp)){for(var o=arguments[0],s=arguments[1],a=new bc,u=o.iterator();u.hasNext();){var c=u.next(),h=s.map(c);null!==h&&a.add(h)}return a}},Nf.MapOp=function(){};var Cf=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Ip,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Vl,this._resultPolyList=new bc,this._resultLineList=new bc,this._resultPointList=new bc,this._graph=new Uh(new Ul),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Rh(t.getLabel())).flip();var i=e.getDepth();i.isNull()&&i.add(n),i.add(r),n.merge(r)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,r,i){var o=new bc;return o.addAll(t),o.addAll(n),o.addAll(r),o.isEmpty()?e.createEmptyResult(i,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(this._ptLocator.locate(t,r)!==Su.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new bc,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new bc;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Xp.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new Yh(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var r=new Yp(this,this._geomFact,this._ptLocator);this._resultLineList=r.build(t);var i=new Vp(this,this._geomFact,this._ptLocator);this._resultPointList=i.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var r=n.next(),i=r.getLabel();i.isArea()&&!r.isInteriorAreaEdge()&&e.isResultOfOp(i.getLocation(0,Nh.RIGHT),i.getLocation(1,Nh.RIGHT),t)&&r.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),r=e.getDepth();if(!r.isNull()){r.normalize();for(var i=0;i<2;i++)n.isNull(i)||!n.isArea()||r.isNull(i)||(0===r.getDelta(i)?n.toLine(i):(tc.isTrue(!r.isNull(i,Nh.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(i,Nh.LEFT,r.getLocation(i,Nh.LEFT)),tc.isTrue(!r.isNull(i,Nh.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(i,Nh.RIGHT,r.getLocation(i,Nh.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(If);Cf.overlayOp=function(t,e,n){return new Cf(t,e).getResultGeometry(n)},Cf.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Cf.createEmptyResult(Cf.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return Up.map(t,{interfaces_:function(){return[Nf.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.INTERSECTION)},Cf.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Cf.createEmptyResult(Cf.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.SYMDIFFERENCE)},Cf.resultDimension=function(t,e,n){var r=e.getDimension(),i=n.getDimension(),o=-1;switch(t){case Cf.INTERSECTION:o=Math.min(r,i);break;case Cf.UNION:o=Math.max(r,i);break;case Cf.DIFFERENCE:o=r;break;case Cf.SYMDIFFERENCE:o=Math.max(r,i)}return o},Cf.createEmptyResult=function(t,e,n,r){var i=null;switch(Cf.resultDimension(t,e,n)){case-1:i=r.createGeometryCollection(new Array(0).fill(null));break;case 0:i=r.createPoint();break;case 1:i=r.createLineString();break;case 2:i=r.createPolygon()}return i},Cf.difference=function(t,e){return t.isEmpty()?Cf.createEmptyResult(Cf.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.DIFFERENCE))},Cf.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),r=t.getLocation(1);return Cf.isResultOfOp(n,r,e)}if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];switch(i===Su.BOUNDARY&&(i=Su.INTERIOR),o===Su.BOUNDARY&&(o=Su.INTERIOR),s){case Cf.INTERSECTION:return i===Su.INTERIOR&&o===Su.INTERIOR;case Cf.UNION:return i===Su.INTERIOR||o===Su.INTERIOR;case Cf.DIFFERENCE:return i===Su.INTERIOR&&o!==Su.INTERIOR;case Cf.SYMDIFFERENCE:return i===Su.INTERIOR&&o!==Su.INTERIOR||i!==Su.INTERIOR&&o===Su.INTERIOR}return!1}},Cf.INTERSECTION=1,Cf.UNION=2,Cf.DIFFERENCE=3,Cf.SYMDIFFERENCE=4;var Sf=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Ip,this._seg=new gl;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};Sf.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),r=0;r<n.size()-1;r++){n.getCoordinate(r,this._seg.p0),n.getCoordinate(r+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},Sf.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?Su.BOUNDARY:this._ptLocator.locate(t,this._g)},Sf.prototype.extractLinework=function(t){var e=new Mf;t.apply(e);var n=e.getLinework(),r=_h.toLineStringArray(n);return t.getFactory().createMultiLineString(r)},Sf.prototype.interfaces_=function(){return[]},Sf.prototype.getClass=function(){return Sf};var Mf=function(){this._linework=null,this._linework=new bc};Mf.prototype.getLinework=function(){return this._linework},Mf.prototype.filter=function(t){if(t instanceof $c){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},Mf.prototype.interfaces_=function(){return[kc]},Mf.prototype.getClass=function(){return Mf};var Lf=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Lf.prototype.extractPoints=function(t,e,n){for(var r=t.getCoordinates(),i=0;i<r.length-1;i++)this.computeOffsetPoints(r[i],r[i+1],e,n)},Lf.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Lf.prototype.getPoints=function(t){for(var e=new bc,n=bp.getLines(this._g).iterator();n.hasNext();){var r=n.next();this.extractPoints(r,t,e)}return e},Lf.prototype.computeOffsetPoints=function(t,e,n,r){var i=e.x-t.x,o=e.y-t.y,s=Math.sqrt(i*i+o*o),a=n*i/s,u=n*o/s,c=(e.x+t.x)/2,h=(e.y+t.y)/2;if(this._doLeft){var l=new bu(c-u,h+a);r.add(l)}if(this._doRight){var p=new bu(c+u,h-a);r.add(p)}},Lf.prototype.interfaces_=function(){return[]},Lf.prototype.getClass=function(){return Lf};var Pf=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new bc;var e=arguments[0],n=arguments[1],r=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,r],this._locFinder=[new Sf(this._geom[0],this._boundaryDistanceTolerance),new Sf(this._geom[1],this._boundaryDistanceTolerance),new Sf(this._geom[2],this._boundaryDistanceTolerance)]},Of={TOLERANCE:{configurable:!0}};Pf.prototype.reportResult=function(t,e,n){Xu.out.println(\"Overlay result invalid - A:\"+Su.toLocationSymbol(e[0])+\" B:\"+Su.toLocationSymbol(e[1])+\" expected:\"+(n?\"i\":\"e\")+\" actual:\"+Su.toLocationSymbol(e[2]))},Pf.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Pf.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var r=arguments[0],i=arguments[1];return this._location[0]=this._locFinder[0].getLocation(i),this._location[1]=this._locFinder[1].getLocation(i),this._location[2]=this._locFinder[2].getLocation(i),!!Pf.hasLocation(this._location,Su.BOUNDARY)||this.isValidResult(r,this._location)}},Pf.prototype.addTestPts=function(t){var e=new Lf(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Pf.prototype.isValidResult=function(t,e){var n=Cf.isResultOfOp(e[0],e[1],t),r=!(n^e[2]===Su.INTERIOR);return r||this.reportResult(t,e,n),r},Pf.prototype.getInvalidLocation=function(){return this._invalidLocation},Pf.prototype.interfaces_=function(){return[]},Pf.prototype.getClass=function(){return Pf},Pf.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Pf.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Jp.computeSizeBasedSnapTolerance(t),Jp.computeSizeBasedSnapTolerance(e))},Pf.isValid=function(t,e,n,r){return new Pf(t,e,r).isValid(n)},Of.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Pf,Of);var Rf=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Rf.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var r=t.getGeometryN(n);this._skipEmpty&&r.isEmpty()||e.add(r)}},Rf.prototype.combine=function(){for(var t=new bc,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Rf.prototype.interfaces_=function(){return[]},Rf.prototype.getClass=function(){return Rf},Rf.combine=function(){if(1===arguments.length){var t=arguments[0];return new Rf(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Rf(Rf.createList(e,n)).combine()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];return new Rf(Rf.createList(r,i,o)).combine()}},Rf.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Rf.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new bc;return n.add(t),n.add(e),n}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=new bc;return s.add(r),s.add(i),s.add(o),s}};var Tf=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new bc)},Af={STRTREE_NODE_CAPACITY:{configurable:!0}};Tf.prototype.reduceToGeometries=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next(),i=null;Lu(r,wc)?i=this.unionTree(r):r instanceof cc&&(i=r),e.add(i)}return e},Tf.prototype.extractByEnvelope=function(t,e,n){for(var r=new bc,i=0;i<e.getNumGeometries();i++){var o=e.getGeometryN(i);o.getEnvelopeInternal().intersects(t)?r.add(o):n.add(o)}return this._geomFactory.buildGeometry(r)},Tf.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),r=e.getEnvelopeInternal();if(!n.intersects(r)){return Rf.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var i=n.intersection(r);return this.unionUsingEnvelopeIntersection(t,e,i)},Tf.prototype.union=function(){if(null===this._inputPolys)throw new Error(\"union() method cannot be called twice\");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new ol(Tf.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var r=t.itemsTree();return this.unionTree(r)},Tf.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2];if(r-n<=1){var i=Tf.getGeometry(e,n);return this.unionSafe(i,null)}if(r-n==2)return this.unionSafe(Tf.getGeometry(e,n),Tf.getGeometry(e,n+1));var o=Math.trunc((r+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,r);return this.unionSafe(s,a)}},Tf.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var r=n.next();e=null===e?r.copy():e.union(r)}return e},Tf.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Tf.prototype.unionActual=function(t,e){return Tf.restrictToPolygons(t.union(e))},Tf.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Tf.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var r=new bc,i=this.extractByEnvelope(n,t,r),o=this.extractByEnvelope(n,e,r),s=this.unionActual(i,o);r.add(s);return Rf.combine(r)},Tf.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Tf.prototype.interfaces_=function(){return[]},Tf.prototype.getClass=function(){return Tf},Tf.restrictToPolygons=function(t){if(Lu(t,Qc))return t;var e=wp.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_h.toPolygonArray(e))},Tf.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Tf.union=function(t){return new Tf(t).union()},Af.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Tf,Af);var Df=function(){};Df.prototype.interfaces_=function(){return[]},Df.prototype.getClass=function(){return Df},Df.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Cf.createEmptyResult(Cf.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.UNION)};var Ff=function(){return new Yi};Yi.prototype={constructor:Yi,reset:function(){this.s=this.t=0},add:function(t){Vi(qf,t,this.t),Vi(this,qf.s,this.s),this.s?this.t+=qf.t:this.s=qf.t},valueOf:function(){return this.s}};var qf=new Yi,Gf=1e-6,Bf=Math.PI,kf=Bf/2,zf=Bf/4,jf=2*Bf,Xf=180/Bf,Uf=Bf/180,Yf=Math.abs,Vf=Math.atan,Hf=Math.atan2,Wf=Math.cos,Jf=Math.exp,Zf=Math.log,Kf=Math.sin,Qf=Math.sqrt,$f=Math.tan,tg={Feature:function(t,e){Ji(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,i=n.length;++r<i;)Ji(n[r].geometry,e)}},eg={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){Zi(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)Zi(n[r],e,0)},Polygon:function(t,e){Ki(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)Ki(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,i=n.length;++r<i;)Ji(n[r],e)}},ng=function(t,e){t&&tg.hasOwnProperty(t.type)?tg[t.type](t,e):Ji(t,e)},rg=(Ff(),Ff(),Ff(),function(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n});oo.invert=oo;var ig=function(t){function e(e){return e=t(e[0]*Uf,e[1]*Uf),e[0]*=Xf,e[1]*=Xf,e}return t=so(t[0]*Uf,t[1]*Uf,t.length>2?t[2]*Uf:0),e.invert=function(e){return e=t.invert(e[0]*Uf,e[1]*Uf),e[0]*=Xf,e[1]*=Xf,e},e},og=function(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:Wi,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}},sg=function(t,e,n,r,i,o){var s,a=t[0],u=t[1],c=0,h=1,l=e[0]-a,p=e[1]-u;if(s=n-a,l||!(s>0)){if(s/=l,l<0){if(s<c)return;s<h&&(h=s)}else if(l>0){if(s>h)return;s>c&&(c=s)}if(s=i-a,l||!(s<0)){if(s/=l,l<0){if(s>h)return;s>c&&(c=s)}else if(l>0){if(s<c)return;s<h&&(h=s)}if(s=r-u,p||!(s>0)){if(s/=p,p<0){if(s<c)return;s<h&&(h=s)}else if(p>0){if(s>h)return;s>c&&(c=s)}if(s=o-u,p||!(s<0)){if(s/=p,p<0){if(s>h)return;s>c&&(c=s)}else if(p>0){if(s<c)return;s<h&&(h=s)}return c>0&&(t[0]=a+c*l,t[1]=u+c*p),h<1&&(e[0]=a+h*l,e[1]=u+h*p),!0}}}}},ag=function(t,e){return Yf(t[0]-e[0])<Gf&&Yf(t[1]-e[1])<Gf},ug=function(t,e,n,r,i){var o,s,a=[],u=[];if(t.forEach(function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],s=t[e];if(ag(r,s)){for(i.lineStart(),o=0;o<e;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(n=new lo(r,t,null,!0)),u.push(n.o=new lo(r,null,n,!1)),a.push(n=new lo(s,t,null,!1)),u.push(n.o=new lo(s,null,n,!0))}}),a.length){for(u.sort(e),po(a),po(u),o=0,s=u.length;o<s;++o)u[o].e=n=!n;for(var c,h,l=a[0];;){for(var p=l,f=!0;p.v;)if((p=p.n)===l)return;c=p.z,i.lineStart();do{if(p.v=p.o.v=!0,p.e){if(f)for(o=0,s=c.length;o<s;++o)i.point((h=c[o])[0],h[1]);else r(p.x,p.n.x,1,i);p=p.n}else{if(f)for(c=p.p.z,o=c.length-1;o>=0;--o)i.point((h=c[o])[0],h[1]);else r(p.x,p.p.x,-1,i);p=p.p}c=(p=p.o).z,f=!f}while(!p.v);i.lineEnd()}}},cg=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN},hg=(function(t){1===t.length&&(t=function(t){return function(e,n){return cg(t(e),n)}}(t))}(cg),function(t){for(var e,n,r,i=t.length,o=-1,s=0;++o<i;)s+=t[o].length;for(n=new Array(s);--i>=0;)for(e=(r=t[i]).length;--e>=0;)n[--s]=r[e];return n}),lg=1e9,pg=-lg,fg=Ff(),gg=(Ff(),function(t){return t}),dg=(Ff(),Ff(),1/0),yg=dg,_g=-dg,mg=_g,vg={point:function(t,e){t<dg&&(dg=t),t>_g&&(_g=t),e<yg&&(yg=e),e>mg&&(mg=e)},lineStart:Wi,lineEnd:Wi,polygonStart:Wi,polygonEnd:Wi,result:function(){var t=[[dg,yg],[_g,mg]];return _g=mg=-(yg=dg=1/0),t}},xg=(Ff(),function(t,e,n,r){return function(i,o){function s(e,n){var r=i(e,n);t(e=r[0],n=r[1])&&o.point(e,n)}function a(t,e){var n=i(t,e);y.point(n[0],n[1])}function u(){E.point=a,y.lineStart()}function c(){E.point=s,y.lineEnd()}function h(t,e){d.push([t,e]);var n=i(t,e);v.point(n[0],n[1])}function l(){v.lineStart(),d=[]}function p(){h(d[0][0],d[0][1]),v.lineEnd();var t,e,n,r,i=v.clean(),s=m.result(),a=s.length;if(d.pop(),f.push(d),d=null,a)if(1&i){if(n=s[0],(e=n.length-1)>0){for(x||(o.polygonStart(),x=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else a>1&&2&i&&s.push(s.pop().concat(s.shift())),g.push(s.filter(go))}var f,g,d,y=e(o),_=i.invert(r[0],r[1]),m=og(),v=e(m),x=!1,E={point:s,lineStart:u,lineEnd:c,polygonStart:function(){E.point=h,E.lineStart=l,E.lineEnd=p,g=[],f=[]},polygonEnd:function(){E.point=s,E.lineStart=u,E.lineEnd=c,g=hg(g);var t=function(t,e){var n=e[0],r=e[1],i=[Kf(n),-Wf(n),0],o=0,s=0;fg.reset();for(var a=0,u=t.length;a<u;++a)if(h=(c=t[a]).length)for(var c,h,l=c[h-1],p=l[0],f=l[1]/2+zf,g=Kf(f),d=Wf(f),y=0;y<h;++y,p=m,g=x,d=E,l=_){var _=c[y],m=_[0],v=_[1]/2+zf,x=Kf(v),E=Wf(v),w=m-p,b=w>=0?1:-1,I=b*w,N=I>Bf,C=g*x;if(fg.add(Hf(C*b*Kf(I),d*E+C*Wf(I))),o+=N?w+b*jf:w,N^p>=n^m>=n){var S=eo($i(l),$i(_));io(S);var M=eo(i,S);io(M);var L=(N^w>=0?-1:1)*Hi(M[2]);(r>L||r===L&&(S[0]||S[1]))&&(s+=N^w>=0?1:-1)}}return(o<-Gf||o<Gf&&fg<-Gf)^1&s}(f,_);g.length?(x||(o.polygonStart(),x=!0),ug(g,yo,t,n,o)):t&&(x||(o.polygonStart(),x=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),x&&(o.polygonEnd(),x=!1),g=f=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};return E}}),Eg=xg(function(){return!0},function(t){var e,n=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(o,s){var a=o>0?Bf:-Bf,u=Yf(o-n);Yf(u-Bf)<Gf?(t.point(n,r=(r+s)/2>0?kf:-kf),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),e=0):i!==a&&u>=Bf&&(Yf(n-i)<Gf&&(n-=i*Gf),Yf(o-a)<Gf&&(o-=a*Gf),r=function(t,e,n,r){var i,o,s=Kf(t-n);return Yf(s)>Gf?Vf((Kf(e)*(o=Wf(r))*Kf(n)-Kf(r)*(i=Wf(e))*Kf(t))/(i*o*s)):(e+r)/2}(n,r,o,s),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),e=0),t.point(n=o,r=s),i=a},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}},function(t,e,n,r){var i;if(null==t)i=n*kf,r.point(-Bf,i),r.point(0,i),r.point(Bf,i),r.point(Bf,0),r.point(Bf,-i),r.point(0,-i),r.point(-Bf,-i),r.point(-Bf,0),r.point(-Bf,i);else if(Yf(t[0]-e[0])>Gf){var o=t[0]<e[0]?Bf:-Bf;i=n*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(e[0],e[1])},[-Bf,-kf]),wg=function(t,e){function n(t,e){return Wf(t)*Wf(e)>o}function r(t,e,n){var r=[1,0,0],i=eo($i(t),$i(e)),s=to(i,i),a=i[0],u=s-a*a;if(!u)return!n&&t;var c=o*s/u,h=-o*a/u,l=eo(r,i),p=ro(r,c);no(p,ro(i,h));var f=l,g=to(p,f),d=to(f,f),y=g*g-d*(to(p,p)-1);if(!(y<0)){var _=Qf(y),m=ro(f,(-g-_)/d);if(no(m,p),m=Qi(m),!n)return m;var v,x=t[0],E=e[0],w=t[1],b=e[1];E<x&&(v=x,x=E,E=v);var I=E-x,N=Yf(I-Bf)<Gf;if(!N&&b<w&&(v=w,w=b,b=v),N||I<Gf?N?w+b>0^m[1]<(Yf(m[0]-x)<Gf?w:b):w<=m[1]&&m[1]<=b:I>Bf^(x<=m[0]&&m[0]<=E)){var C=ro(f,(-g+_)/d);return no(C,p),[m,Qi(C)]}}}function i(e,n){var r=s?t:Bf-t,i=0;return e<-r?i|=1:e>r&&(i|=2),n<-r?i|=4:n>r&&(i|=8),i}var o=Wf(t),s=o>0,a=Yf(o)>Gf;return xg(n,function(t){var e,o,u,c,h;return{lineStart:function(){c=u=!1,h=1},point:function(l,p){var f,g=[l,p],d=n(l,p),y=s?d?0:i(l,p):d?i(l+(l<0?Bf:-Bf),p):0;if(!e&&(c=u=d)&&t.lineStart(),d!==u&&(!(f=r(e,g))||ag(e,f)||ag(g,f))&&(g[0]+=Gf,g[1]+=Gf,d=n(g[0],g[1])),d!==u)h=0,d?(t.lineStart(),f=r(g,e),t.point(f[0],f[1])):(f=r(e,g),t.point(f[0],f[1]),t.lineEnd()),e=f;else if(a&&e&&s^d){var _;y&o||!(_=r(g,e,!0))||(h=0,s?(t.lineStart(),t.point(_[0][0],_[0][1]),t.point(_[1][0],_[1][1]),t.lineEnd()):(t.point(_[1][0],_[1][1]),t.lineEnd(),t.lineStart(),t.point(_[0][0],_[0][1])))}!d||e&&ag(e,g)||t.point(g[0],g[1]),e=g,u=d,o=y},lineEnd:function(){u&&t.lineEnd(),e=null},clean:function(){return h|(c&&u)<<1}}},function(n,r,i,o){!function(t,e,n,r,i,o){if(n){var s=Wf(e),a=Kf(e),u=r*n;null==i?(i=e+r*jf,o=e-u/2):(i=ho(s,i),o=ho(s,o),(r>0?i<o:i>o)&&(i+=r*jf));for(var c,h=i;r>0?h>o:h<o;h-=u)c=Qi([s,-a*Wf(h),-a*Kf(h)]),t.point(c[0],c[1])}}(o,t,e,i,n,r)},s?[0,-t]:[-Bf,t-Bf])};mo.prototype={constructor:mo,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var bg=16,Ig=Wf(30*Uf),Ng=function(t,e){return+e?function(t,e){function n(r,i,o,s,a,u,c,h,l,p,f,g,d,y){var _=c-r,m=h-i,v=_*_+m*m;if(v>4*e&&d--){var x=s+p,E=a+f,w=u+g,b=Qf(x*x+E*E+w*w),I=Hi(w/=b),N=Yf(Yf(w)-1)<Gf||Yf(o-l)<Gf?(o+l)/2:Hf(E,x),C=t(N,I),S=C[0],M=C[1],L=S-r,P=M-i,O=m*L-_*P;(O*O/v>e||Yf((_*L+m*P)/v-.5)>.3||s*p+a*f+u*g<Ig)&&(n(r,i,o,s,a,u,S,M,N,x/=b,E/=b,w,d,y),y.point(S,M),n(S,M,N,x,E,w,c,h,l,p,f,g,d,y))}}return function(e){function r(n,r){n=t(n,r),e.point(n[0],n[1])}function i(){_=NaN,w.point=o,e.lineStart()}function o(r,i){var o=$i([r,i]),s=t(r,i);n(_,m,y,v,x,E,_=s[0],m=s[1],y=r,v=o[0],x=o[1],E=o[2],bg,e),e.point(_,m)}function s(){w.point=r,e.lineEnd()}function a(){i(),w.point=u,w.lineEnd=c}function u(t,e){o(h=t,e),l=_,p=m,f=v,g=x,d=E,w.point=o}function c(){n(_,m,y,v,x,E,l,p,h,f,g,d,bg,e),w.lineEnd=s,s()}var h,l,p,f,g,d,y,_,m,v,x,E,w={point:r,lineStart:i,lineEnd:s,polygonStart:function(){e.polygonStart(),w.lineStart=a},polygonEnd:function(){e.polygonEnd(),w.lineStart=i}};return w}}(t,e):function(t){return _o({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)},Cg=_o({point:function(t,e){this.stream.point(t*Uf,e*Uf)}});Eo.invert=function(t,e){return[t,2*Vf(Jf(e))-kf]},wo.invert=function(t,e){return[-e,2*Vf(Jf(t))-kf]};var Sg=function(){var t=function(t){function e(){var e=Bf*a(),s=o(ig(o.rotate()).invert([0,0]));return c(null==h?[[s[0]-e,s[1]-e],[s[0]+e,s[1]+e]]:t===Eo?[[Math.max(s[0]-e,h),n],[Math.min(s[0]+e,r),i]]:[[h,Math.max(s[1]-e,n)],[r,Math.min(s[1]+e,i)]])}var n,r,i,o=xo(t),s=o.center,a=o.scale,u=o.translate,c=o.clipExtent,h=null;return o.scale=function(t){return arguments.length?(a(t),e()):a()},o.translate=function(t){return arguments.length?(u(t),e()):u()},o.center=function(t){return arguments.length?(s(t),e()):s()},o.clipExtent=function(t){return arguments.length?(null==t?h=n=r=i=null:(h=+t[0][0],n=+t[0][1],r=+t[1][0],i=+t[1][1]),e()):null==h?null:[[h,n],[r,i]]},e()}(wo),e=t.center,n=t.rotate;return t.center=function(t){return arguments.length?e([-t[1],t[0]]):(t=e(),[t[1],-t[0]])},t.rotate=function(t){return arguments.length?n([t[0],t[1],t.length>2?t[2]+90:90]):(t=n(),[t[0],t[1],t[2]-90])},n([0,0,90]).scale(159.155)};t.projection=Cs,t.random=gu,t.clusters=du,t.helpers=ko,t.invariant=jo,t.meta=zo,t.isolines=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.zProperty||\"elevation\",i=n.commonProperties||{},o=n.breaksProperties||[];if(W(t,\"Point\",\"Input must contain Points\"),!e)throw new Error(\"breaks is required\");if(!Array.isArray(e))throw new Error(\"breaks must be an Array\");if(!I(i))throw new Error(\"commonProperties must be an Object\");if(!Array.isArray(o))throw new Error(\"breaksProperties must be an Array\");var s=rt(t,{zProperty:r,flip:!0});return c(function(t,e,n){var r=j(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,c=e.length-1,h=i/u,l=o/c,p=function(t){t[0]=t[0]*h+s,t[1]=t[1]*l+a};return t.forEach(function(t){S(t,p)}),t}(function(t,e,n,r,i){for(var o=[],s=1;s<e.length;s++){var a=+e[s],u=Object.assign({},r,i[s]);u[n]=a;var c=h(Q(t,a),u);o.push(c)}return o}(s,e,r,i,o),s,t))},t.convex=Lt,t.pointsWithinPolygon=Rt,t.concave=function(t,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");if(!t)throw new Error(\"points is required\");var r=n.maxEdge||1/0;if(!b(r))throw new Error(\"maxEdge is invalid\");var i=Tt(function(t){var e=[],n={};return O(t,function(t){if(t.geometry){var r=t.geometry.coordinates.join(\"-\");n.hasOwnProperty(r)||(e.push(t),n[r]=!0)}}),c(e)}(t));if(i.features=i.features.filter(function(t){var e=t.geometry.coordinates[0][0],i=t.geometry.coordinates[0][1],o=t.geometry.coordinates[0][2],s=qt(e,i,n),a=qt(i,o,n),u=qt(e,o,n);return s<=r&&a<=r&&u<=r}),i.features.length<1)return null;var o=$t(i,n);return 1===o.coordinates.length&&(o.coordinates=o.coordinates[0],o.type=\"Polygon\"),e(o)},t.collect=function(t,e,n,r){var i=Vo(6),o=e.features.map(function(t){return{minX:t.geometry.coordinates[0],minY:t.geometry.coordinates[1],maxX:t.geometry.coordinates[0],maxY:t.geometry.coordinates[1],property:t.properties[n]}});return i.load(o),t.features.forEach(function(t){t.properties||(t.properties={});var e=j(t),n=[];i.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}).forEach(function(e){Pt([e.minX,e.minY],t)&&n.push(e.property)}),t.properties[r]=n}),t},t.flip=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.mutate;if(!t)throw new Error(\"geojson is required\");return!1!==n&&void 0!==n||(t=Gt(t)),S(t,function(t){var e=t[0],n=t[1];t[0]=n,t[1]=e}),t},t.simplify=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=void 0!==e.tolerance?e.tolerance:1,r=e.highQuality||!1,i=e.mutate||!1;if(!t)throw new Error(\"geojson is required\");if(n&&n<0)throw new Error(\"invalid tolerance\");return!0!==i&&(t=Gt(t)),A(t,function(t){!function(t,e,n){var r=t.type;if(\"Point\"===r||\"MultiPoint\"===r)return t;te(t,!0);var i=t.coordinates;switch(r){case\"LineString\":t.coordinates=se(i,e,n);break;case\"MultiLineString\":t.coordinates=i.map(function(t){return se(t,e,n)});break;case\"Polygon\":t.coordinates=ae(i,e,n);break;case\"MultiPolygon\":t.coordinates=i.map(function(t){return ae(t,e,n)})}}(t,n,r)}),t},t.bezierSpline=ue,t.tag=function(t,e,n,r){return t=Gt(t),e=Gt(e),O(t,function(t){t.properties||(t.properties={}),O(e,function(e){void 0===t.properties[r]&&Pt(t,e)&&(t.properties[r]=e.properties[n])})}),t},t.sample=function(t,e){if(!t)throw new Error(\"featurecollection is required\");if(null===e||void 0===e)throw new Error(\"num is required\");if(\"number\"!=typeof e)throw new Error(\"num must be a number\");return c(function(t,e){for(var n,r,i=t.slice(0),o=t.length,s=o-e;o-- >s;)r=Math.floor((o+1)*Math.random()),n=i[r],i[r]=i[o],i[o]=n;return i.slice(s)}(t.features,e))},t.envelope=he,t.square=le,t.circle=fe,t.midpoint=function(t,e){return pe(t,qt(t,e)/2,ge(t,e))},t.center=de,t.centerOfMass=_e,t.centroid=ye,t.combine=function(t){function n(t,e,n){n?r[e].coordinates=r[e].coordinates.concat(t.geometry.coordinates):r[e].coordinates.push(t.geometry.coordinates),r[e].properties.push(t.properties)}var r={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}},i=Object.keys(r).reduce(function(t,e){return t[e.replace(\"Multi\",\"\")]=e,t},{});return O(t,function(t){t.geometry&&(r[t.geometry.type]?n(t,t.geometry.type,!0):i[t.geometry.type]&&n(t,i[t.geometry.type],!1))}),c(Object.keys(r).filter(function(t){return r[t].coordinates.length}).sort().map(function(t){return e({type:t,coordinates:r[t].coordinates},{collectedProperties:r[t].properties})}))},t.distance=qt,t.explode=me,t.bbox=j,t.tesselate=function(t){if(!t.geometry||\"Polygon\"!==t.geometry.type&&\"MultiPolygon\"!==t.geometry.type)throw new Error(\"input must be a Polygon or MultiPolygon\");var e={type:\"FeatureCollection\",features:[]};return\"Polygon\"===t.geometry.type?e.features=De(t.geometry.coordinates):t.geometry.coordinates.forEach(function(t){e.features=e.features.concat(De(t))}),e},t.bboxPolygon=ce,t.booleanPointInPolygon=Pt,t.nearestPoint=Fe,t.nearestPointOnLine=on,t.nearestPointToLine=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.units,i=n.properties||{};if(!t)throw new Error(\"points is required\");if(!(t=function(t){var e=[];switch(t.geometry?t.geometry.type:t.type){case\"GeometryCollection\":return A(t,function(t){\"Point\"===t.type&&e.push({type:\"Feature\",properties:{},geometry:t})}),{type:\"FeatureCollection\",features:e};case\"FeatureCollection\":return t.features=t.features.filter(function(t){return\"Point\"===t.geometry.type}),t;default:throw new Error(\"points must be a Point Collection\")}}(t)).features.length)throw new Error(\"points must contain features\");if(!e)throw new Error(\"line is required\");if(\"LineString\"!==K(e))throw new Error(\"line must be a LineString\");var o=1/0,s=null;return O(t,function(t){var n=gn(t,e,{units:r});n<o&&(o=n,s=t)}),s&&(s.properties=Object.assign({dist:o},s.properties,i)),s},t.planepoint=function(t,e){var n=X(t),r=J(e).coordinates[0];if(r.length<4)throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");var i=e.properties||{},o=i.a,s=i.b,a=i.c,u=n[0],c=n[1],h=r[0][0],l=r[0][1],p=void 0!==o?o:r[0][2],f=r[1][0],g=r[1][1],d=void 0!==s?s:r[1][2],y=r[2][0],_=r[2][1],m=void 0!==a?a:r[2][2];return(m*(u-h)*(c-g)+p*(u-f)*(c-_)+d*(u-y)*(c-l)-d*(u-h)*(c-_)-m*(u-f)*(c-l)-p*(u-y)*(c-g))/((u-h)*(c-g)+(u-f)*(c-_)+(u-y)*(c-l)-(u-h)*(c-_)-(u-f)*(c-l)-(u-y)*(c-g))},t.tin=Tt,t.bearing=ge,t.destination=pe,t.kinks=function(t){var e,n,i={type:\"FeatureCollection\",features:[]};if(\"LineString\"===(n=\"Feature\"===t.type?t.geometry:t).type)e=[n.coordinates];else if(\"MultiLineString\"===n.type)e=n.coordinates;else if(\"MultiPolygon\"===n.type)e=[].concat.apply([],n.coordinates);else{if(\"Polygon\"!==n.type)throw new Error(\"Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry\");e=n.coordinates}return e.forEach(function(t){e.forEach(function(e){for(var n=0;n<t.length-1;n++)for(var o=n;o<e.length-1;o++){if(t===e){if(1===Math.abs(n-o))continue;if(0===n&&o===t.length-2&&t[n][0]===t[t.length-1][0]&&t[n][1]===t[t.length-1][1])continue}var s=function(t,e,n,r,i,o,s,a){var u,c,h,l,p,f={x:null,y:null,onLine1:!1,onLine2:!1};return 0==(u=(a-o)*(n-t)-(s-i)*(r-e))?null!==f.x&&null!==f.y&&f:(c=e-o,h=t-i,l=(s-i)*c-(a-o)*h,p=(n-t)*c-(r-e)*h,c=l/u,h=p/u,f.x=t+c*(n-t),f.y=e+c*(r-e),c>=0&&c<=1&&(f.onLine1=!0),h>=0&&h<=1&&(f.onLine2=!0),!(!f.onLine1||!f.onLine2)&&[f.x,f.y])}(t[n][0],t[n][1],t[n+1][0],t[n+1][1],e[o][0],e[o][1],e[o+1][0],e[o+1][1]);s&&i.features.push(r([s[0],s[1]]))}})}),i},t.pointOnFeature=yn,t.area=mn,t.along=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var i;if(\"Feature\"===t.type)i=t.geometry.coordinates;else{if(\"LineString\"!==t.type)throw new Error(\"input must be a LineString Feature or Geometry\");i=t.coordinates}if(!b(e))throw new Error(\"distance must be a number\");for(var o=0,s=0;s<i.length&&!(e>=o&&s===i.length-1);s++){if(o>=e){var a=e-o;if(a){var u=ge(i[s],i[s-1])-180;return pe(i[s],a,u,n)}return r(i[s])}o+=qt(i[s],i[s+1],n)}return r(i[i.length-1])},t.length=bn,t.lineSlice=function(t,e,n){var r=U(n);if(\"LineString\"!==K(n))throw new Error(\"line must be a LineString\");for(var i,o=on(n,t),s=on(n,e),u=[(i=o.properties.index<=s.properties.index?[o,s]:[s,o])[0].geometry.coordinates],c=i[0].properties.index+1;c<i[1].properties.index+1;c++)u.push(r[c]);return u.push(i[1].geometry.coordinates),a(u,n.properties)},t.lineSliceAlong=In,t.pointGrid=Ln,t.truncate=Pn,t.flatten=function(t){if(!t)throw new Error(\"geojson is required\");var e=[];return F(t,function(t){e.push(t)}),c(e)},t.lineIntersect=nn,t.lineChunk=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.units,i=n.reverse;if(!t)throw new Error(\"geojson is required\");if(e<=0)throw new Error(\"segmentLength must be greater than 0\");var o=[];return F(t,function(t){i&&(t.geometry.coordinates=t.geometry.coordinates.reverse()),function(t,e,n,r){var i=bn(t,{units:n});if(i<=e)return r(t);var o=i/e;Number.isInteger(o)||(o=Math.floor(o)+1);for(var s=0;s<o;s++){var a=In(t,e*s,e*(s+1),{units:n});r(a,s)}}(t,e,r,function(t){o.push(t)})}),c(o)},t.unkinkPolygon=function(t){var e=[];return F(t,function(t){\"Polygon\"===t.geometry.type&&O(Ls(t),function(n){e.push(o(n.geometry.coordinates,t.properties))})}),c(e)},t.greatCircle=function(t,e,n){if(\"object\"!=typeof(n=n||{}))throw new Error(\"options is invalid\");var r=n.properties,i=n.npoints,o=n.offset;return t=X(t),e=X(e),r=r||{},i=i||100,o=o||10,new qs({x:t[0],y:t[1]},{x:e[0],y:e[1]},r).Arc(i,{offset:o}).json()},t.lineSegment=en,t.lineSplit=function(t,e){if(!t)throw new Error(\"line is required\");if(!e)throw new Error(\"splitter is required\");var n=K(t),r=K(e);if(\"LineString\"!==n)throw new Error(\"line must be LineString\");if(\"FeatureCollection\"===r)throw new Error(\"splitter cannot be a FeatureCollection\");if(\"GeometryCollection\"===r)throw new Error(\"splitter cannot be a GeometryCollection\");var i=Pn(e,{precision:7});switch(r){case\"Point\":return Dn(t,i);case\"MultiPoint\":return An(t,i);case\"LineString\":case\"MultiLineString\":case\"Polygon\":case\"MultiPolygon\":return An(t,nn(t,i))}},t.lineArc=Gn,t.polygonToLine=kn,t.lineToPolygon=jn,t.bboxClip=function(t,e){var n=function(t){return t.geometry?t.geometry.type:t.type}(t),r=U(t),i=t.properties;switch(n){case\"LineString\":case\"MultiLineString\":var s=[];return\"LineString\"===n&&(r=[r]),r.forEach(function(t){Gs(t,e,s)}),1===s.length?a(s[0],i):h(s,i);case\"Polygon\":return o(Wn(r,e),i);case\"MultiPolygon\":return p(r.map(function(t){return Wn(t,e)}),i);default:throw new Error(\"geometry \"+n+\" not supported\")}},t.lineOverlap=$n,t.sector=function(t,e,n,r,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");if(!t)throw new Error(\"center is required\");if(void 0===n||null===n)throw new Error(\"bearing1 is required\");if(void 0===r||null===r)throw new Error(\"bearing2 is required\");if(!e)throw new Error(\"radius is required\");if(\"object\"!=typeof i)throw new Error(\"options must be an object\");if(er(n)===er(r))return fe(t,e,i);var s=U(t),a=[[s]];return S(Gn(t,e,n,r,i),function(t){a[0].push(t)}),a[0].push(s),o(a)},t.rhumbBearing=sn,t.rhumbDistance=un,t.rhumbDestination=nr,t.polygonTangents=function(t,e){var n,i,o,s=U(t),a=U(e);switch(K(e)){case\"Polygon\":n=a[0][0],i=a[0][0],o=ir(a[0][0],a[0][a[0].length-1],s);var u=rr(a[0],s,o,void 0,n,i);n=u[0],i=u[1];break;case\"MultiPolygon\":n=a[0][0][0],i=a[0][0][0],o=ir(a[0][0][0],a[0][0][a[0][0].length-1],s),a.forEach(function(t){var e=rr(t[0],s,o,void 0,n,i);n=e[0],i=e[1]})}return c([r(n),r(i)])},t.rewind=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.reverse||!1,r=e.mutate||!1;if(!t)throw new Error(\"<geojson> is required\");if(\"boolean\"!=typeof n)throw new Error(\"<reverse> must be a boolean\");if(\"boolean\"!=typeof r)throw new Error(\"<mutate> must be a boolean\");!1===r&&(t=Gt(t));var i=[];switch(t.type){case\"GeometryCollection\":return A(t,function(t){sr(t,n)}),t;case\"FeatureCollection\":return O(t,function(t){O(sr(t,n),function(t){i.push(t)})}),c(i)}return sr(t,n)},t.isobands=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.zProperty||\"elevation\",i=n.commonProperties||{},s=n.breaksProperties||[];if(W(t,\"Point\",\"Input must contain Points\"),!e)throw new Error(\"breaks is required\");if(!Array.isArray(e))throw new Error(\"breaks is not an Array\");if(!I(i))throw new Error(\"commonProperties is not an Object\");if(!Array.isArray(s))throw new Error(\"breaksProperties is not an Array\");var a=cr(t,{zProperty:r,flip:!0}),u=function(t,e,n){for(var r=[],i=1;i<e.length;i++){var s=+e[i-1],a=+e[i],u=hr(t,s,a-s),c=function(t){var e=[],n=[];t.forEach(function(t){var r=mn(o([t]));n.push(r),e.push({ring:t,area:r})}),n.sort(function(t,e){return e-t});var r=[];return n.forEach(function(t){for(var n=0;n<e.length;n++)if(e[n].area===t){r.push(e[n].ring),e.splice(n,1);break}}),r}(u),h=function(t){for(var e=t.map(function(t){return{lrCoordinates:t,grouped:!1}}),n=[];!function(t){for(var e=0;e<t.length;e++)if(!1===t[e].grouped)return!1;return!0}(e);)for(var r=0;r<e.length;r++)if(!e[r].grouped){var i=[];i.push(e[r].lrCoordinates),e[r].grouped=!0;for(var s=o([e[r].lrCoordinates]),a=r+1;a<e.length;a++)if(!e[a].grouped){var u=o([e[a].lrCoordinates]);(function(t,e){for(var n=me(t),r=0;r<n.features.length;r++)if(!Pt(n.features[r],e))return!1;return!0})(u,s)&&(i.push(e[a].lrCoordinates),e[a].grouped=!0)}n.push(i)}return n}(c),l={};l.groupedRings=h,l[n]=s+\"-\"+a,r.push(l)}return r}(a,e,r);return c((u=function(t,e,n){var r=j(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,c=e.length-1,h=i/u,l=o/c,p=function(t){t[0]=t[0]*h+s,t[1]=t[1]*l+a};return t.forEach(function(t){t.groupedRings.forEach(function(t){t.forEach(function(t){t.forEach(p)})})}),t}(u,a,t)).map(function(t,e){if(s[e]&&!I(s[e]))throw new Error(\"Each mappedProperty is required to be an Object\");var n=Object.assign({},i,s[e]);return n[r]=t[r],p(t.groupedRings,n)}))},t.transformRotate=fr,t.transformScale=gr,t.transformTranslate=function(t,e,n,r){if(r=r||{},!I(r))throw new Error(\"options is invalid\");var i=r.units,o=r.zTranslation,s=r.mutate;if(!t)throw new Error(\"geojson is required\");if(void 0===e||null===e||isNaN(e))throw new Error(\"distance is required\");if(o&&\"number\"!=typeof o&&isNaN(o))throw new Error(\"zTranslation is not a number\");if(o=void 0!==o?o:0,0===e&&0===o)return t;if(void 0===n||null===n||isNaN(n))throw new Error(\"direction is required\");return e<0&&(e=-e,n=-n),!1!==s&&void 0!==s||(t=Gt(t)),S(t,function(t){var r=U(nr(t,e,n,{units:i}));t[0]=r[0],t[1]=r[1],o&&3===t.length&&(t[2]+=o)}),t},t.lineOffset=function(t,e,n){if(n=n||{},!I(n))throw new Error(\"options is invalid\");var r=n.units;if(!t)throw new Error(\"geojson is required\");if(void 0===e||null===e||isNaN(e))throw new Error(\"distance is required\");var i=K(t),o=t.properties;switch(i){case\"LineString\":return vr(t,e,r);case\"MultiLineString\":var s=[];return F(t,function(t){s.push(vr(t,e,r).geometry.coordinates)}),h(s,o);default:throw new Error(\"geometry \"+i+\" is not supported\")}},t.polygonize=function(t){var e=qa.fromGeoJson(t);e.deleteDangles(),e.deleteCutEdges();var n=[],r=[];return e.getEdgeRings().filter(function(t){return t.isValid()}).forEach(function(t){t.isHole()?n.push(t):r.push(t)}),n.forEach(function(t){Da.findEdgeRingContaining(t,r)&&r.push(t)}),c(r.map(function(t){return t.toPolygon()}))},t.booleanDisjoint=function(t,e){var n;return F(t,function(t){F(e,function(e){if(!1===n)return!1;n=function(t,e){switch(t.type){case\"Point\":switch(e.type){case\"Point\":return!function(t,e){return t[0]===e[0]&&t[1]===e[1]}(t.coordinates,e.coordinates);case\"LineString\":return!wr(e,t);case\"Polygon\":return!Pt(t,e)}break;case\"LineString\":switch(e.type){case\"Point\":return!wr(t,e);case\"LineString\":return!function(t,e){return nn(t,e).features.length>0}(t,e);case\"Polygon\":return!br(e,t)}break;case\"Polygon\":switch(e.type){case\"Point\":return!Pt(e,t);case\"LineString\":return!br(t,e);case\"Polygon\":return!function(t,e){for(var n=0;n<t.coordinates[0].length;n++)if(Pt(t.coordinates[0][n],e))return!0;for(var r=0;r<e.coordinates[0].length;r++)if(Pt(e.coordinates[0][r],t))return!0;return!1}(e,t)}}}(t.geometry,e.geometry)})}),n},t.booleanContains=function(t,e){var n=K(t),r=K(e),i=J(t),o=J(e),s=U(t),a=U(e);switch(n){case\"Point\":switch(r){case\"Point\":return Nr(s,a);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"MultiPoint\":switch(r){case\"Point\":return function(t,e){var n,r=!1;for(n=0;n<t.coordinates.length;n++)if(Nr(t.coordinates[n],e.coordinates)){r=!0;break}return r}(i,o);case\"MultiPoint\":return function(t,e){for(var n=0;n<e.coordinates.length;n++){for(var r=!1,i=0;i<t.coordinates.length;i++)if(Nr(e.coordinates[n],t.coordinates[i])){r=!0;break}if(!r)return!1}return!0}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"LineString\":switch(r){case\"Point\":return Nn(o,i,{ignoreEndVertices:!0});case\"LineString\":return function(t,e){for(var n=!1,r=0;r<e.coordinates.length;r++)if(Nn({type:\"Point\",coordinates:e.coordinates[r]},t,{ignoreEndVertices:!0})&&(n=!0),!Nn({type:\"Point\",coordinates:e.coordinates[r]},t,{ignoreEndVertices:!1}))return!1;return n}(i,o);case\"MultiPoint\":return function(t,e){for(var n=!1,r=0;r<e.coordinates.length;r++)if(Nn(e.coordinates[r],t,{ignoreEndVertices:!0})&&(n=!0),!Nn(e.coordinates[r],t))return!1;return!!n}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"Polygon\":switch(r){case\"Point\":return Pt(o,i,{ignoreBoundary:!0});case\"LineString\":return function(t,e){var n=!1,r=0,i=j(t),o=j(e);if(!Ir(i,o))return!1;for(;r<e.coordinates.length-1;r++){var s=function(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}(e.coordinates[r],e.coordinates[r+1]);if(Pt({type:\"Point\",coordinates:s},t,{ignoreBoundary:!0})){n=!0;break}}return n}(i,o);case\"Polygon\":return function(t,e){var n=j(t),r=j(e);if(!Ir(n,r))return!1;for(var i=0;i<e.coordinates[0].length;i++)if(!Pt(e.coordinates[0][i],t))return!1;return!0}(i,o);case\"MultiPoint\":return function(t,e){for(var n=0;n<e.coordinates.length;n++)if(!Pt(e.coordinates[n],t,{ignoreBoundary:!0}))return!1;return!0}(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}default:throw new Error(\"feature1 \"+n+\" geometry not supported\")}},t.booleanCrosses=function(t,e){var n=K(t),r=K(e),i=J(t),o=J(e);switch(n){case\"MultiPoint\":switch(r){case\"LineString\":return Cr(i,o);case\"Polygon\":return Mr(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"LineString\":switch(r){case\"MultiPoint\":return Cr(o,i);case\"LineString\":return function(t,e){if(nn(t,e).features.length>0)for(var n=0;n<t.coordinates.length-1;n++)for(var r=0;r<e.coordinates.length-1;r++){var i=!0;if(0!==r&&r!==e.coordinates.length-2||(i=!1),Lr(t.coordinates[n],t.coordinates[n+1],e.coordinates[r],i))return!0}return!1}(i,o);case\"Polygon\":return Sr(i,o);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}case\"Polygon\":switch(r){case\"MultiPoint\":return Mr(o,i);case\"LineString\":return Sr(o,i);default:throw new Error(\"feature2 \"+r+\" geometry not supported\")}default:throw new Error(\"feature1 \"+n+\" geometry not supported\")}},t.booleanClockwise=or,t.booleanOverlap=Tr,t.booleanPointOnLine=Nn,t.booleanEqual=function(t,e){if(!t)throw new Error(\"feature1 is required\");if(!e)throw new Error(\"feature2 is required\");return K(t)===K(e)&&new ja({precision:6}).compare(te(t),te(e))},t.booleanWithin=Cn,t.clone=Gt,t.cleanCoords=te,t.clustersDbscan=function(t,e,n){if(\"object\"!=typeof(n=n||{}))throw new Error(\"options is invalid\");var r=n.minPoints,i=n.units;if(W(t,\"Point\",\"Input must contain Points\"),null===e||void 0===e)throw new Error(\"maxDistance is required\");if(!(Math.sign(e)>0))throw new Error(\"Invalid maxDistance\");if(!(void 0===r||null===r||Math.sign(r)>0))throw new Error(\"Invalid minPoints\");t=Gt(t),r=r||3;var o=new Ha.DBSCAN,s=-1;return o.run(T(t),E(e,i),r,qt).forEach(function(e){s++,e.forEach(function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster=s,n.properties.dbscan=\"core\"})}),o.noise.forEach(function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster?n.properties.dbscan=\"edge\":n.properties.dbscan=\"noise\"}),t},t.clustersKmeans=function(t,e){if(\"object\"!=typeof(e=e||{}))throw new Error(\"options is invalid\");var n=e.numberOfClusters,r=e.mutate;W(t,\"Point\",\"Input must contain Points\");var i=t.features.length;(n=n||Math.round(Math.sqrt(i/2)))>i&&(n=i),!1!==r&&void 0!==r||(t=Gt(t));var o=T(t),s=o.slice(0,n),a=eu(o,n,s),u={};return a.centroids.forEach(function(t,e){u[e]=t}),O(t,function(t,e){var n=a.idxs[e];t.properties.cluster=n,t.properties.centroid=u[n]}),t},t.pointToLineDistance=gn,t.booleanParallel=function(t,e){if(!t)throw new Error(\"line1 is required\");if(!e)throw new Error(\"line2 is required\");if(\"LineString\"!==Dr(t,\"line1\"))throw new Error(\"line1 must be a LineString\");if(\"LineString\"!==Dr(e,\"line2\"))throw new Error(\"line2 must be a LineString\");for(var n=en(te(t)).features,r=en(te(e)).features,i=0;i<n.length;i++){var o=n[i].geometry.coordinates;if(!r[i])break;if(!function(t,e){var n=m(sn(t[0],t[1])),r=m(sn(e[0],e[1]));return n===r}(o,r[i].geometry.coordinates))return!1}return!0},t.shortestPath=function(t,n,i){if(i=i||{},!I(i))throw new Error(\"options is invalid\");var o=i.resolution,s=i.minDistance,u=i.obstacles||c([]);if(!t)throw new Error(\"start is required\");if(!n)throw new Error(\"end is required\");if(o&&!b(o)||o<=0)throw new Error(\"options.resolution must be a number, greater than 0\");if(s)throw new Error(\"options.minDistance is not yet implemented\");var h=X(t),l=X(n);switch(t=r(h),n=r(l),K(u)){case\"FeatureCollection\":if(0===u.features.length)return a([h,l]);break;case\"Polygon\":u=c([e(J(u))]);break;default:throw new Error(\"invalid obstacles\")}var p=u;p.features.push(t),p.features.push(n);var f=j(gr(ce(j(p)),1.15));o||(o=qt([f[0],f[1]],[f[2],f[1]],i)/100);p.features.pop(),p.features.pop();for(var g=f[0],d=f[1],y=f[2],_=f[3],m=o/qt([g,d],[y,d],i)*(y-g),v=o/qt([g,d],[g,_],i)*(_-d),x=y-g,E=_-d,w=(x-Math.floor(x/m)*m)/2,N=[],C=[],S=[],M=[],L=1/0,P=1/0,O=_-(E-Math.floor(E/v)*v)/2,R=0;O>=d;){for(var T=[],A=[],D=g+w,F=0;D<=y;){var q=r([D,O]),G=function(t,e){for(var n=0;n<e.features.length;n++)if(Pt(t,e.features[n]))return!0;return!1}(q,u);T.push(G?0:1),A.push(D+\"|\"+O);var B=qt(q,t);!G&&B<L&&(L=B,S={x:F,y:R});var k=qt(q,n);!G&&k<P&&(P=k,M={x:F,y:R}),D+=m,F++}C.push(T),N.push(A),O-=v,R++}var z=new qr(C,{diagonal:!0}),U=z.grid[S.y][S.x],Y=z.grid[M.y][M.x],V=[h];return nu.search(z,U,Y).forEach(function(t){var e=N[t.x][t.y].split(\"|\");V.push([+e[0],+e[1]])}),V.push(l),te(a(V))},t.voronoi=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.bbox||[-180,-85,180,85];if(!t)throw new Error(\"points is required\");if(!Array.isArray(n))throw new Error(\"bbox is invalid\");return W(t,\"Point\",\"points\"),c(fu().x(function(t){return t.geometry.coordinates[0]}).y(function(t){return t.geometry.coordinates[1]}).extent([[n[0],n[1]],[n[2],n[3]]]).polygons(t.features).map(li))},t.ellipse=pi,t.centerMean=gi,t.centerMedian=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.counter||10;if(!b(n))throw new Error(\"counter must be a number\");var r=e.weight,i=gi(t,{weight:e.weight}),o=c([]);return O(t,function(t){o.features.push(ye(t,{weight:t.properties[r]}))}),o.properties={tolerance:e.tolerance,medianCandidates:[]},di(i.geometry.coordinates,[0,0],o,n)},t.standardDeviationalEllipse=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.steps||64,r=e.weight,i=e.properties||{};if(!b(n))throw new Error(\"steps must be a number\");if(!I(i))throw new Error(\"properties must be a number\");var o=T(t).length,s=gi(t,{weight:r}),a=0,u=0,h=0;O(t,function(t){var e=t.properties[r]||1,n=yi(U(t),U(s));a+=Math.pow(n.x,2)*e,u+=Math.pow(n.y,2)*e,h+=n.x*n.y*e});var l=a-u,p=Math.sqrt(Math.pow(l,2)+4*Math.pow(h,2)),f=2*h,g=Math.atan((l+p)/f),d=180*g/Math.PI,y=0,_=0,m=0;O(t,function(t){var e=t.properties[r]||1,n=yi(U(t),U(s));y+=Math.pow(n.x*Math.cos(g)-n.y*Math.sin(g),2)*e,_+=Math.pow(n.x*Math.sin(g)+n.y*Math.cos(g),2)*e,m+=e});var v=Math.sqrt(2*y/m),x=Math.sqrt(2*_/m),E=pi(s,v,x,{units:\"degrees\",angle:d,steps:n,properties:i}),w=Rt(t,c([E])),N={meanCenterCoordinates:U(s),semiMajorAxis:v,semiMinorAxis:x,numberOfFeatures:o,angle:d,percentageWithinEllipse:100*T(w).length/o};return E.properties.standardDeviationalEllipse=N,E},t.difference=function(t,n){var r=J(t),i=J(n),o=t.properties||{};if(r=Ui(r),i=Ui(i),!r)return null;if(!i)return e(r,o);var s=new bh,a=s.read(r),u=s.read(i),c=Cf.difference(a,u);return c.isEmpty()?null:e((new Ih).write(c),o)},t.buffer=function(t,e,n){var r=(n=n||{}).units,i=n.steps||64;if(!t)throw new Error(\"geojson is required\");if(\"object\"!=typeof n)throw new Error(\"options must be an object\");if(\"number\"!=typeof i)throw new Error(\"steps must be an number\");if(void 0===e)throw new Error(\"radius is required\");if(i<=0)throw new Error(\"steps must be greater than 0\");i=i||64,r=r||\"kilometers\";var o=[];switch(t.type){case\"GeometryCollection\":return A(t,function(t){var n=bo(t,e,r,i);n&&o.push(n)}),c(o);case\"FeatureCollection\":return O(t,function(t){var n=bo(t,e,r,i);n&&O(n,function(t){t&&o.push(t)})}),c(o)}return bo(t,e,r,i)},t.union=Mo,t.intersect=Lo,t.dissolve=function(t,e){if(e=e||{},!I(e))throw new Error(\"options is invalid\");var n=e.propertyName;W(t,\"Polygon\",\"dissolve\");var r=Gt(t),i=r.features,o=[];i.forEach(function(t,e){t.properties.origIndexPosition=e});var s=Qe();s.load(r);for(var u in i){var c=i[u],h=!1;if(s.search(c).features.forEach(function(t){c=i[u];var e=t.properties.origIndexPosition;if(o.length>0&&0!==e)if(e>o[o.length-1])e-=o.length;else{var r=Po(e,o);0!==r&&(e-=r)}if(e!==+u){var l=i[e];l&&c&&(void 0!==n&&l.properties[n]!==c.properties[n]||Tr(c,l)&&function(t,e){var n=a(T(t)),r=a(T(e));return nn(n,r).features.length>0}(c,l)&&(i[u]=Mo(c,l),o.push(t.properties.origIndexPosition),o.sort(function(t,e){return t-e}),s.remove(t),i.splice(e,1),c.properties.origIndexPosition=u,s.remove(c,function(t,e){return t.properties.origIndexPosition===e.properties.origIndexPosition}),h=!0))}}),h){if(!c)continue;c.properties.origIndexPosition=u,s.insert(c),u--}}return i.forEach(function(t){delete t.properties.origIndexPosition,delete t.bbox}),r},t.hexGrid=Oo,t.mask=function(t,e){var n=function(t){return o(t&&t.geometry.coordinates||[[[180,90],[-180,90],[-180,-90],[180,-90],[180,90]]])}(e),r=function(t){var e=[],n=[];return F(t,function(t){var r=t.geometry.coordinates,i=r[0],s=r.slice(1);e.push(o([i])),s.forEach(function(t){n.push(o([t]))})}),[c(e),c(n)]}(t),i=r[0],s=r[1];return function(t,e,n){var r=[];return r.push(t.geometry.coordinates[0]),F(e,function(t){r.push(t.geometry.coordinates[0])}),F(n,function(t){r.push(t.geometry.coordinates[0])}),o(r)}(n,i=Ro(i),s=Ro(s))},t.squareGrid=Ao,t.triangleGrid=Do,t.interpolate=function(t,e,n){if(\"object\"!=typeof(n=n||{}))throw new Error(\"options is invalid\");var r=n.gridType,i=n.property,o=n.weight;if(!t)throw new Error(\"points is required\");if(W(t,\"Point\",\"input must contain Points\"),!e)throw new Error(\"cellSize is required\");if(void 0!==o&&\"number\"!=typeof o)throw new Error(\"weight must be a number\");i=i||\"elevation\",r=r||\"square\",o=o||1;var s,a=j(t);switch(r){case\"point\":case\"points\":s=Ln(a,e,n);break;case\"square\":case\"squares\":s=Ao(a,e,n);break;case\"hex\":case\"hexes\":s=Oo(a,e,n);break;case\"triangle\":case\"triangles\":s=Do(a,e,n);break;default:throw new Error(\"invalid gridType\")}var u=[];return O(s,function(e){var s=0,a=0;O(t,function(t){var u,c=qt(\"point\"===r?e:ye(e),t,n);if(void 0!==i&&(u=t.properties[i]),void 0===u&&(u=t.geometry.coordinates[2]),void 0===u)throw new Error(\"zValue is missing\");0===c&&(s=u);var h=1/Math.pow(c,o);a+=h,s+=h*u});var c=Gt(e);c.properties[i]=s/a,u.push(c)}),c(u)},t.pointOnSurface=yn,t.polygonToLineString=kn,t.lineStringToPolygon=jn,t.inside=Pt,t.within=Rt,t.bezier=ue,t.nearest=Fe,t.pointOnLine=on,t.lineDistance=bn,t.radians2degrees=v,t.degrees2radians=x,t.distanceToDegrees=_,t.distanceToRadians=y,t.radiansToDistance=d,t.bearingToAngle=m,t.convertDistance=E,t.toMercator=cn,t.toWgs84=hn,t.randomPosition=_i,t.randomPoint=mi,t.randomPolygon=vi,t.randomLineString=xi,t.getCluster=wi,t.clusterEach=bi,t.clusterReduce=Ii,t.createBins=Ni,t.applyFilter=Ci,t.propertiesContainsFilter=Si,t.filterProperties=Mi,t.earthRadius=Fo,t.factors=qo,t.unitsFactors=Go,t.areaFactors=Bo,t.feature=e,t.geometry=n,t.point=r,t.points=i,t.polygon=o,t.polygons=s,t.lineString=a,t.lineStrings=u,t.featureCollection=c,t.multiLineString=h,t.multiPoint=l,t.multiPolygon=p,t.geometryCollection=f,t.round=g,t.radiansToLength=d,t.lengthToRadians=y,t.lengthToDegrees=_,t.bearingToAzimuth=m,t.radiansToDegrees=v,t.degreesToRadians=x,t.convertLength=E,t.convertArea=w,t.isNumber=b,t.isObject=I,t.validateBBox=N,t.validateId=C,t.getCoord=X,t.getCoords=U,t.containsNumber=Y,t.geojsonType=V,t.featureOf=H,t.collectionOf=W,t.getGeom=J,t.getGeomType=Z,t.getType=K,t.coordEach=S,t.coordReduce=M,t.propEach=L,t.propReduce=P,t.featureEach=O,t.featureReduce=R,t.coordAll=T,t.geomEach=A,t.geomReduce=D,t.flattenEach=F,t.flattenReduce=q,t.segmentEach=G,t.segmentReduce=B,t.lineEach=k,t.lineReduce=z,Object.defineProperty(t,\"__esModule\",{value:!0})});\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  var featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          this$1.overlay_.getSource().removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array.<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  var this$1 = this;\n\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this$1.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this$1.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this$1.insertVertex_.apply(this$1, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  var this$1 = this;\n\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this$1.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates = (void 0);\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this$1.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this$1.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this$1.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this$1.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this$1.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  var this$1 = this;\n\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    var segmentData = this$1.dragSegments_[i][0];\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  var pixel = mapBrowserEvent.pixel;\n  var map = mapBrowserEvent.map;\n\n  var extent = this.getExtent();\n  var vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  var getOpposingPoint = function(point) {\n    var x_ = null;\n    var y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    var pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  var extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array.<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array.<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      var formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      var format = new formatConstructor();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","import View from 'ol/View'\nimport Map from 'ol/Map'\nimport TileLayer from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport * as two_rectangles from './two-rectangles.geo.json';\nimport {combine, featureCollection, flattenEach, toMercator} from '@turf/turf';\nimport Fill from \"ol/style/Fill\";\nimport Style from \"ol/style/Style\";\nimport Draw, {createBox} from \"ol/interaction/Draw\";\nimport Stroke from \"ol/style/Stroke\";\nimport RegularShape from \"ol/style/RegularShape\";\n\nconst coords = [-105.3369140625, 39.863371338285305];\n\nconst COLORS = {\n    red: '#ff0010',\n    green: '#23ff00',\n    added: '#b500ff'\n};\n\nconst log = function (item) {\n    window.console.log(item);\n};\n\n\nconst inputJson = two_rectangles;\n\nclass Thresholder {\n\n    constructor() {\n        this._vectorSource = new VectorSource({\n            format: new GeoJSON(),\n        });\n        this._vectorLayer = new VectorLayer({\n            source: this._vectorSource,\n            opacity: 0.5,\n            style: new Style({\n                fill: new Fill({\n                    color: '#d40000',\n                })\n            })\n        });\n        this._turfFeatureCollection = [];\n    }\n\n    getVectorLayer() {\n        return this._vectorLayer;\n    }\n\n    setVectorLayer(vectorLayer) {\n        this._vectorLayer = vectorLayer;\n        return this;\n    }\n\n    getVectorSource() {\n        return this._vectorSource;\n    }\n\n    setVectorSource(vectorSource) {\n        this._vectorSource = vectorSource;\n        return this;\n    }\n\n\n    parse() {\n        this._turfFeatureCollection.features.forEach(ft => {\n            const olFeature = new GeoJSON({\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n            }).readFeature(ft);\n            this._vectorSource.addFeature(olFeature);\n        });\n        return this;\n    }\n\n    setFeatureCollection(input) {\n        this._turfFeatureCollection = featureCollection(input.features);\n        return this;\n    }\n}\n\nwindow.onload = () => {\n    const target = document.getElementById('map');\n    let draw;\n    let thresholder = new Thresholder(inputJson);\n    // thresholder.setFeatureCollection(inputJson);\n    // thresholder.parse();\n\n\n    window.fmt = new GeoJSON();\n\n    const keyMappings = {\n        isDeleting: false,\n        drawStyle: 'box',\n    };\n\n    const drawSource = new VectorSource({\n        format: new GeoJSON(),\n    });\n\n\n    const drawLayer = new VectorLayer({\n        source: drawSource,\n        opacity: 0.5,\n        style: new Style({\n            opacity: 0.5,\n            fill: new Fill({\n                color: COLORS.red,\n                opacity: 0.5,\n            })\n        })\n    });\n\n\n    let map = new Map({\n        target,\n        view: new View({\n            center: toMercator(coords),\n            zoom: 9,\n        }),\n        layers: [\n            new TileLayer({source: new OSM(),}), drawLayer, thresholder.getVectorLayer()\n        ]\n    });\n\n    function getRandomColor() {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n\n    const handleDrawEnd = function (evt) {\n        log(\"Drawing ended.\");\n        const turfpoly = turf.polygon(evt.feature.getGeometry().getCoordinates());\n        const feat = fmt.readFeatureFromObject(turfpoly);\n        const featExtent = feat.getGeometry().getExtent();\n\n        drawLayer.getSource().forEachFeature(ft => {\n            ft.setStyle(new Style({\n                fill: new Fill({\n                    color: COLORS.red,\n                })\n            }))\n        });\n\n\n        feat.setStyle(new Style({\n            fill: new Fill({\n                color: COLORS.added,\n            })\n        }));\n\n        log(\"isDeleting: \" + keyMappings.isDeleting);\n        drawLayer.getSource().addFeature(feat);\n        const combo = combine(fmt.writeFeaturesObject(drawLayer.getSource().getFeatures()));\n        let cs = [];\n        flattenEach(featureCollection(combo.features), function (currentFeature, featureIndex, multiFeatureIndex) {\n            currentFeature.properties = {};\n            cs.push(currentFeature)\n        });\n        const flatFeaturesCollection = featureCollection(cs);\n        window.flatFeaturesCollection = flatFeaturesCollection;\n        log(flatFeaturesCollection)\n        // window.combo = combo;\n        // const total = parseFloat(area(combo)) / 2.0;\n        // log(total)\n        // log(convertArea(total, 'meters', 'kilometers') / 2)\n        // map.getView().fit(drawLayer.getSource().getExtent(), map.getSize())\n        // map.getView().fit(featExtent, map.getSize())\n        // const curZoom = map.getView().getZoom() - 1;\n        // map.getView().setZoom(curZoom)\n\n    };\n\n\n    function addInteraction() {\n        map.removeInteraction(draw);\n        const ds = new Style({\n            opacity: 0.2,\n            image: new RegularShape({\n                fill: new Fill({\n                    color: 'red',\n                    opacity: 0.2,\n                }),\n                points: 4,\n                radius1: 15,\n                radius2: 1,\n                opacity: 0.2,\n            }),\n            stroke: new Stroke({\n                color: 'black',\n                width: 0,\n                opacity: 0.5,\n            }),\n            fill: new Fill({\n                color: COLORS.red,\n                opacity: 0.5,\n            })\n        });\n\n        if (keyMappings.drawStyle === 'box') {\n            draw = new Draw({\n                source: drawSource,\n                type: 'Circle',\n                freehand: true,\n                geometryFunction: createBox(),\n                style: ds\n\n            });\n        }\n        if (keyMappings.drawStyle === 'polygon') {\n            draw = new Draw({\n                source: drawSource,\n                type: 'Polygon',\n                freehand: true,\n                style: ds\n            });\n        }\n\n\n        draw.on('drawend', handleDrawEnd);\n        map.addInteraction(draw);\n    }\n\n    addInteraction();\n\n    const pointerMoveHandler = function (evt) {\n        if (evt.dragging) {\n            log(\"Dragging\");\n        }\n    };\n    map.on('pointermove', pointerMoveHandler);\n    window.map = map;\n    window.drawLayer = drawLayer;\n\n    document.addEventListener('keyup', (event) => {\n        log(event.key);\n        if (event.key === 'd') {\n            keyMappings.isDeleting = !keyMappings.isDeleting;\n            addInteraction()\n        }\n        if (event.key === 'f') {\n            keyMappings.drawStyle = 'polygon';\n            log(\"Polygon style drawing\");\n            addInteraction()\n        }\n        if (event.key === 'd') {\n            keyMappings.drawStyle = 'box';\n            log(\"Box style drawing\");\n            addInteraction()\n        }\n        // TODO: copy geojson to clipboard\n        // if (event.key === 'x') {\n        //     log(window.flatFeaturesCollection);\n        //     window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", JSON.stringify(window.flatFeaturesCollection));\n        // }\n        if (event.key === 'q') {\n            const curZoom = map.getView().getZoom();\n            const newZoom = curZoom + 1;\n            map.getView().setZoom(newZoom)\n        }\n        if (event.key === 'w') {\n            const curZoom = map.getView().getZoom();\n            const newZoom = curZoom - 1;\n            map.getView().setZoom(newZoom)\n        }\n    });\n\n\n};\n"],"sourceRoot":""}